var selectedf = false;
function checkAll(field)
{
	if (!selectedf) {
		for (i = 0; i < field.length; i++)
		field[i].checked = true ;
		selectedf = true;
	} else {
		for (i = 0; i < field.length; i++)
		field[i].checked = false ;
		selectedf = false;
	}
}


function checkAll(field,prefix,sel)
{
		for (i = 0; i < field.length; i++)
		{
			if ( field[i].name.indexOf(prefix) == 0 )
			{
				field[i].checked = sel;
			}
		}
}

function checkAll(field,prefix)
{
	if (!selectedf)
	{
		for (i = 0; i < field.length; i++)
		{
			if ( field[i].name && field[i].name.indexOf(prefix) == 0 )
			{
				field[i].checked = true ;
				
			}
		}
		selectedf = true;
	}
	else
	{
		for (i = 0; i < field.length; i++)
		{
			if ( field[i].name && field[i].name.indexOf(prefix) == 0 )
			{
				field[i].checked = false ;
			}
		}
		selectedf = false;
	}
}


function isWhitespace (c) 
{
    var whitespace = " \t\r\n\f\'";
    return (whitespace.indexOf (c) != -1);
}

function isDigit (str) 
{
    if (str == null) 
	{
        return (false);
    }
    if (isNaN(str))
    {
	return (false);
    }
	else if(str<=0)
	{
		return (false);
	}
    return (true);
}

function isBlank (str) 
{
    if (str == null) {
        return (true);
        }
    for (var i = 0; i < str.length; i++) {        
        var c = str.charAt (i);
        if (!isWhitespace (c)) {
           return (false);
           }
        }
    return (true);
}


function isValidEmail (str) 
{
    if (str == null) {
        return (false);
        }
    str = trim (str);                        // Start by trimming off whitespace at both ends
    for (var i = 0; i < str.length; i++) {   // Check that the address does not contain whitespace
        var c = str.charAt (i);
        if (isWhitespace (c)) {
           return (false);
           }
        }
    if (window.RegExp) {
        var tempStr = "a";  // First check that regular expression support is present
        var tempReg = new RegExp (tempStr);
        if (tempReg.test (tempStr)) {
            var r1 = new RegExp ("(@.*@)|(@\\.)|(^\\.)");
            var r2 = new RegExp ("^[a-zA-Z0-9\\!\\#\\$\\%\\&\\'\\*\\+\\-\\.\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~]+\\@(\\[?)[a-zA-Z0-9\\-\\.]+\\.([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$"); // Filter according to RFC822 rules
            return (!r1.test(str) && r2.test(str));
            }
        }
    return (str.indexOf (".") > 2) && (str.indexOf ("@") > 0);
}

function isValidZIP (str) 
{
    if (str == null) {
        return (false);
        }
    str = trim (str);                        // Start by trimming off whitespace at both ends
    if ((str.length != 5) && (str.length != 10)) {
       return (false);
       }
    for (var i = 0; i < str.length; i++) {   // Check that the address does not contain whitespace
        var c = str.charAt (i);
        if (i == 5) {
           if (c != '-') {
              return (false);
              }
           }
        else {
           if (!isDigit (c)) {
              return (false);
              }
           }
        }
    return (true);
}

function checkemail(str) 
{

		var at="@"
		var dot="."
		var lat=str.indexOf(at)
		var lstr=str.length
		var ldot=str.indexOf(dot)
		if (str.indexOf(at)==-1){
		   alert("Invalid E-mail ID")
		   return false
		}

		if (str.indexOf(at)==-1 || str.indexOf(at)==0 || str.indexOf(at)==lstr){
		   alert("Invalid E-mail ID")
		   return false
		}

		if (str.indexOf(dot)==-1 || str.indexOf(dot)==0 || str.indexOf(dot)==lstr){
		    alert("Invalid E-mail ID")
		    return false
		}

		 if (str.indexOf(at,(lat+1))!=-1){
		    alert("Invalid E-mail ID")
		    return false
		 }

		 if (str.substring(lat-1,lat)==dot || str.substring(lat+1,lat+2)==dot){
		    alert("Invalid E-mail ID")
		    return false
		 }

		 if (str.indexOf(dot,(lat+2))==-1){
		    alert("Invalid E-mail ID")
		    return false
		 }
		
		 if (str.indexOf(" ")!=-1){
		    alert("Invalid E-mail ID")
		    return false
		 }

 		 return true					
	}


	function checkemailUsername(str) 
{

		var at="@"
		var dot="."
		var lat=str.indexOf(at)
		var lstr=str.length
		var ldot=str.indexOf(dot)
		if (str.indexOf(at)==-1){
		   alert("Please enter a valid username.")
		   return false
		}

		if (str.indexOf(at)==-1 || str.indexOf(at)==0 || str.indexOf(at)==lstr){
		   alert("Please enter a valid username.")
		   return false
		}

		if (str.indexOf(dot)==-1 || str.indexOf(dot)==0 || str.indexOf(dot)==lstr){
		    alert("Please enter a valid username.")
		    return false
		}

		 if (str.indexOf(at,(lat+1))!=-1){
		    alert("Please enter a valid username.")
		    return false
		 }

		 if (str.substring(lat-1,lat)==dot || str.substring(lat+1,lat+2)==dot){
		    alert("Please enter a valid username.")
		    return false
		 }

		 if (str.indexOf(dot,(lat+2))==-1){
		    alert("Please enter a valid username.")
		    return false
		 }
		
		 if (str.indexOf(" ")!=-1){
		    alert("Please enter a valid username.")
		    return false
		 }

 		 return true					
	}

function assignValue(form,val,prefix)
{
 	if(val!="")
	{
		eval( "form."+prefix+".value =	"+val);
	}

}

function printWindow(url,width,height)
{
		var winl = (screen.width - width) / 2;
     	var wint = (screen.height - height) / 2;
	eval("page = window.open(url, 'Forstar_Foods', 'top="+ wint +", left="+ winl +",  status=1,scrollbars=1,location=0,resizable=1,width="+ width +",height="+ height +"');");

	/*
	//removed on 16-07-07
	var newwindow	=	window.open(url,'Forstar+Foods',"width="+width+", height="+height+", top=300, left=500,  status=1, scrollbars=1, resizable=1");
	//alert(newwindow);
	return false;*/ 
}

function confirmSave()
{
	var saveMsg	=	"Do you wish to save the changes?";
	if(confirm(saveMsg))
	{
		return true;
	}
	return false;
	
}

function cancel(url)
{
	var cancelMsg	=	"Do you wish to cancel?";
	if(confirm(cancelMsg))
	{
		 window.location.href =	"url";
	}
	else
	{
		return false;
	}
	return true;
}

/* Confirm delete when using checkbox **/
function confirmDelete(form,prefix,rowcount)
{
	
	var rowCount	=	rowcount;
	var fieldPrefix	=	prefix;
	var conDelMsg	=	"Do you wish to delete the selected items?";
	
	if(!isAnyChecked(rowCount,fieldPrefix))
	{
		alert("Please select a record to delete.");
		return false;
	}
	
	if(confirm(conDelMsg))
	{
		return true;
	}
		
	return false;

}

function isAnyChecked(rowCount,fieldPrefix)
{
	for ( i=1; i<=rowCount; i++ )
	{
		if(document.getElementById(fieldPrefix+i).checked)
		{
			return true;
		}		
	}
	return false;
}

function formatNumber(num,dec,thou,pnt,curr1,curr2,n1,n2) 
{
	var x = Math.round(num * Math.pow(10,dec));
	if (x >= 0) n1=n2='';
	var y = (''+Math.abs(x)).split('');
	var z = y.length - dec;
	y.splice(z, 0, pnt);
	while (z > 3) {
		z-=3;
		y.splice(z,0,thou);
	}
	var r = curr1+n1+y.join('')+n2+curr2;
	if (parseFloat(r)==0)	{
		return "0.00";
	}
	return r;
}

//Get KeyCode
function getKeyCode(e)
{
	if(window.event!=undefined) return window.event.keyCode;
	return e.which;
}

//Days calculation from the current date
function findDaysDiff(selectDate)
{
	
	var deltaD = (servertimeOBJ.getTime())-(new Date().getTime());
	var clientDate = new Date();
	var today = new Date(clientDate.getTime()+deltaD);
	var days = 0;
	var difference = 0;
	//var today = new Date() ;
	SDate 	=	selectDate.split("/");
	var entryDate = new Date(SDate[2],SDate[1]-1,SDate[0]);
	difference = (entryDate.getTime()) - (today.getTime()) ;
	days = Math.round(difference/(1000*60*60*24));
	//alert("today="+today+"entry="+entryDate+"Days="+days);	
	return (days);
}
//Selected From and To date check
function checkDateSelected(fromDate,toDate){
	var days = 0;
	var difference = 0;
	fDate 	=	fromDate.split("/");
	var selFDate = new Date(fDate[2],fDate[1],fDate[0]);
	tDate 	=	toDate.split("/");
	var selTDate = new Date(tDate[2],tDate[1],tDate[0]);
	difference = selFDate - selTDate;
	days = Math.round(difference/(1000*60*60*24));
	return days;
}

function confirmCancelChallan(form, prefix, rowcount)
{
	
	var rowCount	=	rowcount;
	var fieldPrefix	=	prefix;

	var conDelMsg	=	"Do you wish to cancel the selected Challan?";
	
	if (!isAnyChecked(rowCount,fieldPrefix)) {
		alert("Please select a record.");
		return false;
	}
	
	if (confirm(conDelMsg)) {
		return true;
	}		
	return false;
}


/* Confirm   when using checkbox -- edited on 09-2-08* */
function confirmSelRow(form, prefix, rowcount)
{
	
	var rowCount	=	rowcount;
	var fieldPrefix	=	prefix;

	var conDelMsg	=	"Do you wish to Continue?";
	
	if (!isAnyChecked(rowCount,fieldPrefix)) {
		alert("Please select a record.");
		return false;
	}
	
	if (confirm(conDelMsg)) {
		return true;
	}
		
	return false;
}

function confirmContinue()
{
	var saveMsg	=	"Do you wish to Continue?";
	if (confirm(saveMsg)) {
		return true;
	}
	return false;
}
//Number Format
function number_format( number, decimals, dec_point, thousands_sep ) {
    // From : http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_number_format/
    // *     example 1: number_format(1234.5678, 2, '.', '');
    // *     returns 1: 1234.57
 
    var i, j, kw, kd, km;
 
    // input sanitation & defaults
    if (isNaN(decimals = Math.abs(decimals))) {
        decimals = 2;
    }
    if (dec_point == undefined) {
        dec_point = ",";
    }
    if (thousands_sep == undefined) {
        thousands_sep = ".";
    }
 
    i = parseInt(number = (+number || 0).toFixed(decimals)) + "";
 
    if ((j = i.length) > 3) {
        j = j % 3;
    } else{
        j = 0;
    }
 
    km = (j ? i.substr(0, j) + thousands_sep : "");
    kw = i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thousands_sep);
    //kd = (decimals ? dec_point + Math.abs(number - i).toFixed(decimals).slice(2) : "");
    kd = (decimals ? dec_point + Math.abs(number - i).toFixed(decimals).replace(/-/, 0).slice(2) : "");
 
    return km + kw + kd;
}
/**************** Date Format checking starts here *****************/
/**
 * DHTML date validation script for dd/mm/yyyy. Courtesy of SmartWebby.com (http://www.smartwebby.com/dhtml/)
 */
// Declaring valid date character, minimum year and maximum year
var dtCh= "/";
var minYear=1900;
var maxYear=2100;

function isInteger(s){
	var i;
    for (i = 0; i < s.length; i++){   
        // Check that current character is number.
        var c = s.charAt(i);
        if (((c < "0") || (c > "9"))) return false;
    }
    // All characters are numbers.
    return true;
}

function stripCharsInBag(s, bag){
	var i;
    var returnString = "";
    // Search through string's characters one by one.
    // If character is not in bag, append to returnString.
    for (i = 0; i < s.length; i++){   
        var c = s.charAt(i);
        if (bag.indexOf(c) == -1) returnString += c;
    }
    return returnString;
}

function daysInFebruary (year){
	// February has 29 days in any year evenly divisible by four,
    // EXCEPT for centurial years which are not also divisible by 400.
    return (((year % 4 == 0) && ( (!(year % 100 == 0)) || (year % 400 == 0))) ? 29 : 28 );
}
function DaysArray(n) {
	for (var i = 1; i <= n; i++) {
		this[i] = 31
		if (i==4 || i==6 || i==9 || i==11) {this[i] = 30}
		if (i==2) {this[i] = 29}
   } 
   return this
}

function isDate(dtStr)
{
	var daysInMonth = DaysArray(12)
	var pos1=dtStr.indexOf(dtCh)
	var pos2=dtStr.indexOf(dtCh,pos1+1)
	var strDay=dtStr.substring(0,pos1)
	var strMonth=dtStr.substring(pos1+1,pos2)
	var strYear=dtStr.substring(pos2+1)
	strYr=strYear
	if (strDay.charAt(0)=="0" && strDay.length>1) strDay=strDay.substring(1)
	if (strMonth.charAt(0)=="0" && strMonth.length>1) strMonth=strMonth.substring(1)
	for (var i = 1; i <= 3; i++) {
		if (strYr.charAt(0)=="0" && strYr.length>1) strYr=strYr.substring(1)
	}
	month=parseInt(strMonth)
	day=parseInt(strDay)
	year=parseInt(strYr)
	if (pos1==-1 || pos2==-1){
		alert("The date format should be : dd/mm/yyyy")
		return false
	}
	if (strMonth.length<1 || month<1 || month>12){
		alert("Please enter a valid month")
		return false
	}
	if (strDay.length<1 || day<1 || day>31 || (month==2 && day>daysInFebruary(year)) || day > daysInMonth[month]){
		alert("Please enter a valid day")
		return false
	}
	if (strYear.length != 4 || year==0 || year<minYear || year>maxYear){
		alert("Please enter a valid 4 digit year between "+minYear+" and "+maxYear)
		return false
	}
	if (dtStr.indexOf(dtCh,pos2+1)!=-1 || isInteger(stripCharsInBag(dtStr, dtCh))==false){
		alert("Please enter a valid date")
		return false
	}
return true
}
/**************** Date Format checking Ends here *****************/

function confirmRemoveItem()
{
	if( confirm("Do you wish to remove this item?") ) return true;
	return false;
}

/* common Confirm delete */
function confirmMsgDel()
{	
	var conDelMsg	=	"Do you wish to delete the selected items?";
	if (confirm(conDelMsg)) return true;		
	return false;
}

// Checking the number is integer/ float
function checkNumber(x)
{	
	var anum=/(^\d+$)|(^\d+\.\d+$)/
	if (anum.test(x)) {
		testresult=true
	} else {
		alert("Please enter a valid number!")
		testresult=false
	}
	return (testresult)
}


function validateLogin(form)
{
	var uname= form.txtUsername.value;
	var pword= form.txtPwd.value;
	
	if ( !checkemailUsername(uname) )
	{
		form.txtUsername.focus();
		return false;
	}
	else if (pword=="")
	{
		alert("Please enter valid password.");
		form.txtPwd.focus();
		return false;
	}
	
	return true;		
}

function confirmLogout()
{
	var confirmMsg	=	confirm("Do you wish to logout?")

	if(confirmMsg)
	{
		window.location='Logout.php';
	}
	/*else {
		//window.location='Home.php';
		return false;
	}*/
}

var newwindow;
//var windowFeatures;
function mynewwindow(url)
{
	
	newwindow=window.open(url,'IM','status=0, scrollbars=1, resizable=1, titlebar=no'); 
} function validateAddFish(form)
{
	
	var fishCode	=	form.fishCode.value;
	var fishName	=	form.fishName.value;
	var category	=	form.fishCategory.value;
	
	if( fishCode=="" )
	{
		alert("Please enter a fish code.");
		form.fishCode.focus();
		return false;
	}
	else if( fishName=="" )
	{
		alert("Please enter a fish name.");
		form.fishName.focus();
		return false;
	}
	if( category=="" )
	{
		alert("Please select a category.");
		form.fishCategory.focus();
		return false;
	}
	
	
	if(!confirmSave()){
			return false;
	}
	return true;

}





function displayUnit()
{
	
	if(document.getElementById("selUnit").value !="" )
	{
		document.getElementById("displayUnit").innerHTML	=	document.getElementById("selUnit").value;
	}
}

function validateAddGrade(form)
{
	
	var fishCode	=	form.gradeCode.value;
	var min		=	form.minimum.value;
	var max			=	form.maximum.value;

	if( fishCode=="" )
	{
		alert("Please enter a grade code.");
		form.gradeCode.focus();
		return false;
	}
	else if ( min=="")
	{
		alert("Please enter a minimum grade.");
		form.minimum.focus();
		return false;
	}
	else if(min<=0)
	{
		alert("Minimum should be greater than zero.");
		form.minimum.focus();
		return false;
	}
	else if(!isDigit(min))
	{
		alert("Please enter digits only.");
		form.minimum.focus();
		return false;
	}
	else if ( max=="")
	{
		alert("Please enter a maximum grade.");
		form.maximum.focus();
		return false;
	}
	else if(max<=0)
	{
		alert("Maximum should be greater than zero.");
		form.maximum.focus();
		return false;
	}
		
		
	else if(!isDigit(max))
	{
		alert("Please enter digits only.");
		form.maximum.focus();
		return false;
	}
	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}

/*
function confirmDelete(form,prefix,)
{
	
	var rowCount	=	form.hidRowCount.value;
	var fieldPrefix	=	prefix;
	var conDelMsg	=	"Do you wish to delete the selected items?";
	
	if(!isAnyChecked(rowCount,fieldPrefix))
	{
		alert("Please select a record to delete.");
		return false;
	}
	
	if(confirm(conDelMsg))
	{
		return true;
	}
		
	return false;

}

function isAnyChecked(rowCount,fieldPrefix)
{

	for ( i=1; i<=rowCount; i++ )
	{
		if(document.getElementById(fieldPrefix+i).checked)
		{
			return true;
		}		
	}
	return false;
}
*/

function validateAddQuality(form)
{	
	var qualityCode	=	form.qualityCode.value;
	var qualityName	=	form.qualityName.value;
	
	if( qualityCode=="" )
	{
		alert("Please enter a quality code.");
		form.qualityCode.focus();
		return false;
	}
	else if( qualityName=="" )
	{
		alert("Please enter a quality name.");
		form.qualityName.focus();
		return false;

	}
	if(!confirmSave()){
			return false;
	}
	return true;

}function validateAddLandingCenter(form)
{	
	var landingCenterCode	=	form.landingCenterCode.value;
	var landingCenterName	=	form.landingCenterName.value;
	var distance		=	form.distance.value;
	
	if( landingCenterCode=="" )
	{
		alert("Please enter a landing center code.");
		form.landingCenterCode.focus();
		return false;
	}
	else if( landingCenterName=="" )
	{
		alert("Please enter a landing center name.");
		form.landingCenterName.focus();
		return false;

	}
	if(distance!="")
	{
		if(!isDigit(distance) )
		{
			alert("Distance should be a number!.");
			form.distance.focus();
			return false;
		}
	}
	if(!confirmSave()){
			return false;
	}
	return true;

}function mpp_validateAddPreProcessor(form)
{	
	
	var preProcessorCode	=	form.preProcessorCode.value;
	var preProcessorName	=	form.preProcessorName.value;
	var Phone				=	form.preProcessorTelNo.value;
	var emailID				=	form.preProcessorEmail.value;
	var Pincode				=	form.preProcessorPincode.value;
	var selPlant		=	document.getElementById("selPlant").value;
	var selActivity		=	document.getElementById("selActivity").value;
	
	if(preProcessorCode=="")
	{
		alert("Please enter a Pre Processor code.");
		form.preProcessorCode.focus();
		return false;
	}
	else if( preProcessorName=="" )
	{
		alert("Please enter a Pre-Processor name.");
		form.preProcessorName.focus();
		return false;

	}

	/*if ((Phone==null)||(Phone=="")){
		alert("Please Enter your Phone Number");
		form.preProcessorTelNo.focus();
		return false;
	}*/
	if (checkInternationalPhone(Phone)==false){
		alert("Please Enter a Valid Phone Number");
		form.preProcessorTelNo.focus();
		return false;
	}

	/*if ((emailID==null)||(emailID=="")){
		alert("Please Enter your Email ID");
		form.preProcessorEmail.focus();
		return false;
	}*/
     if(emailID!="")
	 {
		if (echeck(emailID)==false)
		{
			form.preProcessorEmail.focus();
			return false;
		}
	}

	if(isPositiveInteger(Pincode)==false)
	{
		form.preProcessorPincode.focus();
		return false;
	}
	//Activity Check
	/*if(RMReceive=="" && preProcessing=="" && grading=="" && packing=="" && freezing=="" && loadAndUnload=="")
	{
		alert("Please select atleast one activity");
		return false;
	}*/
	
	if(selPlant=="")
	{
		alert("Please select one or more Plants/Units");
		form.selPlant.focus();
		return false;
	}

	if(selActivity=="")
	{
		alert("Please select one or more Activity");
		form.selActivity.focus();
		return false;
	}
	
	if(!confirmSave()){
			return false;
	}
	return true;
}








////////////////////
var digits = "0123456789";
var phoneNumberDelimiters = "()- ";
var validWorldPhoneChars = phoneNumberDelimiters + "+";
var minDigitsInIPhoneNumber = 10;
function isInteger(s)
{   
	var i;
    for (i = 0; i < s.length; i++)
    {   
        var c = s.charAt(i);
        if (((c < "0") || (c > "9")))
		return false;
    }
    return true;
}

function stripCharsInBag(s, bag)
{   var i;
    var returnString = "";
   for (i = 0; i < s.length; i++)
    {   
        var c = s.charAt(i);
        if (bag.indexOf(c) == -1) returnString += c;
    }
    return returnString;
}

function checkInternationalPhone(strPhone)
	{
s=stripCharsInBag(strPhone,validWorldPhoneChars);
return (isInteger(s) && s.length >= minDigitsInIPhoneNumber);
}

function echeck(str) {

		var at="@"
		var dot="."
		var lat=str.indexOf(at)
		var lstr=str.length
		var ldot=str.indexOf(dot)
		if (str.indexOf(at)==-1){
		   alert("Invalid E-mail ID")
		   return false
		}

		if (str.indexOf(at)==-1 || str.indexOf(at)==0 || str.indexOf(at)==lstr){
		   alert("Invalid E-mail ID")
		   return false
		}

		if (str.indexOf(dot)==-1 || str.indexOf(dot)==0 || str.indexOf(dot)==lstr){
		    alert("Invalid E-mail ID")
		    return false
		}

		 if (str.indexOf(at,(lat+1))!=-1){
		    alert("Invalid E-mail ID")
		    return false
		 }

		 if (str.substring(lat-1,lat)==dot || str.substring(lat+1,lat+2)==dot){
		    alert("Invalid E-mail ID")
		    return false
		 }

		 if (str.indexOf(dot,(lat+2))==-1){
		    alert("Invalid E-mail ID")
		    return false
		 }
		
		 if (str.indexOf(" ")!=-1){
		    alert("Invalid E-mail ID")
		    return false
		 }

 		 return true					
	}

function isPositiveInteger(val){
      //if(val==null){return false;}
      //if (val.length==0){return false;}
      for (var i = 0; i < val.length; i++) {
            var ch = val.charAt(i);
            if (ch < "0" || ch > "9") {
			alert("Please enter correct Pincode");
            return false;
            }
      }
      return true;
}function validateAddSupplier(form)
{	
	var supplierCode	=	form.supplierCode.value;
	var supplierName	=	form.supplierName.value;
	var Phone			=	form.supplierTelNo.value;
	var emailID			=	form.supplierEmail.value;
	var Pincode			=	form.supplierPincode.value;
	var nativePlace		=	form.place.value;
	var supplierPlace	=	document.getElementById("supplierPlace").value;
	
	if( supplierCode=="" )
	{
		alert("Please enter a Supplier code.");
		form.supplierCode.focus();
		return false;
	}
	else if( supplierName=="" )
	{
		alert("Please enter a Supplier name.");
		form.supplierName.focus();
		return false;
	}
	
	if( nativePlace=="" )
	{
		alert("Please select a Place.");
		form.place.focus();
		return false;
	}
	
	if( supplierPlace=="" )
	{
		alert("Please select a Landing center.");
		form.supplierPlace.focus();
		return false;
	}

	if(Phone=="")
	{
		alert("Please enter phone number.");
		form.supplierTelNo.focus();
		return false;
	}
	if (checkInternationalPhone(Phone)==false){
		alert("Please Enter a Valid Phone Number");
		form.supplierTelNo.value="";
		form.supplierTelNo.focus();
		return false;
	}

if(emailID!="")
{
	if (echeck(emailID)==false){
		form.supplierEmail.value="";
		form.supplierEmail.focus();
		return false;
	}
}

	if(isPositiveInteger(Pincode)==false)
	{
		form.supplierPincode.value="";
		form.supplierPincode.focus();
		return false;
	}
	
	if(!confirmSave()){
			return false;
	}
	return true;
}

var digits = "0123456789";
var phoneNumberDelimiters = "()- ";
var validWorldPhoneChars = phoneNumberDelimiters + "+";
var minDigitsInIPhoneNumber = 10;
function isInteger(s)
{   
	var i;
    for (i = 0; i < s.length; i++)
    {   
        var c = s.charAt(i);
        if (((c < "0") || (c > "9")))
		return false;
    }
    return true;
}

function stripCharsInBag(s, bag)
{   var i;
    var returnString = "";
   for (i = 0; i < s.length; i++)
    {   
        var c = s.charAt(i);
        if (bag.indexOf(c) == -1) returnString += c;
    }
    return returnString;
}

function checkInternationalPhone(strPhone)
	{
s=stripCharsInBag(strPhone,validWorldPhoneChars);
return (isInteger(s) && s.length >= minDigitsInIPhoneNumber);
}

function echeck(str) {

		var at="@";
		var dot=".";
		var lat=str.indexOf(at);
		var lstr=str.length;
		var ldot=str.indexOf(dot);
		if (str.indexOf(at)==-1){
		   alert("Invalid E-mail ID");
		   return false;
		}

		if (str.indexOf(at)==-1 || str.indexOf(at)==0 || str.indexOf(at)==lstr){
		   alert("Invalid E-mail ID");
		   return false;
		}

		if (str.indexOf(dot)==-1 || str.indexOf(dot)==0 || str.indexOf(dot)==lstr){
		    alert("Invalid E-mail ID");
		    return false;
		}

		 if (str.indexOf(at,(lat+1))!=-1){
		    alert("Invalid E-mail ID");
		    return false;
		 }

		 if (str.substring(lat-1,lat)==dot || str.substring(lat+1,lat+2)==dot){
		    alert("Invalid E-mail ID");
		    return false;
		 }

		 if (str.indexOf(dot,(lat+2))==-1){
		    alert("Invalid E-mail ID");
		    return false;
		 }
		
		 if (str.indexOf(" ")!=-1){
		    alert("Invalid E-mail ID");
		    return false;
		 }

 		 return true;					
	}

function isPositiveInteger(val){
      //if(val==null){return false;}
      //if (val.length==0){return false;}
      for (var i = 0; i < val.length; i++) {
            var ch = val.charAt(i);
            if (ch < "0" || ch > "9") {
			alert("Please enter correct Pincode");
            return false;
            }
      }
      return true;
}function displaySupplier()
{
	if(document.getElementById("mainSupplier").value !="" )
	{
	document.getElementById("subSupplierMainSupplier").value	=	document.getElementById("mainSupplier").value;
	}
	if(document.getElementById("mainSupplier").value =="" )
	{
	document.getElementById("subSupplierMainSupplier").value	=	"";
	}
}
function validateAddSubSupplier(form)
{	
	var subSupplierCode	=	form.subSupplierCode.value;
	var subSupplierName	=	form.subSupplierName.value;
	var Phone				=	form.subSupplierTelNo.value;
	var emailID				=	form.subSupplierEmail.value;
	var Pincode				=	form.subSupplierPincode.value;
	var place				=	form.subSupplierPlace.value;
	
	if( subSupplierCode=="" )
	{
		alert("Please enter a Sub Supplier code.");
		form.subSupplierCode.focus();
		return false;
	}
	else if( subSupplierName=="" )
	{
		alert("Please enter a Sub Supplier name.");
		form.subSupplierName.focus();
		return false;

	}
	if( place=="" )
	{
		alert("Please select a Landing Center.");
		form.subSupplierPlace.focus();
		return false;
	}


	if(Phone=="")
	{
		alert("Please enter a phone number.");
		form.subSupplierTelNo.focus();
		return false;
	}
		
	if (checkInternationalPhone(Phone)==false){
		alert("Please Enter a Valid Phone Number");
		form.subSupplierTelNo.value="";
		form.subSupplierTelNo.focus();
		return false;
	}


	if(emailID!="")
	{
		if (echeck(emailID)==false){
			form.subSupplierEmail.value="";
			form.subSupplierEmail.focus();
			return false;
			}
	}

	if(isPositiveInteger(Pincode)==false)
	{
		form.subSupplierPincode.value="";
		form.subSupplierPincode.focus();
		return false;
	}
	
	if(!confirmSave()){
			return false;
	}
	return true;
}

var digits = "0123456789";
var phoneNumberDelimiters = "()- ";
var validWorldPhoneChars = phoneNumberDelimiters + "+";
var minDigitsInIPhoneNumber = 10;
function isInteger(s)
{   
	var i;
    for (i = 0; i < s.length; i++)
    {   
        var c = s.charAt(i);
        if (((c < "0") || (c > "9")))
		return false;
    }
    return true;
}

function stripCharsInBag(s, bag)
{   var i;
    var returnString = "";
   for (i = 0; i < s.length; i++)
    {   
        var c = s.charAt(i);
        if (bag.indexOf(c) == -1) returnString += c;
    }
    return returnString;
}

function checkInternationalPhone(strPhone)
	{
s=stripCharsInBag(strPhone,validWorldPhoneChars);
return (isInteger(s) && s.length >= minDigitsInIPhoneNumber);
}

function echeck(str) {

		var at="@"
		var dot="."
		var lat=str.indexOf(at)
		var lstr=str.length
		var ldot=str.indexOf(dot)
		if (str.indexOf(at)==-1){
		   alert("Invalid E-mail ID")
		   return false
		}

		if (str.indexOf(at)==-1 || str.indexOf(at)==0 || str.indexOf(at)==lstr){
		   alert("Invalid E-mail ID")
		   return false
		}

		if (str.indexOf(dot)==-1 || str.indexOf(dot)==0 || str.indexOf(dot)==lstr){
		    alert("Invalid E-mail ID")
		    return false
		}

		 if (str.indexOf(at,(lat+1))!=-1){
		    alert("Invalid E-mail ID")
		    return false
		 }

		 if (str.substring(lat-1,lat)==dot || str.substring(lat+1,lat+2)==dot){
		    alert("Invalid E-mail ID")
		    return false
		 }

		 if (str.indexOf(dot,(lat+2))==-1){
		    alert("Invalid E-mail ID")
		    return false
		 }
		
		 if (str.indexOf(" ")!=-1){
		    alert("Invalid E-mail ID")
		    return false
		 }

 		 return true					
	}

function isPositiveInteger(val){
      //if(val==null){return false;}
      //if (val.length==0){return false;}
      for (var i = 0; i < val.length; i++) {
            var ch = val.charAt(i);
            if (ch < "0" || ch > "9") {
			alert("Please enter correct Pincode");
            return false;
            }
      }
      return true;
}function validateAddProcess(form,mode)
{	

	//For checking duplication in Process sequence
	if (Array.indexOf != 'function') {  
	Array.prototype.indexOf = function(f, s) {
		if (typeof s == 'undefined') s = 0;
		for (var i = s; i < this.length; i++) {   
		if (f === this[i]) return i; 
		}    
		return -1;  
		}
	}
	
	var processFish			=	form.processFish.value;
	var	Rate				=	form.processRate.value;
	var Commission			=	form.processCommission.value;
	var preProcessCode		=	form.preProcessCode.value;
	var rateList			=	form.rateList.value;
	var noFurtherProcess	=	form.noProcess.checked;
	//alert(noProcess);
	
	if(mode==1){
		var copyFish			=	form.selCopyFrom.value;
		var selPreProcessCode	=	form.selPreProcessCode.value;
	}
	
	var hidColumnCount		=	form.hidColumnCount.value;
	
		
	if( processFish=="" )
	{
		alert("Please select a Fish.");
		form.processFish.focus();
		return false;
	}
	
	if( preProcessCode=="" )
	{
		alert("Please enter a  Pre-Process Code.");
		form.preProcessCode.focus();
		return false;
	}


	var arr = new Array();
	var arri=0;
	
	for(j=0; j<hidColumnCount; j++)
	 {
		var selProcess = "process_";
		var process		=	document.getElementById(selProcess+j).value;
		
		if(j==0 && process==""){
			alert("Please select first Pre-Process Code");
			document.getElementById(selProcess+j).focus();
			return false;
		}
		if(j==1 && process==""){
			alert("Please select Second Pre-Process Code");
			document.getElementById(selProcess+j).focus();
			return false;
		}
		
		if(process!="" && noFurtherProcess==""){
			if ( arr.indexOf(process) != -1 ) {
				alert("The selection of Process Sequence should be different.");
				document.getElementById(selProcess+j).focus();
				return false;
			}
			arr[arri++]=process;
		}
	}
	
	if((copyFish=="" && mode==1) || mode==0){
		
		if( rateList=="" )
		{
			alert("Please select a Rate a list.");
			form.rateList.focus();
			return false;
		}
		
		if( Rate=="" )
		{
			alert("Please enter Rate.");
			form.processRate.focus();
			return false;
		}
		if( Commission=="" )
		{
			alert("Please enter Commission.");
			form.processCommission.focus();
			return false;
		}
	}
	else {
			if( selPreProcessCode=="" )
			{
				alert("Please select Pre-Process Code.");
				form.selPreProcessCode.focus();
				return false;
			}
		
		}
	if(!confirmSave()){
			return false;
	}
	return true;
}


function confirmDeleteException(){
	var conDelMsg	=	"Do you wish to delete the selected items?";
	if(confirm(conDelMsg))
	{
		return true;
	}
	
	return false;
	
}

function disableProcessEntries(form){
	var copyFrom						=	form.selCopyFrom.value;
	form.processTime.disabled 			= 	true;
	form.processRate.disabled			=	true;
	form.processCommission.disabled	=	true;
	document.getElementById("processCriteria").disabled=true;
	document.getElementById("rateList").disabled=true;
	
	if(copyFrom==""){
		enableProcessEntries(form);
	}
}

function enableProcessEntries(form){
	form.processTime.disabled 			= 	false;
	form.processRate.disabled			=	false;
	form.processCommission.disabled	=	false;
	document.getElementById("processCriteria").disabled= false;
	document.getElementById("rateList").disabled= false;
}function validateAddProcessCode(form)
{
		
	var fishId			=	form.processCodeFish.value;
	var code			=	form.processCode.value;
	var basketWt 		=	form.processBasketWt.value;
	
	var available		=	form.available.value;
	
	var hidAvailable	=	form.hidAvailable.value;
	var hidFrozenAvailable	=	form.hidFrozenAvailable.value;
	
	var copyFish		=	form.selCopyFrom.value;
	var copyCode		=	form.selProcessCode.value;
	//var selStage		=	form.selStage.value;

	if( fishId=="" )
	{
		alert("Please select a fish.");
		form.processCodeFish.focus();
		return false;
	}

	if( code=="" )
	{
		alert("Please enter a Process Code.");
		form.processCode.focus();
		return false;
	}
	
	/*if( selStage=="" )
	{
		alert("Please select a stage.");
		form.selStage.focus();
		return false;
	}*/
	
	if(copyFish==""){
		
			
			if( basketWt=="" )
			{
				alert("Please enter Basket Weight.");
				form.processBasketWt.focus();
				return false;
			}
			
			if( available=="" )
			{
				alert("Please select any Received option.");
				form.available.focus();
				return false;
			}
			
			if(hidAvailable=='G' || hidAvailable=='B'){
				var gradeUnitRaw	=	form.gradeUnitRaw.value;
				var selGrade		=	document.getElementById("selGrade").value;
			if(selGrade==""){
				alert("Please select one or more Grades for Raw");
				form.selGrade.focus();
				return false;
			}
			
			if(gradeUnitRaw==""){
				alert("Please select Grade Unit for Raw Material");
				form.gradeUnitRaw.focus();
				return false;
			}
		
		}
		if(hidAvailable=='C' || hidAvailable=='B'){
			var countUnitRaw	=	form.countUnitRaw.value;
			if(countUnitRaw==""){
				alert("Please select Count Unit for Raw Material");
				form.countUnitRaw.focus();
				return false;
			}
			
		
		}
		
			if(hidFrozenAvailable=='G' || hidFrozenAvailable=='B'){
				
				var gradeUnitFrozen		=	form.gradeUnitFrozen.value;
				var selGradeFrozen		=	document.getElementById("selGradeFrozen").value;
			
				if(selGradeFrozen==""){
						alert("Please select one or more  Grades for Frozen");
						form.selGradeFrozen.focus();
						return false;
				}
				if(gradeUnitFrozen==""){
					alert("Please select Grade Unit for Frozen Material");
					form.gradeUnitFrozen.focus();
					return false;
				}
			}
			
			if(hidFrozenAvailable=='C' || hidFrozenAvailable=='B'){
				
				var countUnitFrozen	=	form.countUnitFrozen.value;
				if(countUnitFrozen==""){
					alert("Please select Count Unit for Frozen Material");
					form.countUnitFrozen.focus();
					return false;
				}
				
			}
			
				
	}
	else { 
	
		if( copyFish=="" )
		{
			alert("Please select a Fish for copy the data.");
			form.selCopyFrom.focus();
			return false;
		}
		if( copyCode=="" )
		{
			alert("Please select a Process Code.");
			form.selProcessCode.focus();
			return false;
		}
	}
	if(!confirmSave()){
			return false;
	}
	return true;
}




function validateEditProcessCode(form)
{
		
	var fishId				=	form.processCodeFish.value;
	var code				=	form.processCode.value;
	var basketWt 			=	form.processBasketWt.value;
	
	var available			=	form.available.value;
	
	var hidAvailable		=	form.hidAvailable.value;
	
	var hidFrozenAvailable	=	form.hidFrozenAvailable.value;
	
	//var selStage		=	form.selStage.value;
	

	if( fishId=="" )
	{
		alert("Please select a fish.");
		form.processCodeFish.focus();
		return false;
	}

	if( code=="" )
	{
		alert("Please enter a Process Code.");
		form.processCode.focus();
		return false;
	}
	
	/*if( selStage=="" )
	{
		alert("Please select a stage.");
		form.selStage.focus();
		return false;
	}*/
		if( basketWt=="" )
		{
			alert("Please enter Basket Weight.");
			form.processBasketWt.focus();
			return false;
		}
		
		
		
		if( available=="" )
		{
			alert("Please select one availble option.");
			form.available.focus();
			return false;
		}
		
		if(hidAvailable=='G' || hidAvailable=='B'){
				var gradeUnitRaw	=	form.gradeUnitRaw.value;
				var selGrade		=	document.getElementById("selGrade").value;
			if(selGrade==""){
				alert("Please select one or more Grades for Raw");
				form.selGrade.focus();
				return false;
			}
			
			if(gradeUnitRaw==""){
				alert("Please select Grade Unit for Raw Material");
				form.gradeUnitRaw.focus();
				return false;
			}
		
		}
		if(hidAvailable=='C' || hidAvailable=='B'){
			var countUnitRaw	=	form.countUnitRaw.value;
			if(countUnitRaw==""){
				alert("Please select Count Unit for Raw Material");
				form.countUnitRaw.focus();
				return false;
			}
			
		
		}
		
			if(hidFrozenAvailable=='G' || hidFrozenAvailable=='B'){
				
				var gradeUnitFrozen		=	form.gradeUnitFrozen.value;
				var selGradeFrozen		=	document.getElementById("selGradeFrozen").value;
			
				if(selGradeFrozen==""){
						alert("Please select one or more  Grades for Frozen");
						form.selGradeFrozen.focus();
						return false;
				}
				if(gradeUnitFrozen==""){
					alert("Please select Grade Unit for Frozen Material");
					form.gradeUnitFrozen.focus();
					return false;
				}
			}
			
			if(hidFrozenAvailable=='C' || hidFrozenAvailable=='B'){
				
				var countUnitFrozen	=	form.countUnitFrozen.value;
				if(countUnitFrozen==""){
					alert("Please select Count Unit for Frozen Material");
					form.countUnitFrozen.focus();
					return false;
				}
			}
	
	if(!confirmSave()){
			return false;
	}
	return true;
}



function disable(form){
	var copyFrom	=	form.selCopyFrom.value;
	form.processBasketWt.disabled 	= 	true;
	form.available.disabled			=	true;
	form.frozenAvailable.disabled	=	true;
	form.gradeUnitFrozen.disabled	=	true;
	document.getElementById("selGradeFrozen").disabled=true;
	
	if(copyFrom==""){
		enable(form);
	}
}

function enable(form){
	form.processBasketWt.disabled 	= 	false;
	form.available.disabled			=	false;
	form.frozenAvailable.disabled	=	false;
	form.gradeUnitFrozen.disabled	=	false;
	document.getElementById("selGradeFrozen").disabled=false;
}





function validateAddCompetitor(form)
{
	
	var competitorCode	=	form.competitorCode.value;
	var competitorName	=	form.competitorName.value;
	
	if( competitorCode=="" )
	{
		alert("Please enter a competitor code.");
		form.competitorCode.focus();
		return false;
	}
	else if( competitorName=="" )
	{
		alert("Please enter a competitor name.");
		form.competitorName.focus();
		return false;

	}
	if(!confirmSave()){
			return false;
	}
	return true;

}





function validatepuCompetitor(form)
{
	
	var plantNo		=	form.plantNo.value;
	var plantName	=	form.plantName.value;
	
	if( plantNo=="" )
	{
		alert("Please enter a plant Number.");
		form.plantNo.focus();
		return false;
	}
	else if( plantName=="" )
	{
		alert("Please enter a plant name.");
		form.plantName.focus();
		return false;

	}
	if(!confirmSave()){
			return false;
	}
	return true;

}





mode =0 ;
function validateGrossEntry(form){
var fishName	=	form.fish.value;
var fishCode	=	form.processCode.value;
var grossWt		=	form.grossWeight.value;
if(fishName==""){
	alert("Please select the fish");
	form.fish.focus();
	return false;
}
if(fishCode==""){
	alert("Please select the Process Code");
	form.processCode.focus();
	return false;
}
if(grossWt==""){
	alert("Please enter the Gross Wt ");
	form.grossWeight.focus();
	return false;
}

return true;	
}

function getKeyCode(e)
{
	if(window.event!=undefined) return window.event.keyCode;
	return e.which;
}

function focusNext(e,form,name,i,sos,limit)
{
	var ecode = getKeyCode(e);	
	//alert(window.event);
	if ((ecode==13) || (ecode == 0)){
 		//alert("focus Called");
		var nextControl = eval(form+"."+name);
		totalWt(i,sos,limit);
		if ( nextControl ) { nextControl.focus(); }
		return false;
    }
  }

//For main form
function focusNextBox(e,form,name)
{
	
	var ecode = getKeyCode(e);	
	if ((ecode==13) || (ecode == 0)){
			//alert("focus Called");
		var nextControl = eval(form+"."+name);
		
		if ( nextControl ) { nextControl.focus(); }
		return false;
    }
  }

//Fid Actual wt from Iframe catchEntryGrossWt.php screen
function findActualWt(form){
		actualWt(form);
}


function actualWt(form){
	var totalAdj	=	0;
	var netWt			=	form.entryGrossNetWt.value;
	var adjust			=	form.entryAdjust.value;
	var gradeCountAdj	=	form.gradeCountAdj.value;
	var totalActualWt	=	0;
	
	if(gradeCountAdj==""){
		gradeCountAdj	= 0;
	}
		
	if(netWt!="" || adjust!=""){
		totalAdj	=	parseFloat(adjust)+parseFloat(gradeCountAdj);
			
	if(!isNaN(totalAdj)){
		totalActualWt   =  parseFloat(netWt) - totalAdj;
		form.entryActualWt.value	=	formatNumber(Math.abs(totalActualWt),2,'','.','','','','','');
	}
	//return ;
	effectiveWt(form);
	}
}


function effectiveWt(form){
	//alert("Here");
wastage	=	0;
soft	=	0;
local	=	0;
var total;
var actualWt	=	form.entryActualWt.value;
var wastage		=	form.entryWastage.value;
var soft		=	form.entrySoft.value;
var local		=	form.entryLocal.value;
var localPer	=	form.entryLocalPercent.value;
var wastePer	=	form.entryWastagePercent.value;
var softPer		=	form.entrySoftPercent.value;

if(wastage=="" && soft=="" && local=="")
	{
	total	=	0;
	}
	else {
		if (wastage ==""){
			total		=	parseFloat(soft)+parseFloat(local);
		}
		else if(soft==""){
			total		=	parseFloat(wastage)+parseFloat(local);
		}
		else if(local==""){
			total		=	parseFloat(wastage)+parseFloat(soft);
		}
		else {
	total		=	parseFloat(wastage)+parseFloat(soft)+parseFloat(local);
		}
	}
//alert ('total='+total);
if(actualWt!="" && !isNaN(total)){
	//actualWt - total
	form.entryEffectiveWt.value	=	formatNumber(Math.abs(actualWt - total),2,'','.','','','','','');
}

//Percentage calc;
if(actualWt!=0){
form.entryLocalPercent.value 		= 	formatNumber(Math.abs((local*100)/actualWt),2,'','.','','','','','');
form.entryWastagePercent.value		=	formatNumber(Math.abs((wastage*100)/actualWt),2,'','.','','','','','');
form.entrySoftPercent.value			=	formatNumber(Math.abs((soft*100)/actualWt),2,'','.','','','','','');
}
else{
	form.entryLocalPercent.value = 0.00;
	form.entryWastagePercent.value = 0.00;
	form.entrySoftPercent.value	=	0.00;
}
}

function validateAddDailyCatchEntry(form)
{
	var fishName		=	form.fish.value;
	var fishCode		=	form.processCode.value;
	var supplyUnit		=	form.unit.value;
	var vechicleNo		=	form.vechicleNo.value;
	var landingCenter	=	form.landingCenter.value;
	var weighChallanNo	=	form.weighChallanNo.value;
	var mainSupplier	=	form.mainSupplier.value;	
	var entryLocal		=	form.entryLocal.value;
	var entryWastage	=	form.entryWastage.value;
	var entrySoft		=	form.entrySoft.value;
	var entryAdjust		=	form.entryAdjust.value;
	var goodPack		=	form.goodPack.value;
	var peeling		=	form.peeling.value;
	var entryGross		=	form.entryGrossNetWt.value;
	var countChanged 	= 	form.saveChangesOk.value;
	
	var hidReceived		=	form.hidReceived.value;
	
	var entryOption		=	form.entryOption.value;
	
	var paymentBy		=	form.paymentBy.checked;
	var selectDate		=	form.selectDate.value;
	
	var entryEffectiveWt = form.entryEffectiveWt.value;
	var totalDeclaredWt  = document.getElementById("totalDeclaredWt").value;
	var hidSameEntryExist = document.getElementById("hidSameEntryExist").value;
	var hidSameCountAverage = document.getElementById("hidSameCountAverage").value;
		
	if (supplyUnit=="") {
		alert("Please select the Unit");
		form.unit.focus();
		return false;
	}
	if (landingCenter=="") {
		alert("Please select the Landing Center");
		form.landingCenter.focus();
		return false;
	}
	if (mainSupplier=="") {
		alert("Please select the Main Supplier");
		form.mainSupplier.focus();
		return false;
	}

	if (vechicleNo=="") {
		alert("Please enter the Vechicle Number");
		form.vechicleNo.focus();
		return false;
	}

	if (weighChallanNo=="") {
		alert("Please enter the Weighment Challan Number");
		form.weighChallanNo.focus();
		return false;
	}

	if (selectDate=="") {
		alert("Please select a date");
		form.selectDate.focus();
		return false;
	}
	if (findDaysDiff(selectDate)>=0) {
		alert("Please check date");
		form.selectDate.focus();
		return false;
	}	
 	if (!isDate(selectDate)) {	// Check Date Format
		form.selectDate.focus();
		return false
 	}

	if (fishName=="") {
		alert("Please select the fish");
		form.fish.focus();
		return false;
	}
	if (fishCode=="") {
		alert("Please select the Raw material Code");
		form.processCode.focus();
		return false;
	}
	//condition if Received fish type

	if (fishName!="" && hidReceived!="") {
		if(hidReceived=='C'){
			var count			=	form.count.value;
			var countAverage	=	form.countAverage.value;
			if(count==""){
				alert("Please enter the count");
				form.count.focus();
				return false;
			}
			if(countAverage==""){
				alert("Please enter the count Average");
				form.countAverage.focus();
				return false;
			}
		}
		else if(hidReceived=='G') {
			var grade		=	form.selGrade.value;
			if (grade=="") {
				alert("Please select a grade");
				form.selGrade.focus();
				return false;
			}	
		}
	}

	if (entryOption=='B') {
		if (entryGross=="") {
			alert("Please enter the Count Values");
			//form.entryGrossNetWt..focus();
			return false;
		}
	} else {
		if (entryGross=="") {
			alert("Please enter the Net Weight");
			form.entryGrossNetWt.focus();
			return false;
		}	
	}

	if (entryAdjust=="") {
		alert("Please enter the Adjustment quantity");
		form.entryAdjust.focus();
		return false;
	}

	if (entryLocal=="") {
		alert("Please enter the Local Quantity");
		form.entryLocal.focus();
		return false;
	}
	if (entryWastage=="") {
		alert("Please enter the wastage quantity");
		form.entryWastage.focus();
		return false;
	}
	if (entrySoft=="") {
		alert("Please enter the soft quantity");
		form.entrySoft.focus();
		return false;
	}
	if (goodPack=="") {
		alert("Please enter the Good for Packing Percentage");
		form.goodPack.focus();
		return false;
	}
	if (peeling=="") {
		alert("Please enter the peeling Percentage");
		form.peeling.focus();
		return false;
	}
	if (entryOption=='B') { 
		if (countChanged=="") {
			alert("Please save the Count items Total");
			return false;
		}
	}

	if (!timeCheck()) {
		alert("Please enter a time");
		return false;
	}
	if (paymentBy) {
		if (totalDeclaredWt==0||totalDeclaredWt=="") {
		alert("Please enter declared Wt.");
		//form.declWeight.focus();
		return false;
	}
	var dWeight = formatNumber(Math.abs(totalDeclaredWt),2,'','.','','','','','');
	
	if (totalDeclaredWt>0 && dWeight!=entryEffectiveWt) {
		alert("Declared and Effective Weight are not matching");	
		return false;
	}	
}
	/*if (hidSameEntryExist!="") {
		alert("The current entry is already existing");
		return false;
	} edited allow entry and display color*/ 

	if (hidSameEntryExist!="") {		
		var cMsg	= "The current entry is already in database. Do you wish to Continue?";
		if (!confirm(cMsg)) {
			return false;
		}	
	}

	if (hidSameCountAverage!="" && hidSameEntryExist=="") {
		var confirmMsg	= "The current count average is already in database. Do you wish to Continue?";
		if (!confirm(confirmMsg)) {
			return false;
		}		
	}

 	if (!confirmSave()) {
		return false;
	} else {
		return true;
	}
}


//find the average of comma seperated numbers
function findAverage(form)
{
	var count	=	form.count.value;
	var value	=	count.split(",");
	var length	=	value.length;
	var sum=0;
	var average=0;
	for (i = 0; i < value.length; ++i) {
		sum+=parseInt(value[i]);
	}
	average = Math.ceil(sum/length);
	
	if(!isNaN(average)){
		form.countAverage.value = average;
	}	
}

function totalWt(i,sos,limit)
{
	var lc=parseInt(sos);
	var total	= 0,btotal=0;
	var gWt		=	"grossWt_";
	var totWt	=	"totWt_";
	var bWt		=	"basketWt_";
	var nWt		=	"netWt_";
	var gbWt	=	"grossBasketWt_";
	while( limit > 0 )
	{
		var grossWt=0;
		var basWt=0;
		if(document.getElementById(gWt+lc).value!="")	{
	  		grossWt= parseFloat(document.getElementById(gWt+lc).value);
			basWt= parseFloat(document.getElementById(gbWt+lc).value);
			total	+=	grossWt;
			btotal  +=	basWt;
		}
	  	
		lc++;
		limit--;
	}
	
	if(!isNaN(total))	{
		document.getElementById(totWt+i).value=formatNumber(Math.abs(total),2,'','.','','','','','');
	}
	
	if(!isNaN(btotal))	{
		document.getElementById(bWt+i).value=formatNumber(Math.abs(btotal),2,'','.','','','','','');		
	}
//	total-btotal
	document.getElementById(nWt+i).value=formatNumber(Math.abs(total-btotal),2,'','.','','','','','');	
}

function recordSaved(form){

	var countChanged = form.saveChangesOk.value;
	var entryOption		=	form.entryOption.value;


	if(!validateAddDailyCatchEntry(form)){
	return false;	
	}
	if(entryOption=='B'){
		if(countChanged==""){
			alert("Please save the Raw Material Count List");
			return false;
		}
	}
	return true;	
}

function calcPeeling(form){
	document.getElementById("peeling").value =	100 - document.getElementById("goodPack").value;
}

function timeCheck(){
	selectTimeHour	=	document.getElementById("selectTimeHour").value;
	selectTimeMints	=	document.getElementById("selectTimeMints").value;
	if (selectTimeHour>12 || selectTimeHour<=0) { 
		alert("hour is wrong");
		document.getElementById("selectTimeHour").focus();
		return false;
	}
	if (selectTimeMints>59 || selectTimeMints<0){
		alert("minute is wrong");
		document.getElementById("selectTimeMints").focus();
		return false;
	}
	return true;
}

//Search Button Validation In Listing 

function validateSearchCatchEntry(form){
	
	var supplyFrom		=	form.supplyFrom.value;
	var supplyTill		=	form.supplyTill.value;
	
	
	var d = new Date();
	var t_date = d.getDate();      // Returns the day of the month
	var t_mon = d.getMonth() + 1;      // Returns the month as a digit
	var t_year = d.getFullYear();  // Returns 4 digit year
	
	curr_date	=	t_date + "/" + t_mon + "/" + t_year;

	if(supplyFrom==""){
		
			alert("Please select From Date");
			form.supplyFrom.focus();
			return false;
	}
	
	if(findDaysDiff(supplyFrom)>=0){
			alert("Supply From Date should be less than or equal to current date");
			form.supplyFrom.focus();
			return false;	
	}
	
	if(supplyTill==""){
		
			alert("Please select Till Date");
			form.supplyTill.focus();
			return false;
	}
		
	if(findDaysDiff(supplyTill)>=0){
			alert("Supply Till Date should be less than or equal to current date");
			form.supplyTill.focus();
			return false;	
	}
	if(checkDateSelected(supplyFrom,supplyTill)>0){
		alert("Please check selected From and To date");
		return false;
	}
	return true;
}


function validateAddRawSelChallan(form){
	
	var selWtChallan		=	form.selWtChallan.value;
	
	
	if(selWtChallan==""){
		
			alert("Please select a Weighment Challan Number");
			form.selWtChallan.focus();
			return false;
	}
	
	return true;
}

function validateDeclaredEntry(form){
	var supplierChallanNo = form.supplierChallanNo.value;
	var supplierChallanDate = form.supplierChallanDate.value;
	var declWeight			=	form.declWeight.value;
	var declCount			=	form.declCount.value;
	var declIce				=	form.declIce.value;
	if(supplierChallanNo==""){
		
			alert("Please enter a Supplier Challan Number");
			form.supplierChallanNo.focus();
			return false;
	}
	if(supplierChallanDate==""){
		
			alert("Please select a date");
			form.supplierChallanDate.focus();
			return false;
	}
	//alert(findDaysDiff(supplierChallanDate));
	if(findDaysDiff(supplierChallanDate)>=0){
			alert("Supplier Challan Date should be less than or equal to current date");
			form.supplierChallanDate.focus();
			return false;	
	}
	if(declWeight==""){
		
			alert("Please enter a Declared Weight");
			form.declWeight.focus();
			return false;
	}
	if(declCount==""){
		
			alert("Please enter a Declared Count");
			form.declCount.focus();
			return false;
	}
	if(declIce==""){
		
			alert("Please enter a Declared Ice");
			form.declIce.focus();
			return false;
	}
	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}function validateAddDailyRates(form)
{
	var currentDate		=	form.currentDate.value
	var fish		=	form.selFish.value;
	var landingCenter	=	form.landingCenter.value;
	var marketRate		=	form.marketRate.value;
	var decRate		=	form.decRate.value;
	var supplier		=	form.supplier.value;
	var hidReceived		=	form.hidReceived.value;
	var processCode		=	form.processCode.value;
	var mode		= 	form.hidMode.value; // If addmode = 1, edit mode = 0;
	
	if(findDaysDiff(currentDate)>=0){
		alert(" Date should be less than or equal to current date");
		form.currentDate.focus();
		return false;	
	}

	if (landingCenter=="") {
		alert("Please select a Landing Center");
		form.landingCenter.focus();
		return false;
	}

	if (supplier==0 && mode==0) {
		alert("Please select a Supplier");
		form.supplier.focus();
		return false;
	}
	
	if (fish=="") {
		alert("Please select a fish.");
		form.selFish.focus();
		return false;
	}

	if (processCode=="") {
		alert("Please select a Process Code.");
		form.processCode.focus();
		return false;
	}
	
	if (fish!="" && hidReceived!="") {
		if(hidReceived=='G'){
			var grade = form.selGrade.value;
			if (grade=="") {
				alert("Please select a grade");
				form.selGrade.focus();
				return false;
			}
		} 
		if(hidReceived=='C') {
			var count	=	form.countAverage.value;
			if (count=="") {
				alert("Please enter the Count Average");
				form.countAverage.focus();
				return false;
			}
		}		
		if (hidReceived=='B') {
			var grade 	= form.selGrade.value;
			var count	=	form.countAverage.value;
			if (grade=="" && count=="") {
				alert("Please select Grade/enter Count Average");
				form.selGrade.focus();
				return false;
			}
		}
	}
	if (fish!="" && hidReceived=="") {
		alert("Should select Raw Material Count/Grade option! ");	
		return false;
	}
	
	if (marketRate=="") {
		alert("Please enter a Market Rate");
		form.marketRate.focus();
		return false;
	}

	if (decRate=="") {
		alert("Please enter a Declared Rate");
		form.decRate.focus();
		return false;
	}
	
	if (supplier==0 && mode==1) {
		var dMsg = " The entered rate will apply for all the suppliers. Do you wish to Continue? ";
		if (!confirm(dMsg)) return false;
	}
	
	if (confirmSave()) {
  		return true;
	} else {
		return false;
	}
}

function validateSelect(form)
{
	var selFish	= form.selFilter.value;
	var dateSelect	= form.selDate.value;

	if (selFish!=0 && dateSelect==0) {
		alert("Please select a date");
		form.selDate.focus();
		return false;
	}
	if (selFish==0 && dateSelect!=0) {
		alert("Please select a Fish to view date wise list");
		form.selFilter.focus();
		return false;
	}
	return true;	
}function validateAddDailyPreProcess(form)
{
	isQtyEntered 		 = false;	
	isPreProcessorQtyEntered = false;
	var fish		 = form.selFish.value;
	
	if (fish!="") {
		var processRowCount	= document.getElementById("hidProcessRowCount").value;
		var columnCount		= document.getElementById("hidColumnCount").value;
	}
	
	var openingBalQty	=	"openingBalQty_";
	var todayArrivalQty	=	"todayArrivalQty_";
	var totalQty		=	"totalQty_";	
	
	if (fish=="") {
		alert("Please select a fish.");
		form.selFish.focus();
		return false;
	}	
	
	for (i=1; i<=processRowCount; i++) {
		  
		/* 
		if(document.getElementById(openingBalQty+i).value == "" ) {
			alert("Please enter Opening Balance Quantity.");
			document.getElementById(openingBalQty+i).focus();
			return false;
		}  
		if (document.getElementById(todayArrivalQty+i).value == "") {
			alert("Please enter Today's Arrival Quantity.");
			document.getElementById(todayArrivalQty+i).focus();
			return false;
		}
	  	*/	
		if (document.getElementById(openingBalQty+i).value!="" && document.getElementById(todayArrivalQty+i).value!="") {
			isQtyEntered = true;	
		}
		for (j=1; j<=columnCount; j++) { 
		 	var preProcessorQty	= "preProcessorQty_"+j+"_";
			if (document.getElementById(preProcessorQty+i).value!="" ) {
				isPreProcessorQtyEntered = true;
			}
		}
	  }

	  if (isQtyEntered==false) {
		  alert("Please enter atleast one Pre-Process Opening and Arrival Qty");
		  return false;
	  }
	
	 if ((isQtyEntered==true) && (isPreProcessorQtyEntered==false)) {
		 alert("Please enter Pre-Processor Qty for the Selected Pre-Process");
		 return false;							 
	 }
	 
	 if (confirmSave()) {
  		return true;
	 } else {
		return false;
	 }
}

// FIND THE OPENING BALANCE and ARRIVAL QTY SUM
function totalArrivalQty(form)
{
	var processRowCount	= document.getElementById("hidProcessRowCount").value;
	var total		= 0;
	var openingBalQty	= "openingBalQty_";
	var todayArrivalQty	= "todayArrivalQty_";
	var totalQty		= "totalQty_";	
	
	for (i=1; i<=processRowCount; i++) {
		  var tQty			=	0;
		  var OpeningQty	=	0;
		  var todayQty		=	0;
	 	  if (document.getElementById(todayArrivalQty+i).value!="" || document.getElementById(openingBalQty+i).value!="") {
			if (document.getElementById(openingBalQty+i).value=="") {
				document.getElementById(openingBalQty+i).value = 0;
			}
			if (document.getElementById(todayArrivalQty+i).value=="") {
				document.getElementById(todayArrivalQty+i).value = 0;
			}
			tQty			= document.getElementById(totalQty+i).value;
			OpeningQty		= parseFloat(document.getElementById(openingBalQty+i).value);
			todayQty		= parseFloat(document.getElementById(todayArrivalQty+i).value);
			total			= OpeningQty + todayQty;			
	  	}
			
		if ((!isNaN(total)) && document.getElementById(todayArrivalQty+i).value!="" ) {			
			document.getElementById(totalQty+i).value	=	total;
		}
 	}
	calActualYield(form);
}

function totalPreProcessingQty(form)
{
	var processRowCount			=	document.getElementById("hidProcessRowCount").value;
	var columnCount				=	document.getElementById("hidColumnCount").value;
	var totalPreProcessQty		=	"totalPreProcessQty_";
	var totalQty		=	"totalQty_";	
	for (i=1; i<=processRowCount; i++) {
		var totalPreProcessing		=	0;
		for (j=1; j<=columnCount; j++) { 
					 
					 	var preProcessorQty		=	"preProcessorQty_"+j+"_";
						var eachPreProcessorQty	=	0;
						
						if(document.getElementById(totalQty+i).value!=""){			 					 
					 	if(document.getElementById(preProcessorQty+i).value!="" )
							{
						 
							eachPreProcessorQty	=	parseFloat(document.getElementById(preProcessorQty+i).value);
							totalPreProcessing += eachPreProcessorQty;
							}
							else 
							{
								//document.getElementById(preProcessorQty+i).value = 0;
							}
						}
					 }
					  eachPreProcessoreTotQty	=	totalPreProcessing;
				if((!isNaN(totalPreProcessing)) && document.getElementById(totalQty+i).value!="")
							{
							document.getElementById(totalPreProcessQty+i).value	=	eachPreProcessoreTotQty;
							}
				 
			  }
			  calActualYield(form);
}

function calActualYield(form){
	
	var processRowCount			=	document.getElementById("hidProcessRowCount").value;
	var totalPreProcessQty		=	"totalPreProcessQty_";
	var totalQty				=	"totalQty_";
	var actualYield				=	"actualYield_";
	var idealYield				=	"idealYield_";
	var diffYield				=	"diffYield_";
	
	var actualYieldAverage		=	0;
	var findAverageYield		=	0;			
	
	for (i=1; i<=processRowCount; i++)
		{
			
			if(document.getElementById(totalQty+i).value!=0){
			findAverageYield	= ((document.getElementById(totalPreProcessQty+i).value/document.getElementById(totalQty+i).value)*100) ;
			} else {
				findAverageYield		=	0;
			}
			
			actualYieldAverage = formatNumber(Math.abs(findAverageYield),2,'','.','','','','','');
		
		if(!isNaN(actualYieldAverage))
			{
			
			document.getElementById(actualYield+i).value	=	actualYieldAverage;
			document.getElementById(diffYield+i).value		=	formatNumber(Math.abs(actualYieldAverage - document.getElementById(idealYield+i).value),2,'','.','','','','',''); 
			}
			//alert(findAverageYield);
	}
}

//Key moving

function nextProcess(e,form,name)
{
	var ecode = getKeyCode(e);	
	//alert(name);
	var sName = name.split("_");
	dArrowName = sName[0]+"_"+sName[1]+"_"+(sName[2]-2);
	
	rightArrow = sName[0]+"_"+(parseInt(sName[1])+1)+"_"+(sName[2]-1);

	leftArrow = sName[0]+"_"+(parseInt(sName[1])-1)+"_"+(sName[2]-1);
	
	if ((ecode==13) || (ecode == 0) || (ecode==40)){
		var nextControl = eval(form+"."+name);
		if ( nextControl ) { nextControl.focus(); }
		return false;
    }
	if ((ecode==38)){
		var nextControl = eval(form+"."+dArrowName);
		if ( nextControl ) { nextControl.focus(); }
		return false;
    }
	if ((ecode==39)){
		//alert(rightArrow);
		var nextControl = eval(form+"."+rightArrow);
		if ( nextControl ) { nextControl.focus(); }
		return false;
    }
	if ((ecode==37)){
		//alert(leftArrow);
		var nextControl = eval(form+"."+leftArrow);
		if ( nextControl ) { nextControl.focus(); }
		return false;
    }
}

	function enableDPPButton(mode)
	{
		if (mode==1) {
			document.getElementById("cmdAddDailyPreProcess").disabled = false;
			document.getElementById("cmdAddDailyPreProcess1").disabled = false;
			document.getElementById("cmdSaveAdd").disabled = false;
			document.getElementById("cmdSaveAdd1").disabled = false;
			
		} else if (mode==0) {
			document.getElementById("cmdSaveChange").disabled = false;
			document.getElementById("cmdSaveChange1").disabled = false;
		}
	}
	
	function disableDPPButton(mode)
	{		
		if (mode==1) {
			document.getElementById("cmdAddDailyPreProcess").disabled = true;
			document.getElementById("cmdAddDailyPreProcess1").disabled = true;
			document.getElementById("cmdSaveAdd").disabled = true;
			document.getElementById("cmdSaveAdd1").disabled = true;
		} else if (mode==0) {
			document.getElementById("cmdSaveChange").disabled = true;
			document.getElementById("cmdSaveChange1").disabled = true;
		}
	}

	function disableConfirmBtn()
	{
		document.getElementById("cmdConfirm").disabled = true;	
		document.getElementById("cmdConfirm1").disabled = true;		
	}

	function confirmDPPEntry(selDate)
	{
		if (!confirmSave()) {
			return false;
		} 
		xajax_confirmDailyPreProcessEntry(selDate);
		return true;
	}

function validateAddDailyProcessing(form)
{
	//alert("Hai");
	var fishId 		= 	form.selFish.value;
	var lotId 		= 	form.lotNo.value;
	var packingId 	= 	form.packingType.value;
	var codeId 		=	form.processCode.value;
	var dailyUnit	=	form.unit.value;
	
	if(lotId==""){
	alert("Please enter a lot number");	
	form.lotNo.focus();
	return false;
	}
	if(dailyUnit==""){
	alert("Please select a Unit");	
	form.unit.focus();
	return false;
	}
	
	if(fishId==""){
	alert("Please select a Fish");	
	form.selFish.focus();
	return false;
	}
	
	if(codeId==""){
	alert("Please select a Process Code");	
	form.processCode.focus();
	return false;
	}
	
	if(packingId==""){
	alert("Please select a packing");	
	form.packingType.focus();
	return false;
	}
	
	if( confirmSave()){
  		return true;
	} else {
		return false;
	}
}

function totalGrade(form){

	var rowCount			=	document.getElementById("hidRowCount").value;
	var total	= 0;
	var eQty	=	"quantity_";
	for (i=1; i<=rowCount; i++)
	  {
	  	var quantity		=	0;
	 	 if(document.getElementById(eQty+i).value!=""){
	  	quantity= document.getElementById(eQty+i).value;
	  }
	  
	  total		=	parseInt(total)+parseInt(quantity);
	}
	
	if(!isNaN(total)){
		form.totalQuantity.value = total;	
	}
}

//validate Processing code entry

function validateProcessingGrade(form){
	
	//alert("hai");
	var fishId 		= parent.document.frmDailyProcessing.selFish.value;
	//var lotId 		= parent.document.frmDailyProcessing.lotNo.value;
	var packingId 	= parent.document.frmDailyProcessing.packingType.value;
	var codeId 		=	parent.document.frmDailyProcessing.processCode.value;
	
	/*if(lotId==""){
	alert("Please enter a lot number");	
	parent.document.frmDailyProcessing.lotNo.focus();
	return false;
	}*/
	
	if(fishId==""){
	alert("Please select a Fish");	
	parent.document.frmDailyProcessing.selFish.focus();
	return false;
	}
	
	if(codeId==""){
	alert("Please select a Process Code");	
	parent.document.frmDailyProcessing.processCode.focus();
	return false;
	}
	if(packingId==""){
	alert("Please select a packing");	
	parent.document.frmDailyProcessing.packingType.focus();
	return false;
	}
	
	//parent.document.frmDailyProcessing.submit();
return true;
}


function passValue(){

	loc= 'DailyProcessingGrade.php?codeEditId=' + document.frmDailyProcessingGradeList.codeEditId.value+'&lotEditId=' + document.frmDailyProcessingGradeList.lotEditId.value ;

	parent.document.getElementById('iFrame1').src=loc;
	
	parent.document.frmDailyProcessing.lotEditId.value		=	document.frmDailyProcessingGradeList.lotEditId.value;
	parent.document.frmDailyProcessing.editFishId.value		=	document.frmDailyProcessingGradeList.editFishId.value;
	parent.document.frmDailyProcessing.editProcessId.value	=	document.frmDailyProcessingGradeList.editProcessId.value;
	
	//parent.document.frmDailyProcessing.submit();
}


//Reload IFRAME2

function updateGradeListFrame(){
	parent.iFrame2.document.frmDailyProcessingGradeList.submit();
	
}

function validateAddCompetitorsCatch(form)
{
	var landingCenter	=	form.landingCenter.value;
	
	
	if( landingCenter=="")
		{
			alert("Please select a Landing Center");
			form.landingCenter.focus();
			return false;
		}
		
	/*
	else if(!isDigit(qty)) {
	alert("Please enter Digit Only.");
	form.quantity.focus();
	return false;
	}*/

	
	if( confirmSave()){
  		return true;
	} else {
		return false;
	}
}

function passUrlValue(){
//alert("Hai");

	loc= 'CompetitorsCatchFishList.php?catchEditId='+ document.frmCompetitorsCatchList.catchId.value+'&competitorEditId=' + document.frmCompetitorsCatchList.competitor.value ;
//alert(loc);
	parent.document.getElementById('iFrame1').src=loc;
	
	parent.document.frmCompetitorsCatch.catchEditId.value	=	document.frmCompetitorsCatchList.catchId.value;
	parent.document.frmCompetitorsCatch.editCompetitor.value	=	document.frmCompetitorsCatchList.competitor.value;
		
	//parent.document.frmCompetitorsCatch.submit();
}

function validateCompetitorSave(form){
	
	var competitor	=	parent.document.frmCompetitorsCatch.competitor.value;
	//alert(competitor);
	
	if( competitor=="")
		{
			alert("Please select a Competitor");
			parent.document.frmCompetitorsCatch.competitor.focus();
			return false;
		}
	
	//parent.document.frmCompetitorsCatch.submit();
return true;
}

//Reload IFRAME2

function updateFrame(){
	
	parent.iFrame2.document.frmCompetitorsCatchList.submit();
	
}function validateSupplierAccount(form)
{
	
	var supplyFrom		=	form.supplyFrom.value;
	var supplyTill		=	form.supplyTill.value;
	
	
	var d = new Date();
	var t_date = d.getDate();      // Returns the day of the month
	var t_mon = d.getMonth() + 1;      // Returns the month as a digit
	var t_year = d.getFullYear();  // Returns 4 digit year
	
	curr_date	=	t_date + "/" + t_mon + "/" + t_year;

	if(supplyFrom==""){
		
			alert("Please select Supply From Date");
			form.supplyFrom.focus();
			return false;
	}
	
	if(supplyTill==""){
		
			alert("Please select Supply Till Date");
			form.supplyTill.focus();
			return false;
	}
	
	/*if(supplyTill > curr_date){
			
			alert("Supply Till Date should be less than or equal to current date");
			//form.supplyTill.focus();
			return false;
	}*/
		
	
		
	if( confirmSave()){
  		return true;
	} else {
		return false;
	}
}

function actualAmount(form){

	var rowCount			=	document.getElementById("hidRowCount").value;
	var total	= 0;
	var weight	=	"weight_";
	var rate	=	"rate_";
	var actualRate	=	"totalRate_";
	var payableWt	=	"payableWt_";
	var declWt		=	"declWt_";
	var payableRate	=	"payableRate_";
	var declRate	=	"declRate_";
	
	for (i=1; i<=rowCount; i++)
	  {
		  
		  if(document.getElementById(weight+i).value=="")
		  {
			  document.getElementById(weight+i).value	=	0;
		  }
		  if(document.getElementById(rate+i).value=="")
		  {
			  document.getElementById(rate+i).value	=	0;
		  }
		  
		  if(parseFloat(document.getElementById(weight+i).value) < (document.getElementById(payableWt+i).value || document.getElementById(declWt+i).value)){
			document.getElementById(weight+i).className='err2';  
		  } else {
			  document.getElementById(weight+i).className='input';
		  }
		  
		  if(parseFloat(document.getElementById(rate+i).value) > (document.getElementById(payableRate+i).value || document.getElementById(declRate+i).value) || (document.getElementById(payableRate+i).value || document.getElementById(declRate+i).value)==""){
			  
			  document.getElementById(rate+i).className='err2';  
			  
		  } else{
			  document.getElementById(rate+i).className='input';
			 }
		  
		if(document.getElementById(weight+i).value!="" && document.getElementById(rate+i).value!="")				
		{			 
	  	document.getElementById(actualRate+i).value = document.getElementById(weight+i).value * document.getElementById(rate+i).value ;
	  	}
	  
	 total		=	parseFloat(total)+parseFloat(document.getElementById(actualRate+i).value);
	}
	
	if(!isNaN(total)){
		form.netPayable.value = total;	
		form.grandTotalRate.value=total;
	}
}

function validateSupplierAccountSearch(form){
	var landingCenter	=	form.landingCenter.value;
	var supplier		=	form.supplier.value;
	var selSettlement	=	form.selSettlement.value;
	
		
	form.selChallan.value="";
	
	
	if( supplier=="")
		{
			alert("Please select a Supplier");
			form.supplier.focus();
			return false;
		}
		
	if( landingCenter=="")
		{
			alert("Please select a Landing Center");
			form.landingCenter.focus();
			return false;
		}
	
	if( selSettlement=="")
		{
			alert("Please select a Settlement Date");
			form.selSettlement.focus();
			return false;
		}
}

/*function getKeyCode(e)
{
	if(window.event!=undefined) return window.event.keyCode;
	return e.which;
}*/

function nextBox(e,form,name)
{
	var ecode = getKeyCode(e);	
	//alert(ecode);
	var sName = name.split("_");
	dArrowName = sName[0]+"_"+(sName[1]-2);
	
	if ((ecode==13) || (ecode == 9) || (ecode==40)){
		var nextControl = eval(form+"."+name);
		if ( nextControl ) { nextControl.focus(); }
		return false;
    }
	if ((ecode==38)){
		var nextControl = eval(form+"."+dArrowName);
		if ( nextControl ) { nextControl.focus(); }
		return false;
    }
	
}

function calcAmount(form){

	var rowCount			=	document.getElementById("hidRowCount").value;
	var total	= 0;
	var totalAmount = 0;
	var declWt	=	"declWt_";
	var rate	=	"rate_";
	var amount	=	"amount_";

	for (i=1; i<=rowCount; i++)
	  {
  		 total = parseFloat(document.getElementById(declWt+i).value) * parseFloat(document.getElementById(rate+i).value);
		 if(!isNaN(total)){
		 document.getElementById(amount+i).value = formatNumber(Math.abs(total),2,'','.','','','','','');
		 } else {
			 document.getElementById(amount+i).value = 0;
		 }
		 totalAmount = parseFloat(totalAmount) + total;
	  }
	
	if(!isNaN(total)){
		document.getElementById("totalAmount").value = formatNumber(Math.abs(totalAmount),2,'','.','','','','','');
	}
}


function validateSupplierAccountSearch(form){
	
	var supplyFrom			=	form.supplyFrom.value;
	var supplyTill			=	form.supplyTill.value;
	var declaredWeighNo		=	form.paymentMode[0].checked;
	var declaredSuppNo		=	form.paymentMode[1].checked;
	var effectiveWeighNo	=	form.paymentMode[2].checked;
	var summaryView			=	form.viewType[0].checked;
	var detailedView		=	form.viewType[1].checked;
	var supplier			=	form.supplier.value;
	
	if(supplyFrom==""){
		
			alert("Please select Supply From Date");
			form.supplyFrom.focus();
			return false;
	}
	
	if(supplyTill==""){
		
			alert("Please select Supply Till Date");
			form.supplyTill.focus();
			return false;
	}
	if(declaredWeighNo=="" && declaredSuppNo=="" && effectiveWeighNo==""){
		
			alert("Please select atleast one payment mode option");
			//form.declaredWeighNo.focus();
			return false;
	}
	
	if(summaryView=="" && detailedView==""){
		
			alert("Please select atleast one View Type");
			//form.declaredWeighNo.focus();
			return false;
	}
	
	if(declaredSuppNo!="" && supplier==""){
			alert("Please select a supplier");
			form.supplier.focus();
			return false;
	}
	
	return true;
}

function nextDeclWtBox(e,form,name)
{
	var ecode = getKeyCode(e);	
	//alert(ecode);
	var sName = name.split("_");
	dArrowName = sName[0]+"_"+(sName[1]-2);
	
	//Down Arrow
	if ((ecode==40)) {
		var nextControl = eval(form+"."+name);
		//alert(name);
		if (nextControl) { nextControl.focus(); }
		return false;
   	}

	//Up Arrow
	if ((ecode==38)) {
		var nextControl = eval(form+"."+dArrowName);
		//alert(dArrowName);
		if ( nextControl ) { nextControl.focus(); }
		return false;
    	}
	
}
function validateAddSupplierPayments(form)
{
	
	var supplier	=	form.supplier.value;
	var chequeNo	=	form.chequeNo.value;
	var amount		=	form.amount.value;

	if( supplier=="")
		{
			alert("Please select a Supplier");
			form.supplier.focus();
			return false;
		}
		
	/*if(chequeNo=="")
		{
			alert("Please enter a Cheque Number");
			form.chequeNo.focus();
			return false;
		}*/
	if(amount=="")
		{
			alert("Please enter Amount");
			form.amount.focus();
			return false;
		}
	if(!isDigit(amount)){
		
			alert("The Amount should be Numeric Value");
			form.amount.focus();
			return false;
	}
		
	
	
	if( confirmSave()){
  		return true;
	} else {
		return false;
	}
}

function validateSelect(form){

var selFish		=	form.selFilter.value;
var dateSelect	=	form.selDate.value;

if(selFish!=0 && dateSelect==0){
	alert("Please select a date");
	form.selDate.focus();
	return false;
}
if(selFish==0 && dateSelect!=0){
	alert("Please select a Fish to view date wise list");
	form.selFilter.focus();
	return false;
}

return true;	
}
function actualValue(form){

	var rowCount	=	document.getElementById("hidRowCount").value;
	var total	= 	0;
	var commission	=	"commission_";
	var rate	=	"rate_";
	var actualRate	=	"totalRate_";
	var totalArrivalQty 		=	"totalArrivalQty_";
	var totalPreProcessedQty 	= 	"totalPreProcessedQty_";
	var preProcessedQty 		=	"preProcessedQty_";
	var preProcessRate		=	"preProcessRate_";
	var preProcessCommission	=	"preProcessCommission_";
	var criteria			=	"criteria_";
	var idealYield			=	"idealYield_";
	var actualYield			=	"actualYield_";
	var totalPreProcessAmt		=	0;
	var ratePerKg			=	0;
	var amount			=	0;
	var totalPreProcessorsQty	=	0;
			
	
	for (i=1; i<=rowCount; i++)
	  {

		totalPreProcessorsQty		=	document.getElementById(totalPreProcessedQty+i).value;
				
		if (document.getElementById(commission+i).value!="" && document.getElementById(rate+i).value!="") {			 
	  	
		 if (document.getElementById(criteria+i).value==1) {
			
			//if (From) and actual yield> ideal yield  then yield=actual yield
			if (parseFloat(document.getElementById(actualYield+i).value) > parseFloat(document.getElementById(idealYield+i).value)) {
				totalPreProcessAmt  =	(document.getElementById(totalPreProcessedQty+i).value/(document.getElementById(actualYield+i).value/100)) * document.getElementById(rate+i).value + document.getElementById(totalPreProcessedQty+i).value * document.getElementById(commission+i).value;
			} else {
				
				totalPreProcessAmt  =	(document.getElementById(totalPreProcessedQty+i).value/(document.getElementById(idealYield+i).value/100)) * document.getElementById(rate+i).value + document.getElementById(totalPreProcessedQty+i).value * document.getElementById(commission+i).value;
			}
		} else {
    			totalPreProcessAmt	=	document.getElementById(totalPreProcessedQty+i).value*document.getElementById(rate+i).value + document.getElementById(totalPreProcessedQty+i).value * document.getElementById(commission+i).value;
		}
		
		ratePerKg		=	 totalPreProcessAmt/totalPreProcessorsQty;
		
		amount		=	document.getElementById(preProcessedQty+i).value * ratePerKg;
		
		document.getElementById(actualRate+i).value = formatNumber(Math.abs(amount),2,'','.','','','','','');
		
	  	}
	 total				=	parseFloat(total)+parseFloat(document.getElementById(actualRate+i).value);
	}
	
	if(!isNaN(total)){
		form.netPayable.value 		= total;	
		form.totalProcessRate.value = total;
	}
}


function validateSettlement(form){
	var processor = form.selProcessor.value;
	var selProcessCode = form.selProcessCode.value;
	
	/*if( processor=="")
		{
			alert("Please select a Pre-Processor");
			form.selProcessor.focus();
			return false;
		}*/
	if (processor=="" && selProcessCode=="") {
		alert(" Please select a Pre-Process Code or Pre-Processor");
		return false;
	}

	return true;	
}

function validateProcessorsSettlement(form) {
	
	var processor = form.selProcessor.value;
	var selProcessCode = form.selProcessCode.value;
	
	/*if( processor=="")
		{
			alert("Please select a Pre-Processor");
			form.selProcessor.focus();
			return false;
		}*/
	if (processor=="" && selProcessCode=="") {
		alert(" Please select a Pre-Process Code or Pre-Processor");
		return false;
	}

	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}

/*function changePreProcessor()
{
	document.getElementById("selProcessor").value = "";
}

function changeProcessCode()
{
	document.getElementById("selProcessCode").value = "";
}*/function validateAddProcessorsPayments(form)
{
	
	var processor	=	form.selProcessor.value;
	//var chequeNo	=	form.chequeNo.value;
	var amount		=	form.amount.value;

	if( processor=="")
		{
			alert("Please select a Pre-Processor");
			form.selProcessor.focus();
			return false;
		}
		
	/*if(chequeNo=="")
		{
			alert("Please enter a Cheque Number");
			form.chequeNo.focus();
			return false;
		}*/
	if(amount=="")
		{
			alert("Please enter Amount");
			form.amount.focus();
			return false;
		}
	if(!isDigit(amount)){
		
			alert("The Amount should be Numeric Value");
			form.amount.focus();
			return false;
	}
		
	
	
	if( confirmSave()){
  		return true;
	} else {
		return false;
	}
}function validateAddFishCategory(form)
{
	
	var fishType	=	form.fishType.value;
	
	if(fishType=="" )
	{
		alert("Please enter a Category Name.");
		form.fishType.focus();
		return false;
	}
	
	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}

function validateAddUnit(form)
{
	
	var unit		=	form.unit.value;
	var selReceive	=	form.selReceive.value;	
	
	if(unit=="" )
	{
		alert("Please enter a Unit Name.");
		form.unit.focus();
		return false;
	}
	
	if(selReceive=="" )
	{
		alert("Please select a Receive Type.");
		form.selReceive.focus();
		return false;
	}
	
	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}

function validateDailyCatchReport(form)
{
	var supplier		=	form.selSupplier.value;
	var weighChallan	=	form.selWeighment.value;
	if (supplier=="") {
		alert("Please select a Supplier");
		form.selSupplier.focus();
		return false;
	}
		
	if (weighChallan=="") {
		alert("Please select a Weighment Challan No");
		form.selWeighment.focus();
		return false;
	}
	return true;
}

function validateSearch(form)
{
	var weighChallan	=	form.weighNumber.value;
	if (weighChallan=="") {
		alert("Please enter a Weighment Challan No");
		form.weighNumber.focus();
		return false;
	}
	return true;
}

//For confirm the challn no
function validateDailyCatchReportConfirm(form)
{	
	var zeroEntryExist = document.getElementById("zeroEntryExist").value;
	if (zeroEntryExist!="") {
		alert("Please make sure the Weighment Challan have no zero entry exists.");		
		return false;
	}
	if (!confirmSave()) {
		return false;
	} 
	return true;
}

// Display Search Bttn
/*
function displaySearchBtn()
{
	var selSuppChallanNo = document.getElementById("selSuppChallanNo").value;
	if (selSuppChallanNo!="") {
		//document.getElementById("searchDiv").style.display = "";
	} else {
		//document.getElementById("searchDiv").style.display = "none";
	}
}
*/


function validateSummarySearch(form)
{
	var supplier		=	form.supplier.value;

	var day			=	form.dateSelection[0].checked;
	var dateRange		=	form.dateSelection[1].checked;

	var supplierDate 	=	form.dateSelectFrom[0].checked;
	var wtChallanDate	=	form.dateSelectFrom[1].checked;

	if (supplierDate) {
		var supplierMemo		=	form.supplierMemo.checked;
		var declWtSummary		= 	form.declWtSummary.checked;
		var proSummary			=	form.proSummary.checked;
		//var supSetlmentSummary		=	form.supSetlmentSummary.checked;
	}

	if (wtChallanDate) {
		
		var details			=	form.details.checked;
		var proCount			=	form.proCount.checked;
		var proSummary			=	form.proSummary.checked;
		var fishCatchSummary 		=	form.fishCatchSummary.checked;
		var wtChallanSummary		=	form.wtChallanSummary.checked;

		var RMMatrix			=	form.RMMatrix.checked;
		var localQtyReportChk		=	form.localQtyReportChk.checked;
		var localQtyChk			=	form.localQtyChk.checked;
		var dailySummary		=	form.dailySummary.checked;
		var RMRateMatrix 		=	form.RMRateMatrix.checked;
	}

	// For a date range
	if (dateRange) {
		var supplyFrom			=	form.supplyFrom.value;
		var supplyTill			=	form.supplyTill.value;
	
		if (supplyFrom=="") {
			alert("Please select Supply From Date");
			form.supplyFrom.focus();
			return false;
		}
		
		if (supplyTill=="") {
			alert("Please select Supply Till Date");
			form.supplyTill.focus();
			return false;
		}
	}
	
	//For a Day
	if (day) {
		var selDate		=	form.selDate.value;
		if (selDate=="") {
			alert("Please select a day");
			form.selDate.focus();
			return false;
		}
	}

	//&& supSetlmentSummary==""
	if (supplierDate!="" && supplierMemo=="" && declWtSummary=="" && proSummary=="" ) {
		alert("Please select atleast one Search option ");
		return false;
	}

	if (wtChallanDate!="" && details=="" && proCount=="" && proSummary=="" && fishCatchSummary=="" && wtChallanSummary=="" && RMMatrix=="" && localQtyReportChk=="" && dailySummary=="" && RMRateMatrix=="") {
		alert("Please select atleast one Search option ");
		return false;
	}

	if (supplierDate) {	
		if (supplierMemo!="") {
			if (supplier==0) {
				alert("Please select a Supplier");
				form.supplier.focus();
				return false;
			}
		}
			
		if (declWtSummary!="") {
			if (supplier==0) {
				alert("Please select a Supplier");
				form.supplier.focus();
				return false;
			}
		}
	}

	if (!wtChallanSummary && !proCount && !proSummary && wtChallanDate!="") {
		form.localQtyChk.checked = false;
	}
 return true;
}
//Advance search option
function validateAdvanceSearch(form)
{
	$checked = false;
	var supplyFrom		=	form.supplyFrom.value;
	var supplyTill		=	form.supplyTill.value;
	if(supplyFrom==""){
		
			alert("Please select Supply From Date");
			form.supplyFrom.focus();
			return false;
	}
	
	if(supplyTill==""){
		
			alert("Please select Supply Till Date");
			form.supplyTill.focus();
			return false;
	}
return true;
}

function removeChkLocal(form)
{
	var wtChallanDate	=	form.dateSelectFrom[1].checked;
	if (wtChallanDate) form.localQtyChk.checked = false;
}

function removeChkRate(form)
{
	form.rateNAmount.checked = false;
	if ((form.wtChallanSummary.checked || form.proCount.checked || form.proSummary.checked) && form.localQtyChk.checked) {
		form.localQtyChk.checked = true;
	} else form.localQtyChk.checked = false;
}
//Using to activate only one search option
function removeAllChk(form, field)
{
	var supplierDate 	=	form.dateSelectFrom[0].checked;
	var wtChallanDate	=	form.dateSelectFrom[1].checked;

	if (!document.getElementById(field).checked) chk = false;
	else chk = true;

	if (wtChallanDate) {

		form.details.checked=false;
		form.proCount.checked =false;
		form.proSummary.checked =false;
		form.fishCatchSummary.checked =false;
		form.wtChallanSummary.checked =false;
		form.RMMatrix.checked = false;
		form.localQtyReportChk.checked = false;
		form.dailySummary.checked= false;
		form.RMRateMatrix.checked= false;
	}

	if (supplierDate) {
		form.supplierMemo.checked = false;
		form.declWtSummary.checked=false;
		form.proSummary.checked =false;
		//form.supSetlmentSummary.checked=false;
	}
	document.getElementById(field).checked = chk;
}

//Check Number of Sub Supplier Before Printing
function checkNumSubSupplier(form)
{
	var supplierDate 	=	form.dateSelectFrom[0].checked;
	var wtChallanDate	=	form.dateSelectFrom[1].checked;
	var QS			= 	form.searchMode[0].checked;
	var AS			= 	form.searchMode[1].checked;

	if (supplierDate && QS!="") {
		var subSupplierChk	= form.subSupplierChk.checked;
		var hidNumOfSubSupplier = form.hidNumOfSubSupplier.value;
		if (subSupplierChk!="" && hidNumOfSubSupplier!="") {
			alert("More than one Sub-Supplier. So can't Print Sub-Supplier wise Memo");
			return false;
		}		
	}	
	return true;
}function validateProcessingReport(form){

	var selDate			=	form.selDate.value;	
	var plant 			=	form.selUnit.value;
	var selLotNo		=	form.selLotNo.value;
	var selFish			=	form.selFish.value;
	var selProcessCode	=	form.selProcessCode.value;
	
	
	if(selDate==""){
		
			alert("Please select a Date");
			form.selDate.focus();
			return false;
	}
	
	
	if( plant==""){
		
			alert("Please select a Unit");
			form.selUnit.focus();
			return false;
		}
		
	if( selLotNo==""){
		
			alert("Please select a Lot No");
			form.selLotNo.focus();
			return false;
		}
	if( selFish==""){
		
			alert("Please select a Fish");
			form.selFish.focus();
			return false;
		}
	if( selProcessCode==""){
		
			alert("Please select a Process Code");
			form.selProcessCode.focus();
			return false;
		}		
		
		
return true;
}

	function validatePreProcessingReport(form)
	{
		var dateFrom		= form.dateFrom.value;
		var dateTo		= form.dateTo.value;
		
		if (dateFrom=="") {
			alert("Please select From Date");
			form.dateFrom.focus();
			return false;
		}
		
		if (dateTo=="") {
			alert("Please select To Date");
			form.dateTo.focus();
			return false;
		}
		if (!document.getElementById("summary").checked && !document.getElementById("details").checked && !document.getElementById("qtySummary").checked) {
			alert("Please select atleast one search option");			
			return false;
		}		
			
	return true;
	}

	function hideSummaryOption()
	{
		document.getElementById("summary").checked=false;
		document.getElementById("qtySummary").checked=false;	
		//document.frmPreProcessingReport.submit();
	}
	
	
	function hideDetailedOption()
	{
		document.getElementById("details").checked=false;
		document.getElementById("qtySummary").checked=false;
		//document.frmPreProcessingReport.submit();
	}

	function hideOtherOption()
	{
		document.getElementById("summary").checked=false;	
		document.getElementById("details").checked=false;
	}
function validateAddUser(form)
{
	var userName		=	form.userName.value;
	var userPassword	=	form.userPassword.value;
	var userRePassword	=	form.userRePassword.value;
	var selRole			=	form.selRole.value;
		
	if(userName=="" )
	{
		alert("Please enter a Email ID.");
		form.userName.focus();
		return false;
	}
	if ( !checkemailUsername(userName) )
	{
		form.userName.focus();
		return false;
	}
	
	if(userPassword=="" )
	{
		alert("Please enter a Password.");
		form.userPassword.focus();
		return false;
	}
	
	if(userRePassword=="" )
	{
		alert("Please Retype your Password.");
		form.userRePassword.focus();
		return false;
	}
	
	if(userPassword!=userRePassword){
		alert("The entered passwords doesn't match");
		return false;
	}
	
	if(selRole=="" )
	{
		alert("Please select a Role.");
		form.selRole.focus();
		return false;
	}
	
	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}

var selectedf = false;

function validateAddRoleFunction(form)
{
	var selModule		=	form.selModule.value;
	var selAccess		=	form.selAccess.checked;
	var selAdd			=	form.selAdd.checked;
	var selEdit			=	form.selEdit.checked;
	var selDelete		=	form.selDelete.checked;
	var selPrint		=	form.selPrint.checked;
	var selConfirm		=	form.selConfirm.checked;
	
	if (selModule=="") {
			alert("Please select a Module");
			form.selModule.focus();
			return false;
	}
	if(selAccess=="" && selAdd=="" && selEdit=="" && selDelete=="" && selPrint=="" && selConfirm=="" ) {
		alert("Please select any one control option.");
		return false;
	}	
	/*if(!confirmSave()) {
		return false;
	} else {
		return true;
	}*/
}

//Main Page validation 
function validateAddRole(form)
{
	var roleName		= form.roleName.value;
	var rowCount2		= document.getElementById("hidRowCount2").value;
	var hidRowCount1	= "hidRowCount1_";
	var selFunction		= "functionId_";
	var checkSelect		= false;
	var cpyFrom		= false;
	
	var addMode		= document.getElementById("hidAddMode").value;
	if (roleName=="") {
		alert("Please enter a role name");
		form.roleName.focus();
		return false;
	}

	if (addMode) {
		var copyRoleId = document.getElementById("copyRoleId").value;
		if (copyRoleId!="") cpyFrom = true;
	}
	if (!cpyFrom) {
		for(var i=1; i<=rowCount2; i++)	{
			var rowCount1	=	document.getElementById(hidRowCount1+i).value;
			for (var j=0; j<=rowCount1; j++) {
				var functionId	=	selFunction+i+"_"+j;
				var fieldPrefix	=	selFunction+i+"_";
				if (document.getElementById(functionId).checked) {
					checkSelect	= true;
				}
			}
		}
		if (checkSelect==false) {
			alert("Please select atleast one Function");
			return false;
		}
	}

	if (!confirmSave()) return false;
	else return true;	
}

function anyChecked(rowCount,fieldPrefix)
{
	for ( i=0; i<=rowCount; i++ ) {
		if (document.getElementById(fieldPrefix+i).checked) {
			//alert(fieldPrefix+i);
			return true;
		}		
	}
	return false;
}

// Select all
/*
function selectAll(field)
{
	var rowCount2			=	document.getElementById("hidRowCount2").value;
	var hidRowCount1		=	"hidRowCount1_";	
	for(var i=1; i<=rowCount2; i++)	{
		var rowCount1	=	document.getElementById(hidRowCount1+i).value;
		//alert (rowCount2);
		for (var j=0; j<=rowCount1; j++) {
			var CheckAll	=	"CheckAll_"+i+"_"+j;
			var selAccess	=	"selAccess_"+i+"_"+j;
			var selAdd	=	"selAdd_"+i+"_"+j;
			var selEdit	=	"selEdit_"+i+"_"+j;
			var selDelete	=	"selDelete_"+i+"_"+j;
			var selPrint	=	"selPrint_"+i+"_"+j;
			var selConfirm	=	"selConfirm_"+i+"_"+j;
			var selReEdit	=	"selReEdit_"+i+"_"+j;
			//alert("CheckAll_"+i+"_"+j);
			//var selActive	=	"selActive_"+i+"_"+j;
				
			if (document.getElementById(CheckAll).checked) {
				document.getElementById(selAccess).checked = true;
				document.getElementById(selAdd).checked = true;
				document.getElementById(selEdit).checked = true;
				document.getElementById(selDelete).checked = true;
				document.getElementById(selPrint).checked = true;
				document.getElementById(selConfirm).checked = true;
				document.getElementById(selReEdit).checked = true;
				//document.getElementById(selActive).checked = true;
				
			} else {
				if (!document.getElementById(selAdd).checked)
					document.getElementById(selAdd).checked = false;
				if (!document.getElementById(selEdit).checked) 
					document.getElementById(selEdit).checked = false;
				if (!document.getElementById(selDelete).checked)
					document.getElementById(selDelete).checked = false;
				if (!document.getElementById(selPrint).checked)
					document.getElementById(selPrint).checked = false;
				if (!document.getElementById(selConfirm).checked)
					document.getElementById(selConfirm).checked = false;
				if (!document.getElementById(selReEdit).checked) 
					document.getElementById(selReEdit).checked = false;
				//document.getElementById(selActive).checked = false;
				}
			}
	}
	checkSelect(field);
}
*/
/*
function checkSelect(field)
{
	var rowCount2		= document.getElementById("hidRowCount2").value;
	var hidRowCount1	= "hidRowCount1_";	
	for(var i=1; i<=rowCount2; i++)	{
		var rowCount1	=	document.getElementById(hidRowCount1+i).value;
		for (var j=0; j<=rowCount1; j++) {
			var CheckAll	=	"CheckAll_"+i+"_"+j;
			var selFunction	= 	"functionId_"+i+"_"+j;
			var selAccess	=	"selAccess_"+i+"_"+j;
			var selAdd	=	"selAdd_"+i+"_"+j;
			var selEdit	=	"selEdit_"+i+"_"+j;
			var selDelete	=	"selDelete_"+i+"_"+j;
			var selPrint	=	"selPrint_"+i+"_"+j;
			var selConfirm	=	"selConfirm_"+i+"_"+j;
			var selReEdit	=	"selReEdit_"+i+"_"+j;
			//var selActive	=	"selActive_"+i+"_"+j;				
			if (document.getElementById(selAdd).checked) {
				document.getElementById(selFunction).checked = true;
				document.getElementById(selAccess).checked = true;
				//document.getElementById(selActive).checked	= true;
			}
			if (document.getElementById(selEdit).checked) {
				document.getElementById(selFunction).checked = true;
				document.getElementById(selAccess).checked = true;
				//document.getElementById(selActive).checked	= true;
			}
			if (document.getElementById(selDelete).checked) {
				document.getElementById(selFunction).checked = true;
				document.getElementById(selAccess).checked = true;
				//document.getElementById(selActive).checked	= true;
			}
				
			if (document.getElementById(selPrint).checked) {
				document.getElementById(selFunction).checked = true;
				document.getElementById(selAccess).checked = true;
				//document.getElementById(selActive).checked	= true;
			}
				
			if (document.getElementById(selConfirm).checked) {
				document.getElementById(selFunction).checked = true;
				document.getElementById(selAccess).checked = true;
				//document.getElementById(selActive).checked	= true;
			}
			if (document.getElementById(selReEdit).checked) {
				document.getElementById(selFunction).checked = true;
				document.getElementById(selAccess).checked = true;
				//document.getElementById(selActive).checked	= true;
			}
			/*if(document.getElementById(selActive).checked){
				document.getElementById(selFunction).checked = true;
				document.getElementById(selAccess).checked = true;
			}*/
			// Un select check all
/*			if (!document.getElementById(selAdd).checked || !document.getElementById(selEdit).checked || !document.getElementById(selDelete).checked || !document.getElementById(selPrint).checked || !document.getElementById(selConfirm).checked || !document.getElementById(selReEdit).checked) {
				document.getElementById(CheckAll).checked = false;
			}			
		}
	}
}
*/

	function selAll(i,j)
	{
		var CheckAll	=	"CheckAll_"+i+"_"+j;
		var selAccess	=	"selAccess_"+i+"_"+j;
		var selAdd	=	"selAdd_"+i+"_"+j;
		var selEdit	=	"selEdit_"+i+"_"+j;
		var selDelete	=	"selDelete_"+i+"_"+j;
		var selPrint	=	"selPrint_"+i+"_"+j;
		var selConfirm	=	"selConfirm_"+i+"_"+j;
		var selReEdit	=	"selReEdit_"+i+"_"+j;
		//var selActive	=	"selActive_"+i+"_"+j;
				
		if (document.getElementById(CheckAll).checked) {
			document.getElementById(selAccess).checked = true;
			document.getElementById(selAdd).checked = true;
			document.getElementById(selEdit).checked = true;
			document.getElementById(selDelete).checked = true;
			document.getElementById(selPrint).checked = true;
			document.getElementById(selConfirm).checked = true;
			document.getElementById(selReEdit).checked = true;
			//document.getElementById(selActive).checked = true;
		} else {
			if (!document.getElementById(selAdd).checked)
				document.getElementById(selAdd).checked = false;
			if (!document.getElementById(selEdit).checked) 
				document.getElementById(selEdit).checked = false;
			if (!document.getElementById(selDelete).checked)
				document.getElementById(selDelete).checked = false;
			if (!document.getElementById(selPrint).checked)
				document.getElementById(selPrint).checked = false;
			if (!document.getElementById(selConfirm).checked)
				document.getElementById(selConfirm).checked = false;
			if (!document.getElementById(selReEdit).checked) 
				document.getElementById(selReEdit).checked = false;
				//document.getElementById(selActive).checked = false;
		}
		// selected check
		checkSel(i,j);		
	}

	function checkSel(i,j)
	{
		var CheckAll	=	"CheckAll_"+i+"_"+j;
		var selFunction	= 	"functionId_"+i+"_"+j;
		var selAccess	=	"selAccess_"+i+"_"+j;
		var selAdd	=	"selAdd_"+i+"_"+j;
		var selEdit	=	"selEdit_"+i+"_"+j;
		var selDelete	=	"selDelete_"+i+"_"+j;
		var selPrint	=	"selPrint_"+i+"_"+j;
		var selConfirm	=	"selConfirm_"+i+"_"+j;
		var selReEdit	=	"selReEdit_"+i+"_"+j;
		//var selActive	=	"selActive_"+i+"_"+j;
				
		if (document.getElementById(selAdd).checked) {
			document.getElementById(selFunction).checked = true;
			document.getElementById(selAccess).checked = true;
			//document.getElementById(selActive).checked	= true;
		}
		if (document.getElementById(selEdit).checked) {
			document.getElementById(selFunction).checked = true;
			document.getElementById(selAccess).checked = true;
			//document.getElementById(selActive).checked	= true;
		}
		if (document.getElementById(selDelete).checked) {
			document.getElementById(selFunction).checked = true;
			document.getElementById(selAccess).checked = true;
			//document.getElementById(selActive).checked	= true;
		}
				
		if (document.getElementById(selPrint).checked) {
			document.getElementById(selFunction).checked = true;
			document.getElementById(selAccess).checked = true;
			//document.getElementById(selActive).checked	= true;
		}
				
		if (document.getElementById(selConfirm).checked) {
			document.getElementById(selFunction).checked = true;
			document.getElementById(selAccess).checked = true;
			//document.getElementById(selActive).checked	= true;
		}
		if (document.getElementById(selReEdit).checked) {
			document.getElementById(selFunction).checked = true;
			document.getElementById(selAccess).checked = true;
			//document.getElementById(selActive).checked	= true;
		}
		/*if(document.getElementById(selActive).checked){
			document.getElementById(selFunction).checked = true;
			document.getElementById(selAccess).checked = true;
		}*/
		// Un select check all
		if (!document.getElementById(selAdd).checked || !document.getElementById(selEdit).checked || !document.getElementById(selDelete).checked || !document.getElementById(selPrint).checked || !document.getElementById(selConfirm).checked || !document.getElementById(selReEdit).checked) {
			document.getElementById(CheckAll).checked = false;
		}	
	}


// Show Table Row
function showTableRow(tableRowId, moduleName)	
{
	var displayRow  = false;
	var rowCount	= document.getElementById("hidRowCount1_"+tableRowId).value;
	
	for (var j=1; j<=rowCount; j++) {		
		if (document.getElementById(tableRowId+"_"+j).style.display == "none" ) {
			document.getElementById(tableRowId+"_"+j).style.display = '';
			displayRow = true;
		} else {
			document.getElementById(tableRowId+"_"+j).style.display = "none";
		}		
	}
	if (displayRow) {
		document.getElementById("t_"+tableRowId).innerHTML = "<a href=\"###\"  onClick=\"showTableRow('"+tableRowId+"','"+moduleName+"');\" class=\"expandLink\">-</a>&nbsp;"+moduleName;
	} else {
		document.getElementById("t_"+tableRowId).innerHTML = "<a href=\"###\" onClick=\"showTableRow('"+tableRowId+"','"+moduleName+"');\" class=\"expandLink\">+</a>&nbsp;"+moduleName;
	}
	//alert(document.getElementById("t_"+tableRowId).innerHTML);
}

	function displayRoleFunctionList()
	{
		var copyRoleId = document.getElementById("copyRoleId").value;
		//var roleFnHead = document.getElementById("roleFnHead").value;
		if (copyRoleId!="") {
			document.getElementById("roleFnHead").style.display = "none";
			document.getElementById("roleFnList").style.display = "none";
		} else {
			document.getElementById("roleFnHead").style.display = "";
			document.getElementById("roleFnList").style.display = "";
		}
		
	}

function validateAddEuCode(form)
{
	
	var euCode		=	form.euCode.value;
	
	if( euCode=="" )
	{
		alert("Please enter a EU Code.");
		form.euCode.focus();
		return false;
	}
	
	
	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}

function validateAddGlaze(form)
{
	
	var glazePercent		=	form.glazePercent.value;
	
	if( glazePercent=="" )
	{
		alert("Please enter a Glaze Percentage.");
		form.glazePercent.focus();
		return false;
	}
	if(!isADigit(glazePercent)){
		alert("Please enter a number.");
		form.glazePercent.focus();
		return false;
	} 
	
	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}

//Checking Digit From 0- 
function isADigit (str) 
{
    if (str == null) 
	{
        return (false);
    }
    if (isNaN(str))
    {
	return (false);
    }
	else if(str<0)
	{
		return (false);
	}
    return (true);
}
function validateAddCustomer(form)
{
	var customerCode	=	form.customerCode.value;
	var customerName	=	form.customerName.value;
	var cuContactPerson	=	form.cuContactPerson.value;
	
	
	if( customerCode=="" )
	{
		alert("Please enter a Customer Code.");
		form.customerCode.focus();
		return false;
	}
	
	if( customerName=="" )
	{
		alert("Please enter a Customer name.");
		form.customerName.focus();
		return false;
	}
	
	if( cuContactPerson=="" )
	{
		alert("Please enter a Customer Contact Person.");
		form.cuContactPerson.focus();
		return false;
	}
	
	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}

function validateAddBrand(form)
{
	var selCustomer		=	form.selCustomer.value;
	var brand			=	form.brand.value;
	
	
	if( selCustomer=="" )
	{
		alert("Please select a Customer.");
		form.selCustomer.focus();
		return false;
	}
	
	if( brand=="" )
	{
		alert("Please enter a Brand.");
		form.brand.focus();
		return false;
	}
	
	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}

function validateAddFreezing(form)
{
	var name	=	form.name.value;
	
	
	if( name=="" )
	{
		alert("Please enter a Freezing name.");
		form.name.focus();
		return false;
	}
	
		
	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}

function validateAddMCPacking(form)
{
	var code		=	form.code.value;
	var numPacks	=	form.numPacks.value;	
	
	if( code=="" )
	{
		alert("Please enter a MC Packing Code.");
		form.code.focus();
		return false;
	}
	if( numPacks=="" )
	{
		alert("Please enter Number of Packs.");
		form.numPacks.focus();
		return false;
	}
	
	if(!isDigit(numPacks)){
		alert("Please enter a number.");
		form.numPacks.focus();
		return false;
	}
	
	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}

function validateAddFreezingStage(form)
{
	var stage	=	form.stage.value;
	
	
	if( stage=="" )
	{
		alert("Please enter a RM Stage.");
		form.stage.focus();
		return false;
	}
	
		
	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}

function validateFrozenPacking(form)
{
	
	var frozenCode		=	form.frozenCode.value;
	var selUnit			=	form.selUnit.value;
	var freezing		=	form.freezing.value;
	var declWt			=	form.declWt.value;
	var glaze			=	form.glaze.value;
	
	
	if( frozenCode=="" )
	{
		alert("Please enter a Frozen Packing code.");
		form.frozenCode.focus();
		return false;
	}
	
	if( selUnit=="" )
	{
		alert("Please select a Unit of Wt.");
		form.selUnit.focus();
		return false;
	}
	
	if( freezing=="" )
	{
		alert("Please select a Freezing Code.");
		form.freezing.focus();
		return false;
	}
	
	
	if( declWt=="" )
	{
		alert("Please enter a Declared Weight.");
		form.declWt.focus();
		return false;
	}
	
	if( glaze=="" )
	{
		alert("Please select a Glaze Percentage");
		form.glaze.focus();
		return false;
	}
	
	
	
	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}

function calculateFilledWt(){
	
	var declWt			=	0;
	var glazePercent	=	0;
	var filledWt		=	0;
	
	var freezing 		=	document.getElementById("freezing").value;	
	var splitOperator	=	freezing.split("_");
	var operator		=	splitOperator[1];
	
	var glaze			=	document.getElementById("glaze").value;
	var splitGlaze 		= 	glaze.split("_");	
	var glaze			=	splitGlaze[1]; 
	
	glazePercent		=	glaze/100;
		
	declWt	=	document.getElementById("declWt").value;
	
	/*if(operator==1) {
		filledWt = declWt*(1+glazePercent);
	}
	if(operator==0) {
		filledWt = declWt*(1-glazePercent);
	} edited on 18-12*/
	
	if(operator==1) {
		filledWt = declWt*(1+glazePercent);
	} 
	else if(operator==0) {
		filledWt = declWt*(1-glazePercent);
	}
	else {
		filledWt = declWt;
	}
	if(!isNaN(filledWt)){
		document.getElementById("filledWt").value = formatNumber(Math.abs(filledWt),2,'','.','','','','','');
	}
}function validateAddPaymentTerm(form)
{
	var paymentMode	=	form.paymentMode.value;

	
	if( paymentMode=="" )
	{
		alert("Please enter a Payment Mode.");
		form.paymentMode.focus();
		return false;
	}
	

	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}

function validateAddStatus(form)
{
	
	var status		=	form.status.value;
	
	if( status=="" )
	{
		alert("Please enter a Status.");
		form.status.focus();
		return false;
	}
	
	
	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}

function validateAddDailyFrozenPacking(form)
{
	
	var selectDate		=	form.selectDate.value;
	var selUnit		=	form.unit.value;
	var processor		=	form.processor.value;
	var lotId		=	form.lotId.value;
	var fish		=	form.fish.value;
	var processCode		=	form.processCode.value;
	var freezingStage	=	form.freezingStage.value;
	var eUCode		=	form.eUCode.value;
	var brand		=	form.brand.value;
	var frozenCode		=	form.frozenCode.value;
	var mCPacking		=	form.mCPacking.value;
	var exportLotId		=	form.exportLotId.value;
	var allocateMode	=	form.allocateMode.value;
	var selQuality		=	form.selQuality.value;
		
	if (selectDate=="") {
		alert("Please Select a Date.");
		form.selectDate.focus();
		return false;
	}
	
	if (selUnit=="") {
		alert("Please select a Unit.");
		form.unit.focus();
		return false;
	}
	if (processor=="") {
		alert("Please select a Processor.");
		form.processor.focus();
		return false;
	}
	
	if (fish=="") {
		alert("Please select a fish.");
		form.fish.focus();
		return false;
	}
	
	if (processCode=="") {
		alert("Please select a Process Code.");
		form.processCode.focus();
		return false;
	}

	if (freezingStage==0 &&  allocateMode!="") {
		alert("Please select a Freezing Stage.");
		form.freezingStage.focus();
		return false;
	}

	if (selQuality==0 &&  allocateMode!="") {
		alert("Please select a Quality.");
		form.selQuality.focus();
		return false;
	}

	if (eUCode==0 && allocateMode!="") {
		alert("Please select a EU Code.");
		form.eUCode.focus();
		return false;
	}
	
	if (brand==0 && allocateMode!="") {
		alert("Please select a Brand.");
		form.brand.focus();
		return false;
	}
	
	if (frozenCode=="") {
		alert("Please select a Frozen Code.");
		form.frozenCode.focus();
		return false;
	}
	
	if (mCPacking==0 && allocateMode!="") {
		alert("Please select a MC Packing.");
		form.mCPacking.focus();
		return false;
	}
	
	if (lotId=="" && allocateMode!="") {
		alert("Please enter a Frozen Lot Id.");
		form.lotId.focus();
		return false;
	}
	
	if (exportLotId==0 && allocateMode!="") {
		alert("Please select a PO Id.");
		form.exportLotId.focus();
		return false;
	}	
	//Checking Grade entered or not
	if (fish!="" && processCode!="") {
		isPackEntered 		= false;
		var entryModified 	= false;
		var rowCount		= parent.iFrame1.document.frmDailyFrozenPackingGrade.hidRowCount.value;
			
		for (i=1;i<=rowCount;i++) {
			var numMC	 = parent.iFrame1.document.getElementById("numMC_"+i).value;
			var numLooseSlab = parent.iFrame1.document.getElementById("numLooseSlab_"+i).value;
			
			var hidNumMC	    = parent.iFrame1.document.getElementById("hidNumMC_"+i).value;
			var hidNumLooseSlab = parent.iFrame1.document.getElementById("hidNumLooseSlab_"+i).value;

			if (numMC!="" || numLooseSlab!="") {
				isPackEntered = true;
			}

			if (numMC!=hidNumMC || numLooseSlab!=hidNumLooseSlab) {
				entryModified = true;
			}
		}
		if (isPackEntered ==false) {
			alert("Please enter Number of Packing Details.");
			return false;
		}	
		if (entryModified) {
			alert(" Please save the number of packing Details. ");
			return false;
		}	
	}
	// End Here checking grade
	if (!confirmSave()) {
		return false;
	}
	else
	{
		return true;
	}
}

function validateDailyFrozenPackingSearch(form)
{
	var frozenPackingFrom	=	form.frozenPackingFrom.value;
	var frozenPackingTill	=	form.frozenPackingTill.value;
	
	if (frozenPackingFrom=="") {
		alert("Please select From Date.");
		form.frozenPackingFrom.focus();
		return false;
	}
	
	if (frozenPackingTill=="") {
		alert("Please select Till Date.");
		form.frozenPackingTill.focus();
		return false;
	}

return true;
}

function validateFrozenpackingGrade(form)
{
	isPackEntered 		=	false;
	var rowCount		=	document.getElementById("hidRowCount").value;
	
	for(i=1;i<=rowCount;i++){
		var numMC		=	document.getElementById("numMC_"+i).value;
		var numLooseSlab	=	document.getElementById("numLooseSlab_"+i).value;
		if(numMC!="" || numLooseSlab!=""){
			isPackEntered = true;
		}
	}
	if( isPackEntered ==false )
	{
		alert("Please enter Number of Packing Details.");
		return false;
	}	
}


// left /right /up/down moving

function focusNextGradeEntry(e,form,name)
{
	var ecode = getKeyCode(e);	
	//alert(ecode);
	
	var rowCount	=	document.getElementById("hidRowCount").value;
      
	var fName = name.split("_");

	for(i=1;i<=rowCount;i++)
	{	
		var numMC		=	"numMC_"+i;
		var numLooseSlab	=	"numLooseSlab_"+i;
		// Down Arrow and enter key
		if ((ecode==13) || (ecode == 0) || (ecode==40))
		{			
			nextTextBoxName = fName[0]+"_"+(parseInt(fName[1])+1);
			var nextControl = eval(form+"."+nextTextBoxName);
			if ( nextControl ) { nextControl.focus();}			
			return false;
    		}
		//uP aRROW
		if ((ecode==38))
		{
			nextTextBoxName = fName[0]+"_"+(parseInt(fName[1])-1);
			var nextControl = eval(form+"."+nextTextBoxName);
			if ( nextControl ) { nextControl.focus(); }
			return false;
    		}
		//Right Arrow
		if ((ecode==39))
		{
			rightArrow	=  "numLooseSlab_"+(parseInt(fName[1]));
			var nextControl = eval(form+"."+rightArrow);
			if ( nextControl ) { nextControl.focus(); }
			return false;
	    	}
		//Left Arrow
		if ((ecode==37))
		{		
			leftArrow 	=	"numMC_" + (parseInt(fName[1]));	
			var nextControl = eval(form+"."+leftArrow);
			if ( nextControl ) { nextControl.focus(); }
			return false;
    		}
		
	}
}

function passMCPkgValue()
{
	//var mCPacking		=	form.mCPacking.value;
	mCPacking		=	document.getElementById("mCPacking").value;
	parent.iFrame1.document.frmDailyFrozenPackingGrade.hidMcPkg.value=mCPacking;
}function validatePurchaseOrder(form)
{
	var selectDate		=	form.selectDate.value;
	var selCustomer		=	form.selCustomer.value;
	var dischargePort	=	form.dischargePort.value;
	var fish			=	form.fish.value;
	var processCode		=	form.processCode.value;
	var selGrade		=	form.selGrade.value;
	var freezingStage	=	form.freezingStage.value;
	var eUCode			=	form.eUCode.value;
	var brand			=	form.brand.value;
	var frozenCode		=	form.frozenCode.value;
	var mCPacking		=	form.mCPacking.value;
	var numMC			=	form.numMC.value;
	var pricePerKg		=	form.pricePerKg.value;
	var paymentTerms	=	form.paymentTerms.value;
	var lastDate		=	form.lastDate.value;
	var lastDateStatus	=	form.lastDateStatus.value;
	var editMode		=	form.editMode.value;
	
	if( selectDate=="" )
	{
		alert("Please select a Date.");
		form.selectDate.focus();
		return false;
	}
	
	if( selCustomer=="" )
	{
		alert("Please select a Customer.");
		form.selCustomer.focus();
		return false;
	}
	
	if( dischargePort=="" )
	{
		alert("Please enter Port of Discharge.");
		form.dischargePort.focus();
		return false;
	}
	
	if( paymentTerms=="" )
	{
		alert("Please select a Payment Term.");
		form.paymentTerms.focus();
		return false;
	}
	
	if( fish=="" )
	{
		alert("Please select a Fish.");
		form.fish.focus();
		return false;
	}
	
	if( processCode=="" )
	{
		alert("Please select a Process Code.");
		form.processCode.focus();
		return false;
	}
	
	if( selGrade=="" )
	{
		alert("Please select a Grade.");
		form.selGrade.focus();
		return false;
	}
	
	if( freezingStage=="" )
	{
		alert("Please select a Freezing Stage.");
		form.freezingStage.focus();
		return false;
	}
	
	if( eUCode=="" )
	{
		alert("Please select a EU Code.");
		form.eUCode.focus();
		return false;
	}
	
	if( brand=="" )
	{
		alert("Please select a Brand.");
		form.brand.focus();
		return false;
	}
	
	if( frozenCode=="" )
	{
		alert("Please select a Frozen Code.");
		form.frozenCode.focus();
		return false;
	}
	
	if( mCPacking=="" )
	{
		alert("Please select MC Packing.");
		form.mCPacking.focus();
		return false;
	}
	
	
	if( numMC=="" )
	{
		alert("Please enter No. of MC.");
		form.numMC.focus();
		return false;
	}
	
	if( pricePerKg=="" )
	{
		alert("Please enter Price Per Kg in USD.");
		form.pricePerKg.focus();
		return false;
	}
	
	if( paymentTerms=="" )
	{
		alert("Please select a Payment Term.");
		form.paymentTerms.focus();
		return false;
	}
	
	if( lastDate=="" )
	{
		alert("Please select a Last Date for Shipment.");
		form.lastDate.focus();
		return false;
	}
	
	if(lastDateStatus!="" && editMode!=""){
		
		var dateExtended	=	form.dateExtended.checked;
		if((lastDateStatus!=lastDate) && dateExtended=="")
		{
			alert("Please select Extended option");
			form.dateExtended.focus();
			return false;			
		}
		
	}
	
	
	if(!extendedDateCheck(form)){
		
		return false;	
	}
	
	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}
/*
function calculateFilledWt(){
	
	var declWt			=	0;
	var glazePercent	=	0;
	var filledWt		=	0;
	
	var freezing 		=	document.getElementById("freezing").value;	
	var splitOperator	=	freezing.split("_");
	var operator		=	splitOperator[1];
	
	var glaze			=	document.getElementById("glaze").value;
	var splitGlaze 		= 	glaze.split("_");	
	var glaze			=	splitGlaze[1]; 
	
	glazePercent		=	glaze/100;
		
	declWt	=	document.getElementById("declWt").value;
	
	if(operator==1) {
		filledWt = declWt*(1+glazePercent);
	}
	if(operator==0) {
		filledWt = declWt*(1-glazePercent);
	}
	if(!isNaN(filledWt)){
		document.getElementById("filledWt").value = formatNumber(Math.abs(filledWt),2,'','.','','','','','');;
	}
} edited on 18-12-07
*/
function calculateTotalValue(){
	
	var totalValueUSD = 0;
	var oneUSDToINR		=	0;
	var totalValueINR	= 0;
	
	var frozenCode	=	document.getElementById("frozenCode").value;	
	var splitFilledWt	=	frozenCode.split("_");
	var filledWt		=	splitFilledWt[1];

	var mCPacking		=	document.getElementById("mCPacking").value;
	var splitNumPacks	=	mCPacking.split("_");
	var numPacks		=	splitNumPacks[1];
	
	var numMC		=	document.getElementById("numMC").value;
	var pricePerKg	=	document.getElementById("pricePerKg").value;
	
	oneUSDToINR 	=	document.getElementById("oneUSDToINR").value;
	
	totalValueUSD	=		filledWt * 	numPacks * numMC * pricePerKg;
	
	totalValueINR	=	totalValueUSD * oneUSDToINR;
	//alert(totalValueUSD);
	
	if(!isNaN(totalValueUSD)){
		document.getElementById("valueInUSD").value = totalValueUSD;
		document.getElementById("valueInINR").value	= formatNumber(Math.abs(totalValueINR),2,'','.','','','','','');
	}
}

function extendedDateCheck(form){
	
	var d = new Date();
	var t_date = d.getDate();      // Returns the day of the month
	if(t_date<10){
		t_date	=	"0"+t_date;
	}
	var t_mon = d.getMonth() + 1;      // Returns the month as a digit
	if(t_mon<10){
		t_mon	=	"0"+t_mon;
	}
	var t_year = d.getFullYear();  // Returns 4 digit year
	
	var curr_date	=	t_date + "/" + t_mon + "/" + t_year;
	
	
	CDT					=	curr_date.split("/");
	var CD_time		=	new Date(CDT[2], CDT[1], CDT[0]);
	
	var lastDate	=	document.getElementById("lastDate").value;	
	LDT				=	lastDate.split("/");
	var LD_time		=	new Date(LDT[2], LDT[1], LDT[0]);
	
	var one_day=1000*60*60*24

	//Calculate difference btw the two dates, and convert to days
	var extendedDays	=	Math.ceil((LD_time.getTime()-CD_time.getTime())/(one_day));
	
	//alert(extendedDays);
	
	if(extendedDays<0){
		
			alert("Last Date should be greater than or equal to current date");
			document.getElementById("lastDate").focus();
			return false;
	}
	return true;
	
}
function validateOrderProcessing(form)
{
	var isStockAvailable 	= false;
	var selPOId			=	form.selPOId.value;
	var labelling		=	form.labelling.value;
	var paymentStatus		=	form.paymentStatus.value;
	var invoiceNo			=	form.invoiceNo.value;
		
	var shipmentDate	=	form.shipmentDate.value;
	var selStatus		=	form.selStatus.value;
	//var noStock			=	form.noStock.value;
	var hidRowRMCount	=	form.hidRowRMCount.value;
	var stockAvailable  = "noStock_"; 
	var isComplete		=	form.isComplete.checked;
	
	if( selPOId=="" )
	{
		alert("Please select a PO ID.");
		form.selPOId.focus();
		return false;
	}
	
	if( labelling=="" )
	{
		alert("Please select Labelling.");
		form.labelling.focus();
		return false;
	}
	
	if( paymentStatus=="" )
	{
		alert("Please Enter Payment Status.");
		form.paymentStatus.focus();
		return false;
	}
	
	if( invoiceNo=="" )
	{
		alert("Please Enter an Export Invoice No.");
		form.invoiceNo.focus();
		return false;
	}
		
	
	if( shipmentDate=="" )
	{
		alert("Please select a Shipment Date.");
		form.shipmentDate.focus();
		return false;
	}
	
	
	if( selStatus=="" )
	{
		alert("Please select a status.");
		form.selStatus.focus();
		return false;
	}
	
	if( isComplete!="" )
	{
	
	for(var i=1; i<=hidRowRMCount; i++)
		{
			
			if(document.getElementById(stockAvailable+i).value!="") 
			{
				isStockAvailable = true;
			}				
		}
	
		if(isStockAvailable==true)
		{
			alert("Please check all RM stock available");
			return false;
		}
	}
		
/*
	if( isComplete=="" )
	{
		alert("Please select Confirm.");
		form.isComplete.focus();
		return false;
	}
	*/
	
	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}

function calculateOrder(){
	var totalValueUSD = 0;
	var oneUSDToINR		=	0;
	var totalValueINR	= 0;
	
	var filledWt		=	document.getElementById("filledWt").value;
	var numPacks		=	document.getElementById("numPacks").value;

	var numMC		=	document.getElementById("numMC").value;
	var pricePerKg	=	document.getElementById("pricePerKg").value;
	
	oneUSDToINR 	=	document.getElementById("oneUSDToINR").value;
	
	totalValueUSD	=		filledWt * 	numPacks * numMC * pricePerKg;
	
	totalValueINR	=	totalValueUSD * oneUSDToINR;
	//alert(totalValueUSD);
	
	if(!isNaN(totalValueUSD)){
		document.getElementById("valueInUSD").value = totalValueUSD;
		document.getElementById("valueInINR").value	= formatNumber(Math.abs(totalValueINR),2,'','.','','','','','');
	}
	
}function validateAddLabellingStage(form)
{
	var label	=	form.label.value;
	
	
	if( label=="" )
	{
		alert("Please enter a Label Stage.");
		form.label.focus();
		return false;
	}
	
		
	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}

function validateUSDValue(form){
	
	var dollarValue	=	form.dollarValue.value;
	
	
	if( dollarValue=="" )
	{
		alert("Please enter USD Value.");
		form.dollarValue.focus();
		return false;
	}
	
	if(!isDigit(dollarValue)){
		alert("Please enter a number.");
		form.dollarValue.focus();
		return false;
	}
		
	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}

function validateAddIPAddress(form)
{
	
	var selFixedIP		=	form.selIP[0].checked;
	var selRangeIP		=	form.selIP[1].checked;
	var ipAddress		=	form.ipAddress.value;
	var ipAddressFrom	=	form.ipAddressFrom.value;
	var ipAddressTo		=	form.ipAddressTo.value;
	
	if(selFixedIP == "" && selRangeIP==""){
		alert("Please select any one IP Address type.");
		return false;
	}
	
	if(selFixedIP!=""){
		if(ipAddress=="" )
			{
				alert("Please enter an IP Address.");
				form.ipAddress.focus();
				return false;
			}
			if (!validateIPAddress(ipAddress)){
   				alert("Please enter Valid IP Address.");
				form.ipAddress.focus();
				return false;
 			}
			
	}
	
	if(selRangeIP!=""){
		if(ipAddressFrom=="" )
			{
				alert("Please enter IP Address From.");
				form.ipAddressFrom.focus();
				return false;
			}
			
			if (!validateIPAddress(ipAddressFrom)){
   				alert("Please enter Valid IP Address.");
				form.ipAddressFrom.focus();
				return false;
 			}
			
			if(ipAddressTo=="" )
			{
				alert("Please enter IP Address To.");
				form.ipAddressTo.focus();
				return false;
			}
			if (!validateIPAddress(ipAddressTo)){
   				alert("Please enter Valid IP Address.");
				form.ipAddressTo.focus();
				return false;
 			}
			if(!checkIPRange(ipAddressFrom,ipAddressTo)){
				alert("Please enter Valid IP Address Range. First three bytes should be equal and the Last byte of To IP Address should be greater than From IP Address");
				return false;				
			}
	}
		
		
	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}

function ShowFixedIP(){
	document.getElementById( "fixedIP" ).style.display = "block";
	document.getElementById( "rangeIP" ).style.display = "none";
}

function ShowRangeIP(){
	document.getElementById( "fixedIP" ).style.display = "none";
	document.getElementById( "rangeIP" ).style.display = "block";
}

function IPAddressSelHide()
{
	document.getElementById( "fixedIP" ).style.display = "none";
	document.getElementById( "rangeIP" ).style.display = "none";
}

function HideRangeIP(){
	document.getElementById( "rangeIP" ).style.display = "none";	
}

function HideFixedIP(){
	document.getElementById( "fixedIP" ).style.display = "none";
}


function validateIPAddress(inputString) {

 //create reqular expression to validate that the
 //format of the string is at least correct
 var re = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/;

 //test the input string against the regular expression
 if (re.test(inputString)) {

   //now, validate the separate parts
   var parts = inputString.split(".");
   if (parseInt(parseFloat(parts[0])) == 0) {
     return false;
   }
   for (var i=0; i<parts.length; i++) {
     if (parseInt(parseFloat(parts[i])) > 255) {
       return false;
     }
   }
   return true;
 }
 else {
   return false;
 }
}

function checkIPRange(ipAddressFrom,ipAddressTo){
	var IPFrom	=	ipAddressFrom.split(".");
	var IPTo	=	ipAddressTo.split(".");
	//alert(IPFrom[3]);
	if(IPFrom[0]==IPTo[0] && IPFrom[1]==IPTo[1] && IPFrom[2]==IPTo[2] && IPFrom[3]<=IPTo[3]){
		return true;
	}
	else {
		return false;
	}	
	
}function validateAddPackagingStructure(form)
{
	var structureName	=	form.structureName.value;
	
	if (structureName=="") {
		alert("Please enter a Packaging Structure Name.");
		form.structureName.focus();
		return false;
	}
			
	if (!confirmSave()) return false;
	else return true;	
}

function validateSettlementSummary(form)
{
	
	var supplyFrom	=	form.supplyFrom.value;
	var supplyTill	=	form.supplyTill.value;
	var supplier	=	form.supplier.value;

	if( supplyFrom=="")
		{
			alert("Please select From Date");
			form.supplyFrom.focus();
			return false;
		}
		
	if(supplyTill=="")
		{
			alert("Please select To Date");
			form.supplyTill.focus();
			return false;
		}
	if(findDaysDiff(supplyFrom)>0 || findDaysDiff(supplyTill)>0){
			alert("Selected date should be less than or equal to current date");
			return false;	
	}
	if(checkDateSelected(supplyFrom,supplyTill)>0){
		alert("Please check selected From and To date");
		return false;
	}
	if(supplier=="")
		{
			alert("Please select a Supplier");
			form.supplier.focus();
			return false;
		}
		
	if( confirmSave()){
  		return true;
	} else {
		return false;
	}
}

function paidAmount(){

	var rowCount	=	document.getElementById("hidRowCount").value;
	var totalAmount = 0;
	for (i=1; i<=rowCount; i++)
	  {
		var settledAmount = "payingAmount_";
		var checkPaid 	  = "paid_";
		var alreadypaid	  = "alreadyPaid_";
		if(document.getElementById(settledAmount+i)!=undefined && document.getElementById(checkPaid+i)!=undefined && document.getElementById(alreadypaid+i)!=undefined)
		{

		var paidAmount	= parseFloat(document.getElementById(settledAmount+i).value);
		var paid 		= document.getElementById(checkPaid+i).checked;
		var isPaid		=	document.getElementById(alreadypaid+i).value;
		if(paid && isPaid=="")
			{
			totalAmount = totalAmount + paidAmount;	
			}
		}
	}
	document.getElementById("totalpaidAmount").value = totalAmount;
}function validateAddProcessRateList(form)
{
	
	var rateListName	=	form.rateListName.value;	
	var startDate		=	form.startDate.value;
	var hidStartDate	= 	form.hidStartDate.value;

	if (rateListName=="" ) {
		alert("Please enter a Rate list Name.");
		form.rateListName.focus();
		return false;
	}
	if (startDate=="") {
		alert("Please select a date.");
		form.startDate.focus();
		return false;
	}

	if (startDate!=hidStartDate) {
		var cMsg = "The start date you have selected is "+startDate+". Do you wish to continue?";
		if (!confirm(cMsg)) return false;
	}	

	if (!confirmSave()) {
		return false;
	} else {
		return true;
	}
}

function validateProcessorSettlementSummary(form)
{
	
	var supplyFrom		=	form.supplyFrom.value;
	var supplyTill		=	form.supplyTill.value;
	var selProcessor	=	form.selProcessor.value;

	if( supplyFrom=="")
		{
			alert("Please select From Date");
			form.supplyFrom.focus();
			return false;
		}
		
	if(supplyTill=="")
		{
			alert("Please select To Date");
			form.supplyTill.focus();
			return false;
		}
		//alert(findDaysDiff(supplyFrom));
	if(findDaysDiff(supplyFrom)>0 || findDaysDiff(supplyTill)>0){
			alert("Selected date should be less than or equal to current date");
			return false;	
	}
	if(checkDateSelected(supplyFrom,supplyTill)>0){
		alert("Please check selected From and To date");
		return false;
	}
	if(selProcessor=="")
		{
			alert("Please select a Pre-Processor");
			form.selProcessor.focus();
			return false;
		}
		
	if( confirmSave()){
  		return true;
	} else {
		return false;
	}
}

function paidProcessorAmount(){

	var rowCount	=	document.getElementById("hidRowCount").value;
	var totalAmount = 0;
	for (i=1; i<=rowCount; i++)
	  {
		var settledAmount = "payingAmount_";
		var checkPaid 	  = "paid_";
		var alreadypaid	  = "alreadyPaid_";
		if(document.getElementById(settledAmount+i)!=undefined && document.getElementById(checkPaid+i)!=undefined && document.getElementById(alreadypaid+i)!=undefined)
		{

		var paidAmount	= 	parseFloat(document.getElementById(settledAmount+i).value);
		var paid 		= 	document.getElementById(checkPaid+i).checked;
		var isPaid		=	document.getElementById(alreadypaid+i).value;
		
		if(paid && isPaid=="")
			{
				totalAmount = totalAmount + paidAmount;	
			}
		}
	}
	document.getElementById("totalpaidAmount").value = totalAmount;
}function validateAddContainer(form)
{
	
	var selectDate		=	form.selectDate.value;
	var shippingLine			=	form.shippingLine.value;
	var containerNo			=	form.containerNo.value;
	var sealNo			=	form.sealNo.value;
	var sailingDate		=	form.sailingDate.value;
		
	var expectedDate	=	form.expectedDate.value;
	
	var selPOId			=	form.selPOId.value;
	
	var checkSelect		=	false;
	
	var selGrade		=	"gradeEntryId_";
	
	if( selectDate=="" )
	{
		alert("Please Select a Date.");
		form.selectDate.focus();
		return false;
	}
	
	if( shippingLine=="" )
	{
		alert("Please enter Shipping Line.");
		form.shippingLine.focus();
		return false;
	}
	
	if( containerNo=="" )
	{
		alert("Please enter Container Number.");
		form.containerNo.focus();
		return false;
	}
	
	
	if( sealNo=="" )
	{
		alert("Please enter Seal no.");
		form.sealNo.focus();
		return false;
	}
	
	if( sailingDate=="" )
	{
		alert("Please select a sailing date.");
		form.sailingDate.focus();
		return false;
	}
	
	if( expectedDate=="" )
	{
		alert("Please select a Expected date.");
		form.expectedDate.focus();
		return false;
	}
	
	if( selPOId=="" )
	{
		alert("Please select a Purchase Order.");
		form.selPOId.focus();
		return false;
	}
	
	if( selPOId!="")
	{
		var hidRowRMCount 	=	form.hidRowRMCount.value;
		
		for(var i=1; i<=hidRowRMCount; i++)
		{
			if(document.getElementById(selGrade+i).checked) 
			{
				checkSelect	= true;
			}				
		}
	
		if(checkSelect==false)
		{
			alert("Please select atleast one Raw Material");
			return false;
		}
	}
	
	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}

function validateContainerSearch(form){
	var selectFrom	=	form.selectFrom.value;
	var selectTill	=	form.selectTill.value;
	
	if( selectFrom=="" )
	{
		alert("Please select From Date.");
		form.selectFrom.focus();
		return false;
	}
	
	if( selectTill=="" )
	{
		alert("Please select Till Date.");
		form.selectTill.focus();
		return false;
	}

return true;
}


function validateAddInvoice(form)
{
	//var selectDate		=	form.selectDate.value;
	
	var invoiceNo		=	form.invoiceNo.value;
	var selContainer	=	form.selContainer.value;
	var selPOId			=	form.selPOId.value;
	
	
	var selGrade		=	"gradeEntryId_";
	
	var checkSelect			=	false;
	
	/*if( selectDate=="" )
	{
		alert("Please Select a Date.");
		form.selectDate.focus();
		return false;
	}*/
	
	if( invoiceNo=="" )
	{
		alert("Please enter an Invoice No.");
		form.invoiceNo.focus();
		return false;
	}
	
	if( selContainer=="" )
	{
		alert("Please select a Container.");
		form.selContainer.focus();
		return false;
	}
	
	
	if( selPOId=="" )
	{
		alert("Please select a Purchase Order .");
		form.selPOId.focus();
		return false;
	}
	
	if(selContainer!="" && selPOId!="")
	{
		var hidRowRMCount 	=	form.hidRowRMCount.value;
		
		for(var i=1; i<=hidRowRMCount; i++)
		{
			//var selRM	=	selGrade+i;
			if(document.getElementById(selGrade+i).checked) 
			{
				checkSelect	= true;
			}				
		}
	
		if(checkSelect==false)
		{
			alert("Please select atleast one Raw Material");
			return false;
		}
	}
	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}

function validateInvoiceSearch(form){
	var selectFrom	=	form.selectFrom.value;
	var selectTill	=	form.selectTill.value;
	
	if( selectFrom=="" )
	{
		alert("Please select From Date.");
		form.selectFrom.focus();
		return false;
	}
	
	if( selectTill=="" )
	{
		alert("Please select Till Date.");
		form.selectTill.focus();
		return false;
	}

return true;
}


function validateDisplayRecord(form){
	
	var noRec	=	form.noRec.value;
	
	
	if( noRec=="" )
	{
		alert("Please enter no. of Record to be displayed.");
		form.noRec.focus();
		return false;
	}
	
	if(!isDigit(noRec)){
		alert("Please enter a number.");
		form.noRec.focus();
		return false;
	}
		
	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}

function validateAddRePacking(form)
{
	isRePackTypeSelected = false;
	var rePackingCode	=	form.rePackingCode.value;
	
	var rePackingReason	=	form.rePackingReason.value;
	
	var hidColumnCount	=	form.hidColumnCount.value;
	//var selRePackType	= "";
	
	if( rePackingCode=="" )
	{
		alert("Please enter a Re-Packing Code.");
		form.rePackingCode.focus();
		return false;
	}
	
	if( rePackingReason=="" )
	{
		alert("Please enter a Re-Packing Reason.");
		form.rePackingReason.focus();
		return false;
	}
	
	for (i=1; i<=hidColumnCount; i++)
	  {
		  //var selRePackType	= document.getElementById("selRepackType_"+i).value;
		  if(document.getElementById("selRepackType_"+i).value!="")
		  {
			  isRePackTypeSelected = true;
		  }
	  }
	
	if(isRePackTypeSelected==false){
		  alert("Please select atleast one Re-Packing type");
		  return false;
	  }
	  
	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}

function validateAddDailyFrozenRePacking(form)
{
	
	var selectDate		=	form.selectDate.value;
	var fish		=	form.fish.value;
	var processCode		=	form.processCode.value;
	var freezingStage	=	form.freezingStage.value;
	var eUCode		=	form.eUCode.value;
	var brand		=	form.brand.value;
	var frozenCode		=	form.frozenCode.value;
	var mCPacking		=	form.mCPacking.value;

	var reasonRePack	=	form.reasonRePack.value;

	var numNewInnerPack	=	form.numNewInnerPack.value;
	var numLabelCard	= 	form.numLabelCard.value;
	var numNewMC		=	form.numNewMC.value;

	var rePackEUCode	= 	form.rePackEUCode.value;
	var rePackBrand		=	form.rePackBrand.value;
	var rePackFrozenCode	=	form.rePackFrozenCode.value;
	var rePackMCPacking	=	form.rePackMCPacking.value;

	
	if (selectDate=="") {
		alert("Please Select a Date.");
		form.selectDate.focus();
		return false;
	}

	if (fish=="") {
		alert("Please select a fish.");
		form.fish.focus();
		return false;
	}
	
	if (processCode=="") {
		alert("Please select a Process Code.");
		form.processCode.focus();
		return false;
	}

	if (freezingStage=="") {
		alert("Please select a Freezing Stage.");
		form.freezingStage.focus();
		return false;
	}
	
	if (eUCode=="") {
		alert("Please select a EU Code.");
		form.eUCode.focus();
		return false;
	}
	
	if (brand=="") {
		alert("Please select a Brand.");
		form.brand.focus();
		return false;
	}
	
	if (frozenCode=="") {
		alert("Please select a Frozen Code.");
		form.frozenCode.focus();
		return false;
	}
	
	if (mCPacking=="") {
		alert("Please select a MC Packing.");
		form.mCPacking.focus();
		return false;
	}

	//Checking Number of Packing details entered
	if (fish!="" && processCode!="") {
		isPackEntered 		=	false;

		var rowCount		=	parent.iFrame1.document.frmDailyFrozenRePackingGrade.hidRowCount.value;
	
		for(i=1;i<=rowCount;i++)
		{
			var numMC		=	parent.iFrame1.document.getElementById("numMCRePack_"+i).value;
			var numLooseSlab	=	parent.iFrame1.document.getElementById("numLooseSlabRePack_"+i).value;
			if (numMC!="" && numLooseSlab!="") {
				isPackEntered = true;
			}
		}
		if (isPackEntered==false) {
			alert("Please enter Number of Packing Details.");
			return false;
		}	
	}	

	if (reasonRePack=="") {
		alert("Please select Reason for Re-Packing.");
		form.reasonRePack.focus();
		return false;
	}

	if (numNewInnerPack=="") {
		alert("Please enter No of New Inner Packs used.");
		form.numNewInnerPack.focus();
		return false;
	}

	if (numLabelCard=="") {
		alert("Please enter No of Labels / Header Cards Used.");
		form.numLabelCard.focus();
		return false;
	}

	if (numNewMC=="") {
		alert("Please enter No of New MC Used.");
		form.numNewMC.focus();
		return false;
	}

	if (rePackEUCode=="") {
		alert("Please select Repacked EU Code.");
		form.rePackEUCode.focus();
		return false;
	}

	if (rePackBrand=="") {
		alert("Please select Repacked Brand.");
		form.rePackBrand.focus();
		return false;
	}

	if (rePackFrozenCode=="") {
		alert("Please select Repacked Frozen Code.");
		form.rePackFrozenCode.focus();
		return false;
	}

	if (rePackMCPacking=="") {
		alert("Please select Repacked MC Pkg.");
		form.rePackMCPacking.focus();
		return false;
	}


		
	if (!confirmSave()) {
		return false;
	} else {
		return true;
	}
}

function validateDailyFrozenPackingSearch(form) {
	var frozenPackingFrom	=	form.frozenPackingFrom.value;
	var frozenPackingTill	=	form.frozenPackingTill.value;
	
	if( frozenPackingFrom=="" )
	{
		alert("Please select From Date.");
		form.frozenPackingFrom.focus();
		return false;
	}
	
	if( frozenPackingTill=="" )
	{
		alert("Please select Till Date.");
		form.frozenPackingTill.focus();
		return false;
	}
return true;
}

function validateFrozenRepackingGrade(form)
{
	isPackEntered 		=	false;

	var rowCount		=	document.getElementById("hidRowCount").value;
	
	for(i=1;i<=rowCount;i++)
	{
		var numMC		=	document.getElementById("numMCRePack_"+i).value;
		var numLooseSlab	=	document.getElementById("numLooseSlabRePack_"+i).value;
		if (numMC!="" && numLooseSlab!="") {
			isPackEntered = true;
		}
	}
	if (isPackEntered==false) {
		alert("Please enter Number of Packing Details.");
		return false;
	}	
}

/*##########################################*/
function passEuCodeValue()
{
	document.getElementById("rePackEUCode").value = document.getElementById("eUCode").value;  
}

function passBrandValue()
{
	document.getElementById("rePackBrand").value = document.getElementById("brand").value;  	
}

function passFrozenValue()
{
	document.getElementById("rePackFrozenCode").value = document.getElementById("frozenCode").value;  	
}

function passMCPackingValue()
{
	document.getElementById("rePackMCPacking").value = document.getElementById("mCPacking").value;  	
}
/*##########################################*/function validateProcessingActivity(form)
{
	
	var name		=	form.name.value;
	var selSubModule		=	document.getElementById("selSubModule").value;
	
	if (name=="") {
		alert("Please enter a Processing Activity Name.");
		form.name.focus();
		return false;
	}

	if (selSubModule=="") {
		alert("Please select atleast one Sub-Module.");
		form.selSubModule.focus();
		return false;
	}
	
	if(!confirmSave())
	{
		return false;
	}
	return true;

}





function validateProcessingRestriction(form)
{
	
	var selpage		=	form.selpage.value;
	var selActivity		=	form.selActivity.value;
	
	if( selpage=="" )
	{
		alert("Please select an application Screen name.");
		form.selpage.focus();
		return false;
	}
	if( selActivity=="" )
	{
		alert("Please select an activity.");
		form.selActivity.focus();
		return false;
	}
	
	if(!confirmSave())
	{
		return false;
	}
	return true;

}





function validateUpdateFrozenPackingReport(form)
{
	
	var selDate		=	form.selDate.value;
	
		
	if( selDate=="" )
	{
		alert("Please Select a Date.");
		form.selDate.focus();
		return false;
	}	
	
	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}function validateConfirmation(form){	
		
	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}

function continueMsg()
{
	var saveMsg = "Do you wish to Continue?";
	if (confirm(saveMsg)) {
		return true;
	}
	return false;
} 

// Validate RM Supply Cost
function validateAddSupplyCost(form)
{
	var individual		= form.selOption[0].checked;
	var group		= form.selOption[1].checked;
	//alert(individual);	
	if (individual=="" && group=="") {
		alert("Please select one display type option.");
		return false;
	}

	if (individual) {
		var selDate		=	form.selDate.value;
		var selWtChallan	=	form.selWtChallan.value;

		// Ice	
		var numIceBlocks	= form.numIceBlocks.value;
		var costPerBlock	= form.costPerBlockvalue;
		var chkFixedIceBlock	= form.chkIceBlock.checked;
		var fixedIceCost	= form.fixedIceCost.value;

		// Transportation
		var km			= form.km.value;
		var costPerKm		= form.costPerKm.value;
		var chkFixedTransportation = form.chkTransportation.checked;
		var fixedTransCost	= form.fixedTransCost.value;
		var hasCommi		= form.hasCommi.checked;
		var hasHandling		= form.hasHandling.checked;
// 		// Commission selection
// 		var commiDetailed	= form.selCommission[0].checked;
// 		var commiSummary 	= form.selCommission[1].checked;
// 		//Handling selection
// 		var handlingDetailed	= form.selHandling[0].checked;
// 		var handlingSummary	= form.selHandling[1].checked;
		
		// Commission
		/*if (commiSummary) {
			var commissionPerKg	= form.commissionPerKg.value;
			var chkFixedCommission	= form.chkCommission.checked;
			var fixedCommiRate	= form.fixedCommiRate.value;	
		}*/

		// Handling Cost
		/*if (handlingSummary) {
			var handlingRatePerKg	= form.handlingRatePerKg.value;
			var chkFixedHandling	= form.chkHandling.checked;
			var fixedHandlingAmt	= form.fixedHandlingAmt.value;	
		}*/


	if (checkNull(selDate)) {
		alert("Please select a date.");
		form.selDate.focus();
		return false;
	}

	if (checkNull(selWtChallan)) {
		alert("Please select a Wt Challan.");
		form.selWtChallan.focus();
		return false;
	}
	// Ice
	if (chkFixedIceBlock) {
		if (checkNull(fixedIceCost)) {
			alert("Please enter fixed cost of Ice block.");
			form.fixedIceCost.focus();
			return false;
		}
	}	
	
	// Transportation
	if (chkFixedTransportation) {
		if (checkNull(fixedTransCost)) {
			alert("Please enter fixed cost of Transportation.");
			form.fixedTransCost.focus();
			return false;
		}
	}	

	if (hasCommi!="") {

	// Commission selection
		var commiDetailed	= form.selCommission[0].checked;
		var commiSummary 	= form.selCommission[1].checked;

	if (commiDetailed=="" && commiSummary=="") {
		alert("Please select Commission Detailed/Summary option.");
		return false;
	}
	
	// Commission
	if (commiSummary) {
		var commissionPerKg	= form.commissionPerKg.value;
		var chkFixedCommission	= form.chkCommission.checked;
		var fixedCommiRate	= form.fixedCommiRate.value;	
		if (chkFixedCommission) {
			if (checkNull(fixedCommiRate)) {
				alert("Please enter fixed cost of Commission.");
				form.fixedCommiRate.focus();
				return false;
			}
		}
	}

	}

	if (hasHandling!="") {
		//Handling selection
		var handlingDetailed	= form.selHandling[0].checked;
		var handlingSummary	= form.selHandling[1].checked;
	if (handlingDetailed=="" && handlingSummary=="") {
		alert("Please select Handling Detailed/Summary option.");
		return false;
	}

	// handling
	if (handlingSummary) {
		var handlingRatePerKg	= form.handlingRatePerKg.value;
		var chkFixedHandling	= form.chkHandling.checked;
		var fixedHandlingAmt	= form.fixedHandlingAmt.value;	

		if (chkFixedHandling) {
			if (checkNull(fixedHandlingAmt)) {
				alert("Please enter fixed Amt of Handling Charges.");
				form.fixedHandlingAmt.focus();
				return false;
			}
		}
	}

	}
			
	}	

	//Group
	if (group) {
		var dateFrom = form.dateFrom.value;
		var dateTill = form.dateTill.value;
		var supplier = form.supplier.value;
		if (checkNull(dateFrom)) {
			alert("Please select a From date.");
			form.dateFrom.focus();
			return false;
		}
		if (checkNull(dateTill)) {
			alert("Please select a Till date.");
			form.dateTill.focus();
			return false;
		}
		if (checkNull(supplier)) {
			alert("Please select a supplier.");
			form.supplier.focus();
			return false;
		}
	}

	if (!confirmSave()) {
		return false;
	} else {
		return true;
	}
}

// Hide Or UnHide Section ------------------------------------
function supplyCostHide()
{
	if (document.getElementById("selOption0").checked)  {

		document.getElementById( "fixedIceBlock" ).style.display = "none";
		document.getElementById( "fixedTransBlock" ).style.display = "none";
		if (document.getElementById("selCommission1").checked) {
			document.getElementById( "fixedCommiBlock" ).style.display = "none";
		}

		if (document.getElementById("selHandling1").checked) {
			document.getElementById( "fixedHandlingBlock" ).style.display = "none";
		}

	if (document.getElementById("chkIceBlock").checked) {
		showFixedIceCost();
	}
	if (document.getElementById("chkTransportation").checked) {
		showFixedTransCost();	
	}
	if (document.getElementById("selCommission1").checked) {
		if (document.getElementById("chkCommission").checked) {
			showFixedCommissionCost();
		}
	}
	if (document.getElementById("selHandling1").checked) {
		if (document.getElementById("chkHandling").checked) {
			showFixedHandlingCost();
		}
	}

	// Show Commi
	showHasCommi();
	
	// Show Handling Block
	showHasHandling();
	}
}
// Ice Block
function showFixedIceCost() 
{
	if (document.getElementById("chkIceBlock").checked) {
		document.getElementById( "iceBlock" ).style.display 	= "none";
		document.getElementById( "fixedIceBlock" ).style.display = "block";
	} else {
		document.getElementById( "iceBlock" ).style.display 	= "block";
		document.getElementById( "fixedIceBlock" ).style.display = "none";
	}
}
// Transportation
function showFixedTransCost() 
{
	if (document.getElementById("chkTransportation").checked) {
		document.getElementById( "transportationBlock" ).style.display = "none";
		document.getElementById( "fixedTransBlock" ).style.display = "block";
	} else {
		document.getElementById( "transportationBlock" ).style.display 	= "block";
		document.getElementById( "fixedTransBlock" ).style.display = "none";
	}
}

// Fixed Commission
function showFixedCommissionCost() 
{
	if (document.getElementById("chkCommission").checked) {
		document.getElementById( "commissionBlock" ).style.display = "none";
		document.getElementById( "fixedCommiBlock" ).style.display = "block";
	} else {
		document.getElementById( "commissionBlock" ).style.display 	= "block";
		document.getElementById( "fixedCommiBlock" ).style.display = "none";
	}
}

// Fixed Handling Cost
function showFixedHandlingCost() 
{
	if (document.getElementById("chkHandling").checked) {
		document.getElementById( "handlingBlock" ).style.display = "none";
		document.getElementById( "fixedHandlingBlock" ).style.display = "block";
	} else {
		document.getElementById( "handlingBlock" ).style.display 	= "block";
		document.getElementById( "fixedHandlingBlock" ).style.display = "none";
	}
}

// Show commission Block
function showHasCommi()
{
	if (document.getElementById("hasCommi").checked) {
		document.getElementById( "divHasCommi" ).style.display = "block";	
		
	} else {
		document.getElementById( "divHasCommi" ).style.display = "none";
	}
}

// Show Handling Block
function showHasHandling()
{
	if (document.getElementById("hasHandling").checked) {
		document.getElementById( "divHasHandling" ).style.display = "block";	
		
	} else {
		document.getElementById( "divHasHandling" ).style.display = "none";
	}
}
// ----------------------------------------
// Calculate the Total Ice Block rate
function calcIceBlockTotalRate() 
{
	var numIceBlocks 	= 	document.getElementById("numIceBlocks").value;
	var costPerBlock	=	document.getElementById("costPerBlock").value;		
	document.getElementById("totalIceCost").value = formatNumber(Math.abs(numIceBlocks * costPerBlock ),2,'','.','','','','','');
}
// Calculate Transportation Cost
function calcTransportationTotalAmt() 
{
	var km 		= 	document.getElementById("km").value;
	var costPerKm	=	document.getElementById("costPerKm").value;		
	document.getElementById("totalTransAmt").value = formatNumber(Math.abs(km * costPerKm ),2,'','.','','','','','');
}

function calcCommissionTotalRate() 
{
	var totalQuanty		= 	document.getElementById("totalQuanty").value;
	var commissionPerKg	=	document.getElementById("commissionPerKg").value;		
	document.getElementById("totalCommiRate").value = formatNumber(Math.abs(totalQuanty * commissionPerKg ),2,'','.','','','','','');
}
// Calc handling Cost
function calcHandlingTotalAmt()
{
	var totalRMQuanty	= 	document.getElementById("totalRMQuanty").value;
	var handlingRatePerKg	=	document.getElementById("handlingRatePerKg").value;		
	document.getElementById("totalHandlingAmt").value = formatNumber(Math.abs(totalRMQuanty * handlingRatePerKg ),2,'','.','','','','','');
}

// Check empty
function checkNull(field) 
{
	if (field=="" || field==0) return true;
}

//Calc Commission Detailed
function calcComisionIdividalRate()
{
	var hidIvidualCommiRowCount = document.getElementById("hidIvidualCommiRowCount").value;
	
	var calcAmt = 0;
	var grandTotalAmt = 0;
	for (i=1;i<=hidIvidualCommiRowCount;i++) {

		if (document.getElementById("rate_"+i).value=="") {
			document.getElementById("rate_"+i).value = 0;
		}
		var totalQty =  parseFloat(document.getElementById("totalQty_"+i).value);
		var rate = parseFloat(document.getElementById("rate_"+i).value);
		
		calcAmt =  totalQty * rate;

		grandTotalAmt += calcAmt;

		if (!isNaN(calcAmt)) {
			document.getElementById("totalAmt_"+i).value = number_format(calcAmt,2,'.','');
		}				
	}
	if (!isNaN(grandTotalAmt)) {
		document.getElementById("grandTotalCommiAmt").value = number_format(grandTotalAmt,2,'.','');
	}		
}

//Calc handling Detailed Rate
function calcHadlngDetailedRate()
{
	var hidDetailedHadlgRowCount = document.getElementById("hidDetailedHadlgRowCount").value;
	
	var calcAmt = 0;
	var grandTotalAmt = 0;
	for (i=1;i<=hidDetailedHadlgRowCount;i++) {

		if (document.getElementById("hRate_"+i).value=="") {
			document.getElementById("hRate_"+i).value = 0;
		}
		var totalQty =  parseFloat(document.getElementById("hTotalQty_"+i).value);
		var rate = parseFloat(document.getElementById("hRate_"+i).value);
		
		calcAmt =  totalQty * rate;

		grandTotalAmt += calcAmt;

		if (!isNaN(calcAmt)) {
			document.getElementById("hTotalAmt_"+i).value = number_format(calcAmt,2,'.','');
		}				
	}
	if (!isNaN(grandTotalAmt)) {
		document.getElementById("grandTotalHadlngAmt").value = number_format(grandTotalAmt,2,'.','');
	}		
}function validateAddDailyThawing(form)
{
	var selectDate		=	form.selectDate.value;
	var fish		=	form.fish.value;
	var processCode		=	form.processCode.value;
	var freezingStage	=	form.freezingStage.value;
	var eUCode		=	form.eUCode.value;
	var brand		=	form.brand.value;
	var frozenCode		=	form.frozenCode.value;
	var mCPacking		=	form.mCPacking.value;


	if (selectDate=="") {
		alert("Please Select a Date.");
		form.selectDate.focus();
		return false;
	}

	if (fish=="") {
		alert("Please select a fish.");
		form.fish.focus();
		return false;
	}
	
	if (processCode=="") {
		alert("Please select a Process Code.");
		form.processCode.focus();
		return false;
	}

	if (freezingStage=="") {
		alert("Please select a Freezing Stage.");
		form.freezingStage.focus();
		return false;
	}
	
	if (eUCode=="") {
		alert("Please select a EU Code.");
		form.eUCode.focus();
		return false;
	}
	
	if (brand=="") {
		alert("Please select a Brand.");
		form.brand.focus();
		return false;
	}
	
	if (frozenCode=="") {
		alert("Please select a Frozen Code.");
		form.frozenCode.focus();
		return false;
	}
	
	if (mCPacking=="") {
		alert("Please select a MC Packing.");
		form.mCPacking.focus();
		return false;
	}

	/*Checking Number of Packing details entered*/
	if (fish!="" && processCode!="") {
		isPackEntered 		=	false;

		var rowCount		=	parent.iFrame1.document.frmDailyThawingGrade.hidRowCount.value;
	
		for(i=1;i<=rowCount;i++)
		{
			var numMC		=	parent.iFrame1.document.getElementById("numMCThawing_"+i).value;
			var numLooseSlab	=	parent.iFrame1.document.getElementById("numLooseSlabThawing_"+i).value;
			if (numMC!="" && numLooseSlab!="") {
				isPackEntered = true;
			}
		}
		if (isPackEntered==false) {
			alert("Please enter Number of Packing used for Thawing.");
			return false;
		}	
	}	


	if (!confirmSave()) {
		return false;
	} else {
		return true;
	}
}
/* Validating IFrame values*/
function validateFrozenPackingThawingGrade(form)
{
	isPackEntered 		=	false;

	var rowCount		=	document.getElementById("hidRowCount").value;
	
	for(i=1;i<=rowCount;i++)
	{
		var numMC		=	document.getElementById("numMCThawing_"+i).value;
		var numLooseSlab	=	document.getElementById("numLooseSlabThawing_"+i).value;
		if (numMC!="" && numLooseSlab!="") {
			isPackEntered = true;
		}
	}
	if (isPackEntered==false) {
		alert("Please enter Number of Packing used for Thawing.");
		return false;
	}	
}

/*function validateDailyFrozenPackingSearch(form) {
	var frozenPackingFrom	=	form.frozenPackingFrom.value;
	var frozenPackingTill	=	form.frozenPackingTill.value;
	
	if( frozenPackingFrom=="" )
	{
		alert("Please select From Date.");
		form.frozenPackingFrom.focus();
		return false;
	}
	
	if( frozenPackingTill=="" )
	{
		alert("Please select Till Date.");
		form.frozenPackingTill.focus();
		return false;
	}
return true;
}*/

/*##########################################*/
/*function passEuCodeValue()
{
	document.getElementById("rePackEUCode").value = document.getElementById("eUCode").value;  
}

function passBrandValue()
{
	document.getElementById("rePackBrand").value = document.getElementById("brand").value;  	
}

function passFrozenValue()
{
	document.getElementById("rePackFrozenCode").value = document.getElementById("frozenCode").value;  	
}

function passMCPackingValue()
{
	document.getElementById("rePackMCPacking").value = document.getElementById("mCPacking").value;  	
}*/
/*##########################################*/function validateAddFreezerCapacity(form)
{
	
	var freezerName		=	form.freezerName.value;
	var capacity		=	form.capacity.value;
	var freezingTime	=	form.freezingTime.value;
	
	if (freezerName=="") {
		alert("Please enter a Freezer name.");
		form.freezerName.focus();
		return false;
	}
	
	if (capacity=="") {
		alert("Please enter a Freezer Capacity.");
		form.capacity.focus();
		return false;
	}

	if (!isADigit(capacity)) {
		alert("Please enter a number.");
		form.capacity.focus();
		return false;
	}

	if (freezingTime=="") {
		alert("Please enter a Freezing Time.");
		form.freezingTime.focus();
		return false;
	}

	if (!isADigit(freezingTime)) {
		alert("Please enter a number.");
		form.freezingTime.focus();
		return false;
	}

	if (!confirmSave()) {
		return false;
	} else {
		return true;
	}
}



//Checking Digit From 0- 
function isADigit (str) 
{
    if (str == null) 
	{
        return (false);
    }
    if (isNaN(str))
    {
	return (false);
    }
	else if(str<0)
	{
		return (false);
	}
    return (true);
}
function validateAddDailyActivityChart(form)
{
	//var entryRecSize	=	parent.iFrame1.document.frmDailyActivityChartDetails.entryRecSize.value;

	
	/*if (entryRecSize==0) {
		alert("Please enter PF/BF details.");
		return false;
	}*/

	if (!confirmSave()) return false;
	else return true;	
}

//Validate Ice Brine Entries
function validateDailyActivityChartIceBrine(form)
{
	
	var iceBrine	= form.iceBrine.value;
	var volt	= form.volt.value;
	var ampere	= form.ampere.value;

	if (iceBrine=="") {
		alert("Please enter ice brine Temp.");
		form.iceBrine.focus();
		return false;
	}

	if (volt=="") {
		alert("Please enter Volt.");
		form.volt.focus();
		return false;
	}
	
	if (ampere=="") {
		alert("Please enter Ampere.");
		form.ampere.focus();
		return false;
	}

	if (!confirmSave()) return false;
	else return true;	
}

//Validate Cold Temp Entries
function validateDailyActivityChartColdTemp(form)
{
	var coldTemp1	= form.coldTemp1.value;	
	var coldTemp2	= form.coldTemp2.value;	
	var coldTemp3	= form.coldTemp3.value;	
	var coldTemp4	= form.coldTemp4.value;	
	var coldTemp5	= form.coldTemp5.value;	
	var IQF		= form.IQF.value;		

	if (coldTemp1=="" || coldTemp2=="" || coldTemp3=="" || coldTemp4=="" || coldTemp5=="") {
		alert("Please enter cold storage Temperature.");
		//form.iceBrine.focus();
		return false;
	}

	if (IQF=="") {
		alert("Please enter IQF.");
		form.IQF.focus();
		return false;
	}

	if (!confirmSave()) return false;
	else return true;	
}

function activityTimeCheck(){
	selectTimeHour	=	document.getElementById("selectTimeHour").value;
	selectTimeMints	=	document.getElementById("selectTimeMints").value;
	if (selectTimeHour>12 || selectTimeHour<=0) { 
		alert("hour is wrong");
		document.getElementById("selectTimeHour").focus();
		return false;
	}
	if (selectTimeMints>59 || selectTimeMints<0){
		alert("minute is wrong");
		document.getElementById("selectTimeMints").focus();
		return false;
	}
	return true;
}




//Calculate the diesel stock

function calculateDieselStock()
{
	var closingBalance 	= 	0;
	var dieselOB		=	0;
	var dieselUsed		=	0;
	var dieselPurchase	=	0;
	
	if(document.getElementById("dieselOB").value)
		dieselOB	=	parseFloat(document.getElementById("dieselOB").value);
	
	if(document.getElementById("dieselUsed").value)
		dieselUsed	=	parseFloat(document.getElementById("dieselUsed").value);
	
	if(document.getElementById("dieselPurchase").value)
		dieselPurchase	=	parseFloat(document.getElementById("dieselPurchase").value);
	
	//Calculation 
	closingBalance		=	(dieselOB + dieselPurchase) - dieselUsed ;
	if(!isNaN(closingBalance))
		document.getElementById("dieselCB").value = closingBalance;
}
// Find the stock balance
function calculateIceStock()
{
	var openingBalance	= 	0;
	var closingBalance 	= 	0;
	var iceProduced		=	0;
	var iceSelfProduction	=	0;
	var iceDispatch		=	0;
	var iceSold		=	0;
	var icePurchased	=	0;
	var iceCB		=	0;

	if(document.getElementById("iceOB").value)
		openingBalance	=	parseFloat(document.getElementById("iceOB").value);
	if(document.getElementById("iceProduced").value)
		iceProduced	=	parseFloat(document.getElementById("iceProduced").value);
	if(document.getElementById("iceSelfProduction").value)
		iceSelfProduction	=	parseFloat(document.getElementById("iceSelfProduction").value);
	if(document.getElementById("iceDispatch").value)
		iceDispatch	=	parseFloat(document.getElementById("iceDispatch").value);
	if(document.getElementById("iceSold").value)
		iceSold	=	parseFloat(document.getElementById("iceSold").value);
	if(document.getElementById("icePurchased").value)
		icePurchased	=	parseFloat(document.getElementById("icePurchased").value);

	//Calculation 
	closingBalance		=	(openingBalance+iceProduced + icePurchased) - (iceSelfProduction+iceDispatch+iceSold) ;
	if(!isNaN(closingBalance))
		document.getElementById("iceCB").value = closingBalance;
}

// Find other balance

function dailyActivityClosingBalance(opening, closng, balance)
{
	var closingBalance 	= 	0;
	var meterReadingOpening	= 	0;
	var meterReadingClosing	=	0;
	

	if(document.getElementById(opening).value)
		meterReadingOpening	=	parseFloat(document.getElementById(opening).value);
	if(document.getElementById(closng).value)
		meterReadingClosing	=	parseFloat(document.getElementById(closng).value);

	closingBalance = meterReadingOpening - meterReadingClosing;
	if(!isNaN(closingBalance))
		document.getElementById(balance).value = closingBalance;
}





//Checking Digit From 0- 
function isADigit (str) 
{
    if (str == null) 
	{
        return (false);
    }
    if (isNaN(str))
    {
	return (false);
    }
	else if(str<0)
	{
		return (false);
	}
    return (true);
}
function validateAddDailyFreezingChart(form)
{
	var entryRecSize	=	parent.iFrame1.document.frmDailyFreezingChartDetails.entryRecSize.value;

	
	if (entryRecSize==0) {
		alert("Please enter PF/BF details.");
		return false;
	}

	if (!confirmSave()) {
		return false;
	} else {
		return true;
	}
}

function validateDailyFreezingChartDetails(form)
{
	
	var freezerName		=	form.freezerName.value;


	if (freezerName=="") {
		alert("Please select a Freezer.");
		form.freezerName.focus();
		return false;
	}

	if (!confirmSave()) {
		return false;
	} else {
		return true;
	}
}

function dailyFreezingChartTimeCheck(){
	selectTimeHour	=	document.getElementById("selectTimeHour").value;
	selectTimeMints	=	document.getElementById("selectTimeMints").value;
	if (selectTimeHour>12 || selectTimeHour<=0) { 
		alert("hour is wrong");
		document.getElementById("selectTimeHour").focus();
		return false;
	}
	if (selectTimeMints>59 || selectTimeMints<0){
		alert("minute is wrong");
		document.getElementById("selectTimeMints").focus();
		return false;
	}
	return true;
}function validatePurchaseReportSearch(form)
{
	var weighNumber	=	form.weighNumber.value;
	
	
	if( weighNumber=="" )
	{
		alert("Please enter a Weighment Challan No.");
		form.weighNumber.focus();
		return false;
	}
	
	return true;
	/*if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}*/
}

function validatePurchaseReportUpdate(form)
{
	
	var weighNumber	=	form.weighNumber.value;
	
	
	if( weighNumber=="" )
	{
		alert("Please enter a Weighment Challan No.");
		form.weighNumber.focus();
		return false;
	}

	if (!form.changeStatus[0].checked && !form.changeStatus[1].checked && !form.changeStatus[2].checked) {

		alert("Please select atleast one status Change option.");
		return false;
	}

	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}

function validateManageRMChallan(form)
{
	var challanNumberFrom		=	form.challanNumberFrom.value;
	var challanNumberTo		=	form.challanNumberTo.value;
	
	
	if (challanNumberFrom>challanNumberTo) {
		alert("Please make sure Challan No. From should be less than Challan No. To.");
		return false;
	}
	
	if (!confirmSave()) {
		return false;
	} else {
		return true;
	}
}

function validateAddCategory(form)
{
	
	var category	=	form.categoryName.value;
	
	if( category=="" )
	{
		alert("Please enter a Category Name.");
		form.categoryName.focus();
		return false;
	}
	
	if(!confirmSave()){
			return false;
	}
	return true;

}





function validateSubCategory(form)
{
	
	var category	=	form.category.value;
	var subCategory	=	form.subCategoryName.value;
	var unitGroup	= form.unitGroup.value;
	
	if (category=="") {
		alert("Please select a Category.");
		form.category.focus();
		return false;
	}

	if (subCategory=="") {
		alert("Please enter a Sub Category Name.");
		form.subCategoryName.focus();
		return false;
	}
	
	if (unitGroup=="") {
		alert("Please select a Unit Group.");
		form.unitGroup.focus();
		return false;
	}
	
	if (!confirmSave()) {
		return false;
	}
	return true;

}





function validateStock(form)
{
	var stockCode		=	form.stockCode.value;
	var stockName		=	form.stockName.value;
	var category		=	form.category.value;
	var subCategory		=	form.subCategory.value;
	var stockQuantity	=	form.stockQuantity.value;
	var reorderPoint	=	form.reorderPoint.value;
	var stockType		=	form.stockType.value;
	var weight		=	form.weight.value;
	var numLayer		=	form.numLayer.value;
	var packingWeight	=	form.packingWeight.value;
	var numColors		=	form.numColors.value;
	var cartonWeight	=	form.cartonWeight.value;
	var reorderRequired	= 	form.reorderRequired.value;
	
	//alert(form.stockType[0].value);
	
	if (stockCode=="") {
		alert("Please enter a Code.");
		form.stockCode.focus();
		return false;
	}
	
	if (stockName=="") {
		alert("Please enter a Stock Name.");
		form.stockName.focus();
		return false;
	}
	
	if (category=="") {
		alert("Please select a Category.");
		form.category.focus();
		return false;
	}

	if (subCategory=="") {
		alert("Please select a Sub Category.");
		form.subCategory.focus();
		return false;
	}
	
	if (reorderRequired=="") {
		alert("Please select Reorder Required.");
		form.reorderRequired.focus();
		return false;
	}
	
	if (reorderPoint=="" && reorderRequired=='Y') {
		alert("Please enter Reorder Point.");
		form.reorderPoint.focus();
		return false;
	}

	if (!isDigit(reorderPoint) && reorderRequired=='Y') {
		form.reorderPoint.value="";
		alert("Please enter numeric value only.");
		form.reorderPoint.focus();
		return false;
	}
	
	if (form.stockType[0].checked==false && form.stockType[1].checked==false) {
		alert("Please select any one stock item Type.");
		//form.reorderPoint.focus();
		return false;
	}
	
	// For ORDINARY STOCK	
	if (form.stockType[1].checked==true) {

		var unit = form.unit.value;
		var basicUnitQty = form.basicUnitQty.value; 
		//var unitPricePer = form.unitPricePer.value;
		//var unitPricePerItem = form.unitPricePerItem.value;
		var minOrderUnit = form.minOrderUnit.value;
		var minOrderQtyPerUnit = form.minOrderQtyPerUnit.value;
		//unitPricePerOneItem
		// Optional Fields
		var brand		= form.brand.value;
		var brandType		= form.brandType.value;
		var modelNo		= form.modelNo.value;
		var size		= form.size.value;
		var dimensionLength	= form.dimensionLength.value;
		var dimensionBreadth	= form.dimensionBreadth.value;
		var dimensionHeight 	= form.dimensionHeight.value;
		var dimensionDiameter 	= form.dimensionDiameter.value;
		var dimensionRadius	= form.dimensionRadius.value;
		//weight
		var color		= form.color.value;	
		var made		= form.made.value;
		var particularsDescription = form.particularsDescription.value;

		if (unit=="") {
			alert("Please select a Unit.");
			form.unit.focus();
			return false;
		}

		if (basicUnitQty=="") {
			alert("Please enter basic unit qty.");
			form.basicUnitQty.focus();
			return false;
		}
	/*
		if (unitPricePer=="") {
			alert("Please enter unit Price.");
			form.unitPricePer.focus();
			return false;
		}
		
		if (unitPricePerItem=="") {
			alert("Please enter unit Price Per Quantity.");
			form.unitPricePerItem.focus();
			return false;
		}
	*/
		if (minOrderUnit=="") {
			alert("Please enter Minimum order unit.");
			form.minOrderUnit.focus();
			return false;
		}
		if (minOrderQtyPerUnit=="") {
			alert("Please enter Minimum Order Quantity Per Unit.");
			form.minOrderQtyPerUnit.focus();
			return false;
		}		
		
		if (brand==""&& brandType==""&&modelNo=="" && size==""&& dimensionLength==""&& dimensionBreadth==""&& dimensionHeight==""&& dimensionDiameter=="" && dimensionRadius=="" && weight=="" && color=="" && made=="" && particularsDescription=="") {
			alert("Please enter stock Description.");
			form.brand.focus();
			return false;
		}
	

		/*
		if (weight=="") {
			alert("Please enter Weight.");
			form.weight.focus();
			return false;
		}
		*/
	}
	// For PACKING STOCK	
	if (form.stockType[0].checked==true) {
		
		if (numLayer=="") {
			alert("Please enter No of Layer.");
			form.numLayer.focus();
			return false;
		}
	
		if (cartonWeight=="") {
			alert("Please enter Total Weight of Carton.");
			form.cartonWeight.focus();
			return false;
		}
	}

	if (stockQuantity=="") {
			alert("Please enter Quantity.");
			form.stockQuantity.focus();
			return false;
	}

	/*
	if (!isDigit (stockQuantity)) {
		form.stockQuantity.value="";
		alert("Please enter numeric value only.");
		form.stockQuantity.focus();
		return false;
	}
	*/	

	if (!confirmSave()) {
		return false;
	}
	return true;
}

	function Hide()
	{
		document.getElementById( "ordinary" ).style.display = "none";
		document.getElementById( "packing" ).style.display = "none";
	}

	function showPacking()
	{
		document.getElementById( "ordinary" ).style.display = "none";
		document.getElementById( "packing" ).style.display = "block";
	}
	function showOrdinary()
	{
		document.getElementById( "ordinary" ).style.display = "block";
		document.getElementById( "packing" ).style.display = "none";
	}

	// When select Drop Down Box Display Text
	function displayActualWtUnit()
	{		
		var idexValue = document.getElementById("unit").selectedIndex;
		if (idexValue!=0) {
			
			document.getElementById("displayMTxt").innerHTML = document.getElementById("unit").options[idexValue].text;
			// basic Unit Qty
			document.getElementById("basicUnitQtyTxt").innerHTML = "("+ document.getElementById("unit").options[idexValue].text+")";
			/*// Unit Price Per
			document.getElementById("unitPricePerTxt").innerHTML ="&nbsp;"+ document.getElementById("unit").options[idexValue].text;
			// Unit Price Per item
			if (document.getElementById("unitPricePer").value!="") {
				document.getElementById("unitPricePerItemTxt").innerHTML = document.getElementById("unitPricePer").value+"&nbsp;"+ document.getElementById("unit").options[idexValue].text;
			}
			// Unit Price Per One Item
			var calcUnitPerPerItem = 0;
			if (document.getElementById("unitPricePer").value>1 && document.getElementById("unitPricePerItem").value!="") {		
				document.getElementById("unitPricePerOneItemTxt").innerHTML = "&nbsp;"+ document.getElementById("unit").options[idexValue].text;
				calcUnitPerPerItem = parseFloat(document.getElementById("unitPricePerItem").value/document.getElementById("unitPricePer").value);
				if (!isNaN(calcUnitPerPerItem)) {
					document.getElementById("unitPricePerOneItem").value = number_format(calcUnitPerPerItem,0,'','');
				}
			}
			*/
			// Minimum Order Unit
			document.getElementById("minOrderUnitTxt").innerHTML = "&nbsp;"+ document.getElementById("unit").options[idexValue].text;
			// Minimum Order Quantity per Unit
			if (document.getElementById("minOrderUnit").value!="") {
				document.getElementById("minOrderQtyRowTxt").innerHTML = "&nbsp;("+ document.getElementById("minOrderUnit").value+"&nbsp;"+ document.getElementById("unit").options[idexValue].text+")";
				
				// find the rate
				var minOrderQtyPerUnit = document.getElementById("minOrderQtyPerUnit").value;
				var minOrderUnit = document.getElementById("minOrderUnit").value;
				var calcTotalOrderQty = 0;
				if (minOrderQtyPerUnit!="") {
					calcTotalOrderQty = parseFloat(minOrderUnit*minOrderQtyPerUnit);
					if (!isNaN(calcTotalOrderQty))
						document.getElementById("minOrderQtyPerUnitTxt").innerHTML = "&nbsp;"+calcTotalOrderQty+"&nbsp;"+document.getElementById("unit").options[idexValue].text;
				}				
			}		

		} else {
			document.getElementById("displayMTxt").innerHTML 	 = "";
			document.getElementById("basicUnitQtyTxt").innerHTML 	 = "";
			document.getElementById("unitPricePerTxt").innerHTML 	 = "";
			document.getElementById("unitPricePerItemTxt").innerHTML = "";
			document.getElementById("minOrderUnitTxt").innerHTML 	 = "";
			document.getElementById("minOrderQtyPerUnitTxt").innerHTML = "";
		}
		
		// Hide One Item Price
		//hidRowOfOneItemPrice();
		// Disable dimension options
		disableDimensionOption();
	}

	// Hide Reorder Point Row
	function hidReorderPointRow()
	{
		var reorderRequired = document.getElementById("reorderRequired").value;
		if (reorderRequired=='Y') {
			document.getElementById("reOrderPointRow").style.display = '';
		} else {
			document.getElementById("reOrderPointRow").style.display ="none";
		}		
	}

/*
	// Hide rowOfOneItemPrice
	function  hidRowOfOneItemPrice()
	{
		var unitPricePer = document.getElementById("unitPricePer").value;
		if (unitPricePer>1) {
			document.getElementById("rowOfOneItemPrice").style.display = '';
		} else {
			document.getElementById("rowOfOneItemPrice").style.display ="none";
		}		
	}
	*/

	// Disable Dimension Option
	function disableDimensionOption()
	{
		var dimensionLength  = document.getElementById("dimensionLength").value;
		var dimensionBreadth = document.getElementById("dimensionBreadth").value;
		var dimensionDiameter = document.getElementById("dimensionDiameter").value;
		var dimensionRadius = document.getElementById("dimensionRadius").value;
		if (dimensionLength!="" || dimensionBreadth!="") {
			document.getElementById("dimensionDiameter").disabled = true;
			document.getElementById("dimensionRadius").disabled = true;
		} else if (dimensionDiameter!="" || dimensionRadius!="") {
			document.getElementById("dimensionLength").disabled = true;
			document.getElementById("dimensionBreadth").disabled = true;		
		} else {
			document.getElementById("dimensionLength").disabled = false;
			document.getElementById("dimensionBreadth").disabled = false;
			document.getElementById("dimensionDiameter").disabled = false;
			document.getElementById("dimensionRadius").disabled = false;
		}
	}

	// Bulk Update
	function validateBulkStockUpdateRec()
	{
		var recordModified = false;		
		var rowCount = document.getElementById("hidRowCount").value;
		for (i=1; i<=rowCount; i++) {
			var holdingPercent = document.getElementById("holdingPercent_"+i).value;
			var hidHoldingPercent = document.getElementById("hidHoldingPercent_"+i).value;
			var stockingPeriod = document.getElementById("stockingPeriod_"+i).value;
			var hidStockingPeriod  = document.getElementById("hidStockingPeriod_"+i).value;

			if (holdingPercent!=hidHoldingPercent || stockingPeriod!=hidStockingPeriod) {
				recordModified = true;
			}
			if (!isDigit(holdingPercent) || holdingPercent>100) {
				alert("Please enter a holding cost percent number between 1 to 100");
				document.getElementById("holdingPercent_"+i).focus();
				return false;
			}
			if (!isDigit(stockingPeriod)) {
				alert("Please enter a number in stocking period");
				document.getElementById("stockingPeriod_"+i).focus();
				return false;
			}
		}
		if (!recordModified) {
			alert("No modifications to be applied");
			return false;
		}
		if (!confirmSave()) {
			return false;
		}
		return true;
	}

function validateSupplier(form)
{
	var	code			=	form.code.value;
	var name			=	form.supplierName.value;
	
	
	if( code=="" )
	{
		alert("Please enter a Code.");
		form.code.focus();
		return false;
	}
	
	if( name=="" )
	{
		alert("Please enter a Supplier Name.");
		form.supplierName.focus();
		return false;
	}
	
	
	
	if(!confirmSave()){
			return false;
	}
	return true;

}








function validateSupplierStock(form)
{
	var selSupplier		=	form.selSupplier.value;
	var selStock		=	form.selStock.value;
	var quotedPrice		=	form.quotedPrice.value;
	var negotiatedPrice	=	form.negotiatedPrice.value;
	var exciseRate		=	form.exciseRate.value;
	var cstRate		=	form.cstRate.value;
	var schedule		=	form.schedule.value;
	var stockType		=	form.stockType.value;
	var supplierRateList	= 	form.supplierRateList.value;

	
	if (selSupplier=="") {
		alert("Please select a Supplier.");
		form.selSupplier.focus();
		return false;
	}
	
	if (selStock=="") {
		alert("Please select a Stock Item.");
		form.selStock.focus();
		return false;
	}
	
	if( quotedPrice=="" )
	{
		alert("Please enter a Quoted Price.");
		form.quotedPrice.focus();
		return false;
	}
	
	if (negotiatedPrice=="") {
		alert("Please enter a Negotiated Price.");
		form.negotiatedPrice.focus();
		return false;
	}
	
	/*if ( exciseRate=="" ) {
		alert("Please enter a Excise Rate.");
		form.exciseRate.focus();
		return false;
	}
	
	if (cstRate=="") {
		alert("Please enter a CST/VAT Rate.");
		form.cstRate.focus();
		return false;
	}
	
	if (schedule=="") {
		alert("Please select a Schedule Date.");
		form.schedule.focus();
		return false;
	}*/
	
	if (stockType == 'P') {
		
		var layerKgRate 	= 	form.layerKgRate.value;
		var layerConverRate	=	form.layerConverRate.value;
				
		var rowCount	=	form.hidLayerCount.value;
		var layer	=	"layerNo_";
		var quality	=	"paperQuality_";
		var brand	=	"layerBrand_";
		var gsm		=	"layerGsm_";
		var bf		=	"layerBf_";
		var cobb	=	"layerCobb_";
		
		for (i=0; i<rowCount; i++) {
			var layerNo			=	document.getElementById(layer+i);
			var layerQuality	=	document.getElementById(quality+i);
			var layerBrand		=	document.getElementById(brand+i);
			var layerGsm		=	document.getElementById(gsm+i);
			var layerBf			=	document.getElementById(bf+i);
			var layerCobb		=	document.getElementById(cobb+i);
				
			if (layerNo.value=="") {
				alert("Please enter Layer Number.");
				layerNo.focus();
				return false;
			}
			if (layerQuality.value=="") {
				alert("Please enter Layer Quality.");
				layerQuality.focus();
				return false;
			}
			if (layerBrand.value=="") {
				alert("Please enter Layer Brand.");
				layerBrand.focus();
				return false;
			}
			if (layerGsm.value=="") {
				alert("Please enter Layer GSM.");
				layerGsm.focus();
				return false;
			}
			if (layerBf.value=="") {
				alert("Please enter Layer BF.");
				layerBf.focus();
				return false;
			}
			if (layerCobb.value=="") {
				alert("Please enter Layer COBB.");
				layerCobb.focus();
				return false;
			}
				
			}
		if (layerKgRate=="") {
			alert("Please enter a Per Kg Rate.");
			form.layerKgRate.focus();
			return false;
		}
		
		if (layerConverRate=="") {
			alert("Please enter a Conversion Rate.");
			form.layerConverRate.focus();
			return false;
		}		
	}	
	if (supplierRateList=="") {
		alert("Please select a Rate List.");
		form.supplierRateList.focus();
		return false;
	}
	
	if (!confirmSave()) {
		return false;
	}
	return true;
}

function newLayer() 
{
	document.frmSupplierStock.newline.value = '1';
	document.frmSupplierStock.submit();
}

// When select Drop Down Box Display Text
	function displaySupplierStockUnitPrice()
	{		
		var selUnit = document.getElementById("hidUnitName").value;
		if (selUnit!="") {
			//document.getElementById("displayMTxt").innerHTML = selUnit;
			// basic Unit Qty
			//document.getElementById("basicUnitQtyTxt").innerHTML = "("+selUnit+")";
			// Unit Price Per
			document.getElementById("unitPricePerTxt").innerHTML ="&nbsp;"+selUnit;
			// Unit Price Per item
			if (document.getElementById("unitPricePer").value!="") {
				document.getElementById("unitPricePerItemTxt").innerHTML = document.getElementById("unitPricePer").value+"&nbsp;"+selUnit;
			}
			// Unit Price Per One Item
			var calcUnitPerPerItem = 0;
			if (document.getElementById("unitPricePer").value>1 && document.getElementById("negotiatedPrice").value!="") {		
				document.getElementById("unitPricePerOneItemTxt").innerHTML = "&nbsp;"+selUnit;
				calcUnitPerPerItem = parseFloat(document.getElementById("negotiatedPrice").value/document.getElementById("unitPricePer").value);
				if (!isNaN(calcUnitPerPerItem)) {
					document.getElementById("unitPricePerOneItem").value = number_format(calcUnitPerPerItem,0,'','');
				}
			}
		}
		// Row Hide
		hidRowOfOneItemPrice();
	}

	// Hide rowOfOneItemPrice
	function  hidRowOfOneItemPrice()
	{
		var unitPricePer = document.getElementById("unitPricePer").value;
		if (unitPricePer>1) {
			document.getElementById("rowOfOneItemPrice").style.display = '';
		} else {
			document.getElementById("rowOfOneItemPrice").style.display ="none";
		}		
	}

// Checking any value changed
function supplierStockValueChanged()
{
	var priceModified = false;
	var scheduleModified = false;
	var rowCount = document.getElementById("hidRowCount").value;
	for (i=1; i<=rowCount; i++) {
		var negotiatedPrice    = document.getElementById("negotiatedPrice_"+i).value;
		var hidNegotiatedPrice = document.getElementById("hidNegotiatedPrice_"+i).value;
		var supplySchedule 	= document.getElementById("supplySchedule_"+i).value;
		var hidSupplySchedule   = document.getElementById("hidSupplySchedule_"+i).value;

		if (number_format(negotiatedPrice,2,'.','')!=hidNegotiatedPrice) {
			priceModified = true;
		}
		if (supplySchedule!=hidSupplySchedule) {
			scheduleModified = true;
		}
	}
		
	if (priceModified==true) {
		document.getElementById("priceModified").value = 1;
	} else {
		document.getElementById("priceModified").value = "";
	}
	if (scheduleModified==true) {
		document.getElementById("scheduleModified").value = 1;
	} else {
		document.getElementById("scheduleModified").value = "";
	}	
}

// Bulk Update
function  validateSupplierStockBulkUpdate()
{
		var supplierFilter 	   = document.getElementById("supplierFilter").value;
		var supplierRateListFilter = document.getElementById("supplierRateListFilter").value;
		var recordModified = false;		
		var rowCount = document.getElementById("hidRowCount").value;

		if (supplierFilter=="") {
			alert("Please select a Supplier");
			document.getElementById("supplierFilter").focus();
			return false;
		}
		if (supplierRateListFilter=="") {
			alert("Please select a Rate List");
			document.getElementById("supplierRateListFilter").focus();
			return false;
		}

		for (i=1; i<=rowCount; i++) {
			var negotiatedPrice    = document.getElementById("negotiatedPrice_"+i).value;
			var hidNegotiatedPrice = document.getElementById("hidNegotiatedPrice_"+i).value;
			var supplySchedule 	= document.getElementById("supplySchedule_"+i).value;
			var hidSupplySchedule   = document.getElementById("hidSupplySchedule_"+i).value;

			if (number_format(negotiatedPrice,2,'.','')!=hidNegotiatedPrice || supplySchedule!=hidSupplySchedule) {
				recordModified = true;
			}
			if (!isDigit(negotiatedPrice) && negotiatedPrice!="") {
				alert("Please enter a number in negotiated price");
				document.getElementById("negotiatedPrice_"+i).focus();
				return false;
			}
			if (!isDigit(supplySchedule) && supplySchedule!="") {
				alert("Please enter a number in Supply Schedule");
				document.getElementById("supplySchedule_"+i).focus();
				return false;
			}
		}
		if (!recordModified) {
			alert("No modifications to be applied");
			return false;
		}
		if (!confirmSave()) {
			return false;
		}
		return true;
}

	// Validate Revise PO
	function validateRevisePO()
	{
		var poSelected = false;
		var rowCount = document.getElementById("hidReviseRowCount").value;
		for (i=1; i<=rowCount; i++) {
			var poId = document.getElementById("poMainId_"+i).checked;
			if (poId!="") {
				poSelected = true;
			}
		}

		if (!poSelected) {
			alert(" Please select a purchase order");	
			return false;
		}
		if (!confirmSave()) {
			return false;
		}
		return true;
	}

	function validateAddDepartment(form)
{
	
	var department	=	form.departmentName.value;
	var incharge	=	form.incharge.value;
	
	if (department=="") {
		alert("Please enter a Department Name.");
		form.departmentName.focus();
		return false;
	}

	if (incharge=="") {
		alert("Please enter In-Charge Name.");
		form.incharge.focus();
		return false;
	}
	
	if (!confirmSave()) {
		return false;
	}
	return true;

}





function validateUpdatePOOrder(form)
{
	var stockSelected=0;
	var rowCount	=	document.getElementById("hidRowCount").value;

	for (i=1; i<=rowCount; i++) {
		var hidSuppCount = document.getElementById("hidSuppCount_"+i).value;
		if (hidSuppCount>0) {
			var stockId	=	document.getElementById("stockId_"+i);

			if (stockId.checked) {
				stockSelected++;
			}
		}
	}

	if (stockSelected==0) {
		alert("Please select atleast one stock  item");
		return false;
	}

	if (!confirmContinue()) {
		return false;
	}
	return true;
}function validateStkConsumptionSearch(form)
{
	var stockFrom = form.stockFrom.value;
	var stockTo   = form.stockTo.value;
	var details   = form.details.checked;
	var summary  = form.summary.checked;

	if (stockFrom=="") {
		alert("Please select Stock From Date");
		form.stockFrom.focus();
		return false;
	}
		
	if (stockTo=="") {
		alert("Please select Stock Till Date");
		form.stockTo.focus();
		return false;
	}

	if (details=="" && summary=="") {
		alert("Please select atleast one Search option");
		return false;
	}

// 	if (!confirmContinue()) {
// 		return false;
// 	}
	return true;
}

function hideConsumptionSummaryOption()
{
	document.getElementById("summary").checked=false;
}


function hideConsumptionDetailedOption()
{
	document.getElementById("details").checked=false;
}function validateStkPurchaseRejectSearch(form)
{
	var stockFrom = form.stockFrom.value;
	var stockTo   = form.stockTo.value;
	var selSupplier = form.selSupplier.value;

	if (stockFrom=="") {
		alert("Please select Stock From Date");
		form.stockFrom.focus();
		return false;
	}
		
	if (stockTo=="") {
		alert("Please select Stock Till Date");
		form.stockTo.focus();
		return false;
	}

	if (selSupplier=="") {
		alert("Please select a Supplier");
		form.selSupplier.focus();
		return false;
	}



// 	if (!confirmContinue()) {
// 		return false;
// 	}
	return true;
}

function hideConsumptionSummaryOption()
{
	document.getElementById("summary").checked=false;
}


function hideConsumptionDetailedOption()
{
	document.getElementById("details").checked=false;
}function validatePurchaseOrderReport(form)
{
	var stockFrom = form.stockFrom.value;
	var stockTo   = form.stockTo.value;
	//var selSupplier = form.selSupplier.value;

	if (stockFrom=="") {
		alert("Please select PO From Date");
		form.stockFrom.focus();
		return false;
	}
		
	if (stockTo=="") {
		alert("Please select PO Till Date");
		form.stockTo.focus();
		return false;
	}

// 	if (selSupplier=="") {
// 		alert("Please select a Supplier");
// 		form.selSupplier.focus();
// 		return false;
// 	}



// 	if (!confirmContinue()) {
// 		return false;
// 	}
	return true;
}function validateStkSummarySearch(form)
{
	var stockFrom = form.stockFrom.value;
	var stockTo   = form.stockTo.value;
	var selStock = form.selStock.value;

	if (stockFrom=="") {
		alert("Please select Stock From Date");
		form.stockFrom.focus();
		return false;
	}
		
	if (stockTo=="") {
		alert("Please select Stock Till Date");
		form.stockTo.focus();
		return false;
	}

	if (selStock=="") {
		alert("Please select a Stock");
		form.selStock.focus();
		return false;
	}


// 	if (!confirmContinue()) {
// 		return false;
// 	}
	return true;
}function validateUnitGroup(form)
{
	
	var groupName	=	form.groupName.value;
	
	if (groupName=="") {
		alert("Please enter a Unit Group.");
		form.groupName.focus();
		return false;
	}
	
	if (!confirmSave()) {
		return false;
	}
	return true;
}





function validateStockItemUnit(form)
{
	var unitGroup	= 	form.unitGroup.value;
	var unitName	=	form.unitName.value;
	
	if (unitGroup=="") {
		alert("Please select a Unit Group.");
		form.unitGroup.focus();
		return false;
	}

	if (unitName=="") {
		alert("Please enter a Unit Name.");
		form.unitName.focus();
		return false;
	}
	
	if (!confirmSave()) {
		return false;
	}
	return true;
}





function validateSupplierRateList(form)
{
	var rateListName	=	form.rateListName.value;
	var startDate		=	form.startDate.value;
	var addMode		= document.getElementById("hidAddMode").value;
	
	if (rateListName=="" ) {
		alert("Please enter a Rate list Name.");
		form.rateListName.focus();
		return false;
	}
	if (startDate=="" ) {
		alert("Please select a date.");
		form.startDate.focus();
		return false;
	}
	if (addMode!="") {
		var selSupplier = form.selSupplier.value;
		if (selSupplier=="" ) {
			alert("Please select a Supplier.");
			form.selSupplier.focus();
			return false;
		}
	}
	
	if (!confirmSave()) {
		return false;
	} else {
		return true;
	}
}function validateStockImport()
{
	var file = document.getElementById("uploadFile").value;
	var packingChk = document.getElementById("stockType1").checked;
	var ordinaryChk = document.getElementById("stockType2").checked;

	if( file == "" )
	{
		alert("Please select a valid csv file.");
		document.getElementById("uploadFile").focus();
		return false;
	}
	else 
	{
		if( file.toLowerCase().lastIndexOf(".csv")==-1 ) 
		{
			alert("Invalid file type. Please select a valid csv file.");
			return false;
		}
	}

	if (!packingChk && !ordinaryChk) {
		alert("Please select a stock type");
		return false;
	}

	if( confirm("Do you wish to continue?" ) )
	{
		return true;
	}
	return false;
}

function printUnit(id)
{
	var idexValue = document.getElementById("selUnit_"+id).selectedIndex;
	if (idexValue!=0) {
		var displayText = document.getElementById("selUnit_"+id).options[idexValue].text;
		document.getElementById("unitDisp_"+id).innerHTML = displayText;
		document.getElementById("minOrderUnitTxt_"+id).innerHTML = displayText;

		if (document.getElementById("minOrderUnit_"+id).value!="") {
				//document.getElementById("minOrderQtyRowTxt").innerHTML = "&nbsp;("+ document.getElementById("minOrderUnit").value+"&nbsp;"+ document.getElementById("unit").options[idexValue].text+")";
				
				// Total qty
				var minOrderQtyPerUnit = document.getElementById("minOrderQtyPerUnit_"+id).value;
				var minOrderUnit = document.getElementById("minOrderUnit_"+id).value;
				var calcTotalOrderQty = 0;
				if (minOrderQtyPerUnit!="") {
					calcTotalOrderQty = parseFloat(minOrderUnit*minOrderQtyPerUnit);
					if (!isNaN(calcTotalOrderQty))
						document.getElementById("minOrderQtyPerUnitTxt_"+id).innerHTML = "&nbsp;"+calcTotalOrderQty+"&nbsp;"+displayText;
					}
		}
		
	} else {
		document.getElementById("unitDisp_"+id).innerHTML = "";
		document.getElementById("minOrderUnitTxt_"+id).innerHTML = "";
		document.getElementById("minOrderQtyPerUnitTxt_"+id).innerHTML = "";
	}
	
	disableBulkDimensionOption(id);
}

// Disable Dimension Option
	function disableBulkDimensionOption(id)
	{
		var dimensionLength  = document.getElementById("dimensionLength_"+id).value;
		var dimensionBreadth = document.getElementById("dimensionBreadth_"+id).value;
		var dimensionDiameter = document.getElementById("dimensionDiameter_"+id).value;
		var dimensionRadius = document.getElementById("dimensionRadius_"+id).value;
		if (dimensionLength!="" || dimensionBreadth!="") {
			document.getElementById("dimensionDiameter_"+id).disabled = true;
			document.getElementById("dimensionRadius_"+id).disabled = true;
			document.getElementById("dimensionLength_"+id).disabled = false;
			document.getElementById("dimensionBreadth_"+id).disabled = false;
		} else if (dimensionDiameter!="" || dimensionRadius!="") {
			document.getElementById("dimensionLength_"+id).disabled = true;
			document.getElementById("dimensionBreadth_"+id).disabled = true;
			document.getElementById("dimensionDiameter_"+id).disabled = false;
			document.getElementById("dimensionRadius_"+id).disabled = false;		
		} else {
			document.getElementById("dimensionLength_"+id).disabled = false;
			document.getElementById("dimensionBreadth_"+id).disabled = false;
			document.getElementById("dimensionDiameter_"+id).disabled = false;
			document.getElementById("dimensionRadius_"+id).disabled = false;
		}
		//alert(dimensionLength+"->"+dimensionBreadth+"->"+dimensionDiameter+"->"+dimensionRadius);
	}


function validateBulkStockEntry()
{
	var stockType = document.getElementById("hidStockType").value;

	var rc = document.getElementById("RowCount").value;
	
	if (!checkAnySelected()) {
		alert("Please select a stock to import.")
		return false;
	}

	if (stockType=='O') {

	for (p=0; p<rc; p++ ) {
		var code = document.getElementById("stockCode_"+p);
		var stkName = document.getElementById("stockName_"+p);
		var desc = document.getElementById("description_"+p);
		var catgory = document.getElementById("category_"+p);
		var subCatgory = document.getElementById("subCategory_"+p);
		var rePoint = document.getElementById("reorderPoint_"+p);
		var qtyInStock = document.getElementById("qtyInStock_"+p);
		var unit = document.getElementById("selUnit_"+p);
		var basicUnitQty = document.getElementById("basicUnitQty_"+p); 
		var minOrderQtyPerUnit = document.getElementById("minOrderQtyPerUnit_"+p); 

		var brand		= document.getElementById("brand_"+p);
		var brandType		= document.getElementById("type_"+p);
		var modelNo		= document.getElementById("modelNo_"+p);
		var size		= document.getElementById("size_"+p);
		var dimensionLength	= document.getElementById("dimensionLength_"+p);
		var dimensionBreadth	= document.getElementById("dimensionBreadth_"+p);
		var dimensionHeight 	= document.getElementById("dimensionHeight_"+p);
		var dimensionDiameter 	= document.getElementById("dimensionDiameter_"+p);
		var dimensionRadius	= document.getElementById("dimensionRadius_"+p);
		var weight		= document.getElementById("weight_"+p);
		var color		= document.getElementById("color_"+p);	
		var made		= document.getElementById("made_"+p);
		var particularsDescription = document.getElementById("particularsDescription_"+p);

		//var actWeight = document.getElementById("weight_"+p);
		
		var importRec = document.getElementById("chkImport_"+p);
		
		if (importRec.checked == true) {
			if (code.value == "") {
				alert("Please enter a Code.");
				code.focus();
				return false;
			}
			if (stkName.value == "") {
				alert("Please enter a Stock Name.");
				stkName.focus();
				return false;
			}
			if (catgory.value == "") {
				alert("Please select a Category.");
				catgory.focus();
				return false;
			}
			if (subCatgory.value == "")  {
				alert("Please select a Sub Category.");
				subCatgory.focus();
				return false;
			}
			if (rePoint.value == "") {
				alert("Please enter Reorder Point.");
				rePoint.focus();
				return false;
			}
			if (!isDigit (rePoint.value)) {
				reorderPoint.value="";
				alert("Please enter numeric value only.");
				rePoint.focus();
				return false;
			}

			if ( qtyInStock.value=="") {
				alert("Please enter Quantity in Stock.");
				qtyInStock.focus();
				return false;
			}

			if ( unit.value == "" ) {
				alert("Please select a Unit.");
				unit.focus();
				return false;
			}

			if (basicUnitQty.value=="") {
				alert("Please enter basic unit qty.");
				basicUnitQty.focus();
				return false;
			}
			if (minOrderQtyPerUnit.value=="") {
				alert("Please enter Minimum Order Quantity Per Unit..");
				minOrderQtyPerUnit.focus();
				return false;
			}

			if (brand.value==""&& brandType.value=="" && modelNo.value=="" && size.value=="" && dimensionLength.value=="" && dimensionBreadth.value =="" && dimensionHeight.value =="" && dimensionDiameter.value=="" && dimensionRadius.value=="" && weight.value=="" && color.value=="" && made.value=="" && particularsDescription.value=="") {
				alert("Please enter stock Description.");
				brand.focus();
				return false;
			}

			if (dimensionLength.value!="" && dimensionBreadth.value!="" && dimensionDiameter.value!="" && dimensionRadius.value!="") {
				alert("Please enter either (L&B) or (DIA & RADIUS).");	
				dimensionLength.focus();
				return false;
			}

			/*
			if ( actWeight.value=="") {
				alert("Please enter Actual Weight.");
				actWeight.focus();
				return false;
			}
			*/
		}
	}
    }
	
	// Stock Packing Type

	if (stockType=='P') {
		for (p=0; p<rc; p++ ) {
		var code = document.getElementById("stockCode_"+p);
		var stkName = document.getElementById("stockName_"+p);
		var desc = document.getElementById("description_"+p);
		var catgory = document.getElementById("category_"+p);
		var subCatgory = document.getElementById("subCategory_"+p);
		var rePoint = document.getElementById("reorderPoint_"+p);
		var qtyInStock = document.getElementById("qtyInStock_"+p);
		var numLayer  = document.getElementById("numLayer_"+p);	
		var cartonWeight  = document.getElementById("cartonWeight_"+p);	
		var packingKg	 = document.getElementById("packingKg_"+p);	
		var packing	 = document.getElementById("packing_"+p);
			
				
		var importRec = document.getElementById("chkImport_"+p);
		
		if (importRec.checked == true) {
			if (code.value == "") {
				alert("Please enter a Code.");
				code.focus();
				return false;
			}
			if (stkName.value == "") {
				alert("Please enter a Stock Name.");
				stkName.focus();
				return false;
			}
			if (catgory.value == "") {
				alert("Please select a Category.");
				catgory.focus();
				return false;
			}
			if (subCatgory.value == "")  {
				alert("Please select a Sub Category.");
				subCatgory.focus();
				return false;
			}
			if (rePoint.value == "") {
				alert("Please enter Reorder Point.");
				rePoint.focus();
				return false;
			}
			if (!isDigit (rePoint.value)) {
				reorderPoint.value="";
				alert("Please enter numeric value only.");
				rePoint.focus();
				return false;
			}

			if ( qtyInStock.value=="") {
				alert("Please enter Quantity in Stock.");
				qtyInStock.focus();
				return false;
			}
			
			if (numLayer.value=="") {
				alert("Please enter No of Layer.");
				numLayer.focus();
				return false;
			}
			if (packingKg.value!="" && packing.value=="") {
				alert("Please select packing Nos.");
				packing.focus();
				return false;
			}
			

			if (cartonWeight.value=="") {
				alert("Please enter Total Weight of Carton.");
				cartonWeight.focus();
				return false;
			}
			
		}
	}	

	}
	
	if (!confirm("This will import all selected stocks to the database. Do you wish to continue? ")) 
	{
		return false;
	}
	return true;
}

function checkAnySelected()
{
	var chkCount = 0;
	var rc = document.getElementById("RowCount").value ;
	for (s=0; s<rc;s++ )
	{
		if( document.getElementById("chkImport_"+s).checked == true ) chkCount++;
	}
	if( chkCount == 0 ) return false;
	return true;
}	// Validate Revise PO
	function validateRevisePurchaseOrder()
	{
		var poSelected = false;
		var rowCount = document.getElementById("hidReviseRowCount").value;

		var supplierFilter 	   = document.getElementById("supplierFilter").value;
		var supplierRateListFilter = document.getElementById("supplierRateListFilter").value;

		if (supplierFilter=="") {
			alert("Please select a Supplier");
			document.getElementById("supplierFilter").focus();
			return false;
		}
		if (supplierRateListFilter=="") {
			alert("Please select a rate list for revision");
			document.getElementById("supplierRateListFilter").focus();
			return false;
		}

		for (i=1; i<=rowCount; i++) {
			var poId = document.getElementById("poMainId_"+i).checked;
			if (poId!="") {
				poSelected = true;
			}
		}
	
		if (poSelected) {
			//var dMsg = "PO's will revised based on the selected rate list";
			//if (!confirm(dMsg)) return false;
			alert("Purchase order will revised based on the selected rate list");			
		}

		if (!poSelected) {
			alert(" Please select a purchase order");	
			return false;
		}
		if (!confirmSave()) {
			return false;
		}
		return true;
	}
function validateIngredientRateListMaster(form)
{
	
	var rateListName	=	form.rateListName.value;
	
	var startDate		=	form.startDate.value;
	
	if(rateListName=="" )
	{
		alert("Please enter a Rate list Name.");
		form.rateListName.focus();
		return false;
	}
	if(startDate=="" )
	{
		alert("Please select a date.");
		form.startDate.focus();
		return false;
	}
	
	if(!confirmSave())
	{
		return false;
	}
	else
	{
		return true;
	}
}

function validateIngredientReceipt(form)
{
	var selPoId		=	form.selPoId.value;
	var selDepartment	=	form.selDepartment.value;
	var gateEntryNo		=	form.gateEntryNo.value;
	var storeEntry		=	form.storeEntry.value;
	
	
	if (selPoId=="") {
		alert("Please select a Purchae Order Number.");
		form.selPoId.focus();
		return false;
	}
	
	if (selDepartment=="") {
		alert("Please select a Department.");
		form.selDepartment.focus();
		return false;
	}
	
	if (gateEntryNo=="") {
		alert("Please enter a Gate Entry Number.");
		form.gateEntryNo.focus();
		return false;
	}
	
	if (storeEntry=="") {
		alert("Please enter a Store Entry Number.");
		form.storeEntry.focus();
		return false;
	}	
	
	if (selPoId!="") {
		var rejCount = 0;
		var itemCount	=	document.getElementById("hidItemCount").value;
		for (i=1; i<=itemCount; i++) {
			var qtyReceived	= document.getElementById("qtyReceived_"+i);
			var qtyActual   = document.getElementById("quantity_"+i);

			if (qtyActual.value=="") {
				alert("Please enter Actual Quantity.");
				qtyActual.focus();
				return false;
			}

			if (qtyReceived.value== "") {
				alert("Please enter Received Quantity.");
				qtyReceived.focus();
				return false;
			}

			if (document.getElementById("qtyRejected_"+i).value<0) {
				alert("Please check the Accepted Quantity.");
				qtyReceived.focus();
				return false;
			}

			if( document.getElementById("qtyRejected_"+i).value !="" &&  document.getElementById("qtyRejected_"+i).value !=0 ) {
				rejCount++;
				if (document.getElementById("remarks_"+i).value == "") {
					alert("Please enter Remarks for rejected quantity.")
					document.getElementById("remarks_"+i).focus();	
					return false;
				}
			}
		}
		if (rejCount!=0  && document.getElementById("rejectedEntry").value =="")  {
			alert("Please enter rejected material gate pass number.");
			document.getElementById("rejectedEntry").focus();
			return false;
		}
			 //return false;
	}
	if (!confirmSave()) {
		return false;
	}
	return true;
}

// Calc Ing Reject Qty
function calcIngredientReject(form)
{
	var rowCount	=	document.getElementById("hidItemCount").value;
	var total	= 0;
	
	var pQty		=	"quantity_";
	var qtyReceived		=	"qtyReceived_";
	var qtyRejected		=	"qtyRejected_";	
	
	for (i=1; i<=rowCount; i++) {
	  	var quantity	=	0;
	 	if(document.getElementById(qtyReceived+i).value!=""){
			document.getElementById(qtyRejected+i).value	 = document.getElementById(pQty+i).value - document.getElementById(qtyReceived+i).value;
	  	} else {
			document.getElementById(qtyRejected+i).value =0;
		}
	}	

	// Calculate Amt
	calcIngReceivedAmt();
}

// Calculate Ing Received Amt
function calcIngReceivedAmt()
{
	var rowCount	= document.getElementById("hidItemCount").value;
	var total	= 0;	
	var pUnit	= "unitPrice_";
	var pQty	= "qtyReceived_";
	var pTotal	= "totalAmt_";	
	
	for (i=1; i<=rowCount; i++) {
		var quantity	= 0;		
	 	if (document.getElementById(pQty+i).value!="") {
			document.getElementById(pTotal+i).value = document.getElementById(pUnit+i).value * document.getElementById(pQty+i).value;
	  	} else {
			document.getElementById(pTotal+i).value =0;
		}
		quantity= document.getElementById(pTotal+i).value;
		total	= parseFloat(total)+parseFloat(quantity);	  
	}
	
	if (!isNaN(total)) {
		document.getElementById("grandTotalAmt").value = number_format(total,2,'.','');	
	}
}function validateProductBatch(form)
{
	var batchNo	= form.batchNo.value;
	var selProduct	= form.selProduct.value;
	//var productGmsPerPouch = 	form.productGmsPerPouch.value;
	//var pouchPerBatch	=	form.pouchPerBatch.value;
	var startTimeHour	=	form.startTimeHour.value;
	var startTimeMints	=	form.startTimeMints.value;
	var stopTimeHour	=	form.stopTimeHour.value;
	var stopTimeMints	=	form.stopTimeMints.value;
	var productGroupExist   =	form.productGroupExist.value;
	
	if (batchNo=="") {
		alert("Please enter a Batch Number.");
		form.batchNo.focus();
		return false;
	}
	
	if (selProduct=="") {
		alert("Please select a Product.");
		form.selProduct.focus();
		return false;
	}

	/*
	if (productGmsPerPouch=="") {
		alert("Please enter Gms per Pouch (Product).");
		form.productGmsPerPouch.focus();
		return false;
	}

	if (pouchPerBatch=="") {
		alert("Please enter Pouches Per Batch.");
		form.pouchPerBatch.focus();
		return false;
	}
	*/

	if (startTimeHour=="" || startTimeMints=="") {
		alert("Please enter Start Time.");
		//form.pouchPerBatch.focus();
		return false;
	}

	if (stopTimeHour=="" || stopTimeMints=="") {
		alert("Please enter Stop Time.");
		//form.pouchPerBatch.focus();
		return false;
	}

	if (!productBatchTimeCheck('H', 'startTimeHour') || !productBatchTimeCheck('M', 'startTimeMints') || !productBatchTimeCheck('H', 'stopTimeHour') || !productBatchTimeCheck('M', 'stopTimeMints')) {
		return false;
	}

	if (!productGroupExist) {
		var phFactorValue = form.phFactorValue.value;
		if (phFactorValue=="") {
			alert("Please enter PH Factor Value.");
			form.phFactorValue.focus();
			return false;
		}

	} else {
		var foFactorValue = form.foFactorValue.value;
		if (foFactorValue=="") {
			alert("Please enter F0 Factor Value.");
			form.foFactorValue.focus();
			return false;
		}
	}
	
	
	var fixedQty = false;
	if (selProduct!="") {
		var itemCount = document.getElementById("hidItemCount").value;

		for (i=1; i<=itemCount; i++) {

			var qty = document.getElementById("quantity_"+i);
			var fixedQtyChk = document.getElementById("fixedQtyChk_"+i);
			var existingQty = document.getElementById("existingQty_"+i).value;
			var cleanedQty = document.getElementById("cleanedQty_"+i);
			if (qty.value == "") {
				alert("Please enter Quantity.");
				qty.focus();
				return false;
			}
			if (cleanedQty.value == "") {
				alert("Please enter cleaned Quantity.");
				cleanedQty.focus();
				return false;
			}
			if (fixedQtyChk.value == 'Y') {
				fixedQty = true;
			}
			//Checking the balance qty
			var balanceQty = parseFloat(existingQty)-parseFloat(qty.value);
			if (balanceQty<=0) {
				alert("Please make sure the selected ingredient is available.");
				qty.focus();
				return false;
			}
		}
		if (fixedQty==false) {
			alert("Please select atleast one ingredient quantity as fixed.");
			return false;
		}
	}
	if (!confirmSave()) {
		return false;
	}
	return true;
}

//Time Check
function productBatchTimeCheck(mode, field)
{
	selectTime 	=	document.getElementById(field).value;
	if (mode=='H' && (selectTime>12 || selectTime<=0)) {
		alert("Hour is wrong");
		document.getElementById(field).focus();
		return false;
	}
	if (mode=='M' && (selectTime>59 || selectTime<0)){
		alert("Minute is wrong");
		document.getElementById(field).focus();
		return false;
	}
	return true;
}

/*
product define: net wt 285gm 80gm prawns 10gm fish

batch : filled net wt 300gm net wt proportion for each ingredient Qty

	Net Wt:300
	Prawns: (285-80 = 205-300 = 95)
	Fish: (285-10= 275-300 =25)
*/
// Calculate the Proportion of all ingredient
/*function calcIngProportion()
{
	var productGmsPerPouch    = document.getElementById("productGmsPerPouch").value;
	var hidProductGmsPerPouch = document.getElementById("hidProductGmsPerPouch").value;
	//alert(hidProductGmsPerPouch);
	var itemCount = document.getElementById("hidItemCount").value;

		for (i=1; i<=itemCount; i++) {

			var qty = document.getElementById("quantity_"+i).value;
			var hidQuantity = document.getElementById("hidQuantity_"+i).value;
			var calcProportionValue = parseFloat(hidProductGmsPerPouch) - parseFloat(hidQuantity) - parseFloat(productGmsPerPouch);
			//alert(Math.abs(calcProportionValue));
			if (!isNaN(calcProportionValue)) 
				document.getElementById("quantity_"+i).value = number_format(Math.abs(calcProportionValue),2,'.','');
		}
}*/

//Rate Per batch
function getProductRatePerBatch()
{
	var gravyGmsPerPouch = 0;

	var itemCount 	      = document.getElementById("hidItemCount").value;
	var productKgPerBatch = parseFloat(document.getElementById("productKgPerBatch").value);
	var pouchPerBatch     = parseFloat(document.getElementById("pouchPerBatch").value);
	var productGmsPerPouch = parseFloat(document.getElementById("productGmsPerPouch").value);	
	var productRatePerPouch = parseFloat(document.getElementById("productRatePerPouch").value);
	//var fishGmsPerPouch = document.getElementById("fishGmsPerPouch").value;
	var fishGmsPerPouch = parseFloat(document.getElementById("totalFixedFishQty").value);
	
	calcGravyGmsPerPouch = parseFloat(productGmsPerPouch)-parseFloat(fishGmsPerPouch);
	if (!isNaN(calcGravyGmsPerPouch)) {
		document.getElementById("gravyGmsPerPouch").value = number_format(calcGravyGmsPerPouch,3,'.','');
		gravyGmsPerPouch = parseFloat(document.getElementById("gravyGmsPerPouch").value);
	}


	var getIngPrice = 0;
	var getPercentagePerbatch = 0;
	fishKgPerBatch = 0;
	gravyKgPerBatch = 0;
	fishRatePerBatch=0;
	gravyRatePerBatch = 0;	
	var calcProductKgInPouchPerBatch = 0;
	var fixedKgPerBatch=0;	
	var calcFishPercentYield = 0;
	var calcGravyPercentYield = 0;

	for (i=1; i<=itemCount; i++) {
		//var fixedQtyChk = document.getElementById("fixedQtyChk_"+i).checked;				
		var fixedQtyChk = document.getElementById("fixedQtyChk_"+i).value;				
		var quantity  = parseFloat(document.getElementById("quantity_"+i).value);
		//alert(fixedQtyChk);
		var lastPrice = parseFloat(document.getElementById("lastPrice_"+i).value);		
		//alert(quantity+"-"+lastPrice);
		//Find Rate for each Ingredient
		getIngPrice =  quantity*lastPrice;
		if (!isNaN(getIngPrice)) {
			document.getElementById("ratePerBatch_"+i).value = number_format(Math.abs(getIngPrice),2,'.','');
		}
		// Find Percentage for Each Item
		getPercentagePerbatch = (quantity/productKgPerBatch);
		if (!isNaN(getPercentagePerbatch)) {
			document.getElementById("percentagePerBatch_"+i).value = number_format(Math.abs(getPercentagePerbatch*100),0,'','');
		}
		//Find Gms Per pouch
		getGmsPerPouch = (quantity/pouchPerBatch);
		if (!isNaN(getGmsPerPouch)) {
			document.getElementById("ingGmsPerPouch_"+i).value  = number_format(getGmsPerPouch,3,'.','');
		}
		//Find Percentage Wt
		getPercentageWtPerpouch = ((parseFloat(document.getElementById("ingGmsPerPouch_"+i).value) /productGmsPerPouch)*100);
		if (!isNaN(getPercentageWtPerpouch)) {
			document.getElementById("percentageWtPerPouch_"+i).value = number_format(Math.abs(getPercentageWtPerpouch),2,'.','');
		}
		//Find Rate Per Pouch
		getRatePerPouch = (parseFloat(document.getElementById("ratePerBatch_"+i).value)/pouchPerBatch);
		if (!isNaN(getRatePerPouch)) {
			document.getElementById("ratePerPouch_"+i).value = number_format(Math.abs(getRatePerPouch),2,'.','');
		}
		//Find Percentage Cost Per Pouch
		getPercentageCostPerPouch = ((parseFloat(document.getElementById("ratePerPouch_"+i).value)/productRatePerPouch)*100);
		if (!isNaN(getPercentageCostPerPouch)) {
			document.getElementById("percentageCostPerPouch_"+i).value = number_format(Math.abs(getPercentageCostPerPouch),0,'','');
		}
		//////////////////////////

		if (fixedQtyChk=='Y') {
			//fishKgPerBatch += document.getElementById("quantity_"+i).value;
			fishKgPerBatch += parseFloat(document.getElementById("fixedQty_"+i).value); //Sum of FixedQty	
			fishRatePerBatch += parseFloat(document.getElementById("ratePerBatch_"+i).value);

			fixedKgPerBatch += parseFloat(document.getElementById("quantity_"+i).value);
		} else {			
			gravyKgPerBatch += parseFloat(document.getElementById("quantity_"+i).value);
			gravyRatePerBatch += parseFloat(document.getElementById("ratePerBatch_"+i).value);
		}		
	} //Loop End

	// Assign the values
	document.getElementById("fishGmsPerPouch").value = number_format(fishKgPerBatch,3,'.','');
	document.getElementById("totalFixedFishQty").value = number_format(fishKgPerBatch,3,'.','');

	//Kg (Raw) per Batch
	document.getElementById("fishKgPerBatch").value = number_format(fixedKgPerBatch,2,'.','');
	document.getElementById("gravyKgPerBatch").value = number_format(gravyKgPerBatch,2,'.','');
	document.getElementById("productKgPerBatch").value = number_format(( parseFloat(fixedKgPerBatch)+parseFloat(gravyKgPerBatch)),2,'.','');

	//Rs. Per Batch
	document.getElementById("fishRatePerBatch").value = number_format(fishRatePerBatch,2,'.','');
	document.getElementById("gravyRatePerBatch").value = number_format(gravyRatePerBatch,2,'.','');
	document.getElementById("productRatePerBatch").value = parseFloat(fishRatePerBatch)+parseFloat(gravyRatePerBatch);

	//Rs. Per Kg per Batch
	document.getElementById("fishRatePerKgPerBatch").value = number_format(( parseFloat(document.getElementById("fishRatePerBatch").value)/parseFloat(document.getElementById("fishKgInPouchPerBatch").value)),2,'.','');
	document.getElementById("gravyRatePerKgPerBatch").value = number_format((parseFloat(document.getElementById("gravyRatePerBatch").value)/parseFloat(document.getElementById("gravyKgInPouchPerBatch").value)),2,'.','');
	document.getElementById("productRatePerKgPerBatch").value = number_format(( parseFloat(document.getElementById("fishRatePerKgPerBatch").value)+parseFloat(document.getElementById("gravyRatePerKgPerBatch").value)),2,'.','');
	
	//Rs. Per Pouch
	document.getElementById("fishRatePerPouch").value  =number_format(( parseFloat(document.getElementById("fishRatePerKgPerBatch").value) * fishGmsPerPouch),2,'.','');

	document.getElementById("gravyRatePerPouch").value  = number_format((parseFloat( document.getElementById("gravyRatePerKgPerBatch").value)*gravyGmsPerPouch),2,'.','');

	document.getElementById("productRatePerPouch").value  = number_format((parseFloat(document.getElementById("productRatePerBatch").value)/pouchPerBatch),2,'.','');

	//% (Raw) per Batch
	document.getElementById("fishRawPercentagePerPouch").value = number_format((parseFloat(document.getElementById("fishKgPerBatch").value)/parseFloat(document.getElementById("productKgPerBatch").value))*100,0,'.','');
	document.getElementById("gravyRawPercentagePerPouch").value = number_format(( parseFloat(document.getElementById("gravyKgPerBatch").value)/parseFloat(document.getElementById("productKgPerBatch").value))*100,0,'.','');
	document.getElementById("productRawPercentagePerPouch").value = parseFloat(document.getElementById("fishRawPercentagePerPouch").value) + parseFloat(document.getElementById("gravyRawPercentagePerPouch").value)
	
	// Kg (in Pouch) per Batch
	document.getElementById("fishKgInPouchPerBatch").value = number_format((parseFloat(pouchPerBatch)*parseFloat(fishGmsPerPouch)),2,'.','');
	document.getElementById("gravyKgInPouchPerBatch").value = number_format((parseFloat(pouchPerBatch)*parseFloat(gravyGmsPerPouch)),2,'.','');

	calcProductKgInPouchPerBatch = parseFloat(document.getElementById("fishKgInPouchPerBatch").value) + parseFloat(document.getElementById("gravyKgInPouchPerBatch").value);

	if (!isNaN(calcProductKgInPouchPerBatch)) {
		document.getElementById("productKgInPouchPerBatch").value = number_format(calcProductKgInPouchPerBatch,2,'.','');
	}

	//% per Pouch
	document.getElementById("fishPercentagePerPouch").value  = number_format((fishGmsPerPouch/productGmsPerPouch)*100,0,'.','');
	document.getElementById("gravyPercentagePerPouch").value = number_format((gravyGmsPerPouch/productGmsPerPouch)*100,0,'.','');
	document.getElementById("productPercentagePerPouch").value  = parseFloat(document.getElementById("fishPercentagePerPouch").value) + parseFloat(document.getElementById("gravyPercentagePerPouch").value);

	//% Yield
	calcFishPercentYield = parseFloat(document.getElementById("fishKgInPouchPerBatch").value)/parseFloat(document.getElementById("fishKgPerBatch").value);	
	if (!isNaN(calcFishPercentYield)) {
		document.getElementById("fishPercentageYield").value  = number_format((calcFishPercentYield*100),0,'.','');
	}
	calcGravyPercentYield = parseFloat(document.getElementById("gravyKgInPouchPerBatch").value)/parseFloat(document.getElementById("gravyKgPerBatch").value);
	if (!isNaN(calcGravyPercentYield)) {
		document.getElementById("gravyPercentageYield").value  = number_format((calcGravyPercentYield*100),0,'.','');
	}

	//% Yield Edited 20-06-08
	/*
	document.getElementById("fishPercentageYield").value  = number_format((parseFloat(document.getElementById("fishKgInPouchPerBatch").value)/parseFloat(document.getElementById("fishKgPerBatch").value)),0,'.','');
	document.getElementById("gravyPercentageYield").value  = number_format(( parseFloat(document.getElementById("gravyKgInPouchPerBatch").value)/parseFloat(document.getElementById("gravyKgPerBatch").value)),0,'.','');	
	*/
}

// For Pouches Calculation
function calcProductBatchForPouch()
{
	var pouchesProductGmsPerPouch 	= parseFloat(document.getElementById("pouchesProductGmsPerPouch").value);	
	var pouchesFishGmsPerPouch 	= parseFloat(document.getElementById("pouchesFishGmsPerPouch").value);
	//Total Pouch
	var pouchesPerBatch		= document.getElementById("pouchesPerBatch").value;

	// Pouches - Kg (in Pouch) per Batch
	var pouchesFishKgInPouchPerBatch = parseFloat(document.getElementById("pouchesFishKgInPouchPerBatch").innerHTML);

	document.getElementById("pouchesFishKgInPouchPerBatch").innerHTML = number_format((pouchesPerBatch * pouchesFishGmsPerPouch),2,'.','');
	
	var pouchesFishKgInPouchPerBatch = parseFloat(document.getElementById("pouchesFishKgInPouchPerBatch").innerHTML);
	
	document.getElementById("pouchesGravyGmsPerPouch").innerHTML = number_format((pouchesProductGmsPerPouch-pouchesFishGmsPerPouch),3,'.','');

	var pouchesGravyGmsPerPouch = parseFloat(document.getElementById("pouchesGravyGmsPerPouch").innerHTML);
	
	document.getElementById("pouchesGravyKgInPouchPerBatch").innerHTML = number_format((pouchesPerBatch*pouchesGravyGmsPerPouch),2,'.','');

	var pouchesGravyKgInPouchPerBatch = parseFloat(document.getElementById("pouchesGravyKgInPouchPerBatch").innerHTML);

	calcPouchesProductKgInPouchPerBatch = parseFloat(pouchesFishKgInPouchPerBatch)+parseFloat(pouchesGravyKgInPouchPerBatch);
	if (!isNaN(calcPouchesProductKgInPouchPerBatch)) {
		document.getElementById("pouchesProductKgInPouchPerBatch").innerHTML= number_format((calcPouchesProductKgInPouchPerBatch),2,'.','');
	}


	var itemCount = document.getElementById("hidItemCount").value;
	var fishKgInPouchPerBatch = document.getElementById("fishKgInPouchPerBatch").value;
	var gravyKgInPouchPerBatch = document.getElementById("gravyKgInPouchPerBatch").value;

	var ingPouchesRatePerkg = 0;
	var ingPouchesWtPerBatch = 0;

	var pouchesFishKgPerBatch = 0;
	var pouchesGravyKgPerBatch = 0;
	var pouchesFishRatePerBatch = 0;
	var pouchesGravyRatePerBatch = 0;
	var calcPouchesFishPercentageYield = 0;
	var calcPouchesGravyPercentageYield = 0;
	for (i=1; i<=itemCount; i++) {
		var fixedQtyChk = document.getElementById("fixedQtyChk_"+i).value;	
		//var fixedQty 		= document.getElementById("fixedQty_"+i).value;
		var quantity 		= document.getElementById("quantity_"+i).value;
		var ratePerBatch	= parseFloat(document.getElementById("ratePerBatch_"+i).value);
		
		if (fixedQtyChk=='Y') {
			document.getElementById("pouchesKgPerBatch_"+i).innerHTML = number_format(Math.abs(((quantity/fishKgInPouchPerBatch)*pouchesFishKgInPouchPerBatch)),2,'.','');
			pouchesFishKgPerBatch += parseFloat(document.getElementById("pouchesKgPerBatch_"+i).innerHTML);
			
		} else {
			document.getElementById("pouchesKgPerBatch_"+i).innerHTML = number_format(Math.abs(((quantity/gravyKgInPouchPerBatch)*pouchesGravyKgInPouchPerBatch)),2,'.','');
			pouchesGravyKgPerBatch += parseFloat(document.getElementById("pouchesKgPerBatch_"+i).innerHTML);
		}
		//alert(pouchesGravyKgPerBatch);

		var pouchesKgPerBatch = parseFloat(document.getElementById("pouchesKgPerBatch_"+i).innerHTML);

		ingPouchesRatePerkg = ((ratePerBatch/quantity)*(pouchesKgPerBatch/pouchesPerBatch));
		//alert(ingPouchesRatePerkg);
		if (!isNaN(ingPouchesRatePerkg)) {
			document.getElementById("pouchesRatePerBatch_"+i).innerHTML = number_format((ingPouchesRatePerkg),2,'.','');
		}		
		//alert(document.getElementById("pouchesRatePerBatch_"+i).innerHTML);
		//Rs. Per Batch
		if (fixedQtyChk=='Y') {
			pouchesFishRatePerBatch += parseFloat(document.getElementById("pouchesRatePerBatch_"+i).innerHTML);
		} else {
			pouchesGravyRatePerBatch += parseFloat(document.getElementById("pouchesRatePerBatch_"+i).innerHTML);
		}


		ingPouchesWtPerBatch = parseFloat(pouchesKgPerBatch/(pouchesPerBatch*pouchesProductGmsPerPouch));
		if (!isNaN(ingPouchesWtPerBatch)) {
			document.getElementById("pouchesWtPerBatch_"+i).innerHTML = number_format((ingPouchesWtPerBatch*100),2,'.','');
		}
		
	}

	//For Pouches Kg (Raw) per Batch
		document.getElementById("pouchesFishKgPerBatch").innerHTML = number_format(Math.abs(pouchesFishKgPerBatch),2,'.','');
		document.getElementById("pouchesGravyKgPerBatch").innerHTML = number_format(Math.abs(pouchesGravyKgPerBatch),2,'.','');
		calcPouchesProductKgPerbatch = eval(parseFloat(document.getElementById("pouchesFishKgPerBatch").innerHTML))+eval(parseFloat(document.getElementById("pouchesGravyKgPerBatch").innerHTML));
		if (!isNaN(calcPouchesProductKgPerbatch)) {
			document.getElementById("pouchesProductKgPerbatch").innerHTML = number_format(Math.abs(parseFloat(calcPouchesProductKgPerbatch)),2,'.','');
		}

		//For Pouches % (Raw) per Batch
		calcPouchesFishRawPercentagePerPouch = (eval(parseFloat(document.getElementById("pouchesFishKgPerBatch").innerHTML))/eval(parseFloat(document.getElementById("pouchesProductKgPerbatch").innerHTML)))*100;
		document.getElementById("pouchesFishRawPercentagePerPouch").innerHTML = number_format(Math.abs(calcPouchesFishRawPercentagePerPouch),0,'','');
		calcPouchesGravyRawPercentagePerPouch = (parseFloat(document.getElementById("pouchesGravyKgPerBatch").innerHTML)/parseFloat(document.getElementById("pouchesProductKgPerbatch").innerHTML))*100;
		document.getElementById("pouchesGravyRawPercentagePerPouch").innerHTML = number_format(Math.abs(calcPouchesGravyRawPercentagePerPouch),0,'','');

		totalPouchesProductRawPercentagePerPouch = eval( parseFloat(calcPouchesFishRawPercentagePerPouch))+eval(parseFloat(calcPouchesGravyRawPercentagePerPouch));

		if (!isNaN(totalPouchesProductRawPercentagePerPouch)) {
			document.getElementById("pouchesProductRawPercentagePerPouch").innerHTML = number_format(Math.abs(totalPouchesProductRawPercentagePerPouch),0,'','');
		}

		//Rs. Per Batch
		document.getElementById("pouchesFishRatePerBatch").innerHTML = number_format(Math.abs(parseFloat(pouchesFishRatePerBatch*pouchesPerBatch)),2,'.','');

		document.getElementById("pouchesGravyRatePerBatch").innerHTML = number_format(Math.abs(parseFloat(pouchesGravyRatePerBatch*pouchesPerBatch)),2,'.','');
		//alert(pouchesFishRatePerBatch+"*"+pouchesPerBatch);
		calcPouchesProductRatePerBatch = parseFloat(document.getElementById("pouchesFishRatePerBatch").innerHTML) + parseFloat(document.getElementById("pouchesGravyRatePerBatch").innerHTML);
		if (!isNaN(calcPouchesProductRatePerBatch)) {
			document.getElementById("pouchesProductRatePerBatch").innerHTML = number_format(Math.abs(calcPouchesProductRatePerBatch),2,'.','');
		}
		//-----------------------------
	//Rs. Per Kg per Batch
	calcPouchesFishRatePerKgPerbatch = parseFloat(document.getElementById("pouchesFishRatePerBatch").innerHTML)/parseFloat(document.getElementById("pouchesFishKgInPouchPerBatch").innerHTML);
	if (!isNaN(calcPouchesFishRatePerKgPerbatch)) {
		document.getElementById("pouchesFishRatePerKgPerbatch").innerHTML = number_format(Math.abs(calcPouchesFishRatePerKgPerbatch),2,'.','');
	}

	calcPouchesGravyRatePerKgPerbatch = parseFloat(document.getElementById("pouchesGravyRatePerBatch").innerHTML)/parseFloat(document.getElementById("pouchesGravyKgInPouchPerBatch").innerHTML);
	if (!isNaN(calcPouchesGravyRatePerKgPerbatch)) {
		document.getElementById("pouchesGravyRatePerKgPerbatch").innerHTML = number_format(Math.abs(calcPouchesGravyRatePerKgPerbatch),2,'.','');
	}

	calcPouchesProductRatePerKgPerbatch = parseFloat(document.getElementById("pouchesFishRatePerKgPerbatch").innerHTML) + parseFloat(document.getElementById("pouchesGravyRatePerKgPerbatch").innerHTML);
	if (!isNaN(calcPouchesProductRatePerKgPerbatch)) {
		document.getElementById("pouchesProductRatePerKgPerbatch").innerHTML = number_format(Math.abs(calcPouchesProductRatePerKgPerbatch),2,'.','');
	}
	
	//% per Pouch
	document.getElementById("pouchesFishPercentagePerPouch").innerHTML = number_format((((pouchesFishGmsPerPouch/pouchesProductGmsPerPouch)*100)),0,'','');

	document.getElementById("pouchesGravyPercentagePerPouch").innerHTML  =
	number_format((((pouchesGravyGmsPerPouch/pouchesProductGmsPerPouch)*100)),0,'','');

	calcPouchesProductPercentagePerPouch = parseFloat(document.getElementById("pouchesFishPercentagePerPouch").innerHTML)+parseFloat(document.getElementById("pouchesGravyPercentagePerPouch").innerHTML);
	if (!isNaN(calcPouchesProductPercentagePerPouch)) {
		document.getElementById("pouchesProductPercentagePerPouch").innerHTML  = number_format((calcPouchesProductPercentagePerPouch),0,'','');
	}

	//Rs. Per Pouch
	multiPlyPouchesFishRatePerPouch = parseFloat(document.getElementById("pouchesFishRatePerKgPerbatch").innerHTML) * pouchesFishGmsPerPouch;
	if (!isNaN(multiPlyPouchesFishRatePerPouch)) {
		document.getElementById("pouchesFishRatePerPouch").innerHTML  = number_format((multiPlyPouchesFishRatePerPouch),2,'.','');
	}
	multiPlyPouchesGravyRatePerPouch = parseFloat(document.getElementById("pouchesGravyRatePerKgPerbatch").innerHTML) * pouchesGravyGmsPerPouch;
	if (!isNaN(multiPlyPouchesGravyRatePerPouch)) {
		document.getElementById("pouchesGravyRatePerPouch").innerHTML = number_format((multiPlyPouchesGravyRatePerPouch),2,'.','');
	}
	
	calcPouchesProductRatePerPouch = parseFloat(document.getElementById("pouchesProductRatePerBatch").innerHTML)/pouchesPerBatch;

	if (!isNaN(calcPouchesProductRatePerPouch)) {
		document.getElementById("pouchesProductRatePerPouch").innerHTML = number_format((calcPouchesProductRatePerPouch),2,'.','');
	}

	//% Yield
	calcPouchesFishPercentageYield = parseFloat(document.getElementById("pouchesFishKgInPouchPerBatch").innerHTML)/parseFloat(document.getElementById("pouchesFishKgPerBatch").innerHTML);
	if (!isNaN(calcPouchesFishPercentageYield)) {
		document.getElementById("pouchesFishPercentageYield").innerHTML  = number_format((calcPouchesFishPercentageYield*100),0,'.','');
	}

	calcPouchesGravyPercentageYield = parseFloat(document.getElementById("pouchesGravyKgInPouchPerBatch").innerHTML)/parseFloat(document.getElementById("pouchesGravyKgPerBatch").innerHTML);

	if (!isNaN(calcPouchesGravyPercentageYield)) {
		document.getElementById("pouchesGravyPercentageYield").innerHTML  = number_format((calcPouchesGravyPercentageYield*100),0,'.','');
	}
}


//For Fish/ Fixed Calculation
function calcProductBatchForFish()
{
	// Gms per Pouch
	var productGmsPerPouchForFish = parseFloat(document.getElementById("productGmsPerPouchForFish").value);
	var fishGmsPerPouchForFish  = parseFloat(document.getElementById("fishGmsPerPouchForFish").value);
	calcGravyGmsPerPouchOfFish = productGmsPerPouchForFish-fishGmsPerPouchForFish;
	if (!isNaN(calcGravyGmsPerPouchOfFish)) {
		document.getElementById("gravyGmsPerPouchForFish").innerHTML = number_format((calcGravyGmsPerPouchOfFish),3,'.','');
		var gravyGmsPerPouchForFish = parseFloat(document.getElementById("gravyGmsPerPouchForFish").innerHTML);
	}
	//Kg (in Pouch) per Batch
	var fishKgInPouchPerBatchForFish = parseFloat(document.getElementById("fishKgInPouchPerBatchForFish").value);

	//Pouches per Batch
	var calcPouchPerBatchForFish = fishKgInPouchPerBatchForFish/fishGmsPerPouchForFish;
	if (!isNaN(calcPouchPerBatchForFish)) {
		document.getElementById("pouchPerBatchForFish").innerHTML = number_format((calcPouchPerBatchForFish),0,'','');
		var pouchPerBatchForFish = eval(document.getElementById("pouchPerBatchForFish").innerHTML);
	}
	//Kg (in Pouch) per Batch
	var calcGravyKgInPouchPerBatchForFish = parseFloat(document.getElementById("pouchPerBatchForFish").innerHTML)*parseFloat(document.getElementById("gravyGmsPerPouchForFish").innerHTML);
	if (!isNaN(calcGravyKgInPouchPerBatchForFish)) {
		document.getElementById("gravyKgInPouchPerBatchForFish").innerHTML = number_format((calcGravyKgInPouchPerBatchForFish),2,'.','');

		var gravyKgInPouchPerBatchForFish = parseFloat(document.getElementById("gravyKgInPouchPerBatchForFish").innerHTML);
	}
	

	var calcProductKgInPouchPerBatchForFish = fishKgInPouchPerBatchForFish + parseFloat(document.getElementById("gravyKgInPouchPerBatchForFish").innerHTML);
	if (!isNaN(calcProductKgInPouchPerBatchForFish)) {
		document.getElementById("productKgInPouchPerBatchForFish").innerHTML = number_format((calcProductKgInPouchPerBatchForFish),2,'.','');
	}

	var itemCount = document.getElementById("hidItemCount").value;
	var fishKgInPouchPerBatch = document.getElementById("fishKgInPouchPerBatch").value;
	var gravyKgInPouchPerBatch = document.getElementById("gravyKgInPouchPerBatch").value;

	var ingRatePerkgForFish = 0;
	var ingWtPerBatchForFish = 0;

	var fishKgPerBatchForFish = 0;
	var gravyKgPerBatchForFish = 0;
	var fishRatePerBatchForFish = 0;
	var gravyRatePerBatchForFish = 0;
	var calcFishPercentageYieldForFish = 0;
	var calcGravyPercentageYieldForFish = 0;

	for (i=1; i<=itemCount; i++) {
		var fixedQtyChk = document.getElementById("fixedQtyChk_"+i).value;	
		//var fixedQty 		= document.getElementById("fixedQty_"+i).value;		
		var quantity 		= document.getElementById("quantity_"+i).value;
		var ratePerBatch	= parseFloat(document.getElementById("ratePerBatch_"+i).value);
		
		if (fixedQtyChk=='Y') {
			document.getElementById("kgPerBatchForFish_"+i).innerHTML = number_format(Math.abs(((quantity/fishKgInPouchPerBatch)*fishKgInPouchPerBatchForFish)),2,'.','');
			fishKgPerBatchForFish += parseFloat(document.getElementById("kgPerBatchForFish_"+i).innerHTML);
			
		} else {
			document.getElementById("kgPerBatchForFish_"+i).innerHTML = number_format(Math.abs(((quantity/gravyKgInPouchPerBatch)*gravyKgInPouchPerBatchForFish)),2,'.','');
			gravyKgPerBatchForFish += parseFloat(document.getElementById("kgPerBatchForFish_"+i).innerHTML);
		}

		var kgPerBatchForFish = parseFloat(document.getElementById("kgPerBatchForFish_"+i).innerHTML);

		ingRatePerkgForFish = ((ratePerBatch/quantity)*kgPerBatchForFish/pouchPerBatchForFish);
		if (!isNaN(ingRatePerkgForFish)) {
			document.getElementById("ratePerBatchForFish_"+i).innerHTML = number_format((ingRatePerkgForFish),2,'.','');
		}

		//Rs. Per Batch
		if (fixedQtyChk=='Y') {
			fishRatePerBatchForFish += parseFloat(document.getElementById("ratePerBatchForFish_"+i).innerHTML);
		} else {
			gravyRatePerBatchForFish += parseFloat(document.getElementById("ratePerBatchForFish_"+i).innerHTML);
		}

		ingWtPerBatchForFish = (kgPerBatchForFish/(pouchPerBatchForFish*productGmsPerPouchForFish));
		if (!isNaN(ingWtPerBatchForFish)) {
			document.getElementById("wtPerBatchForFish_"+i).innerHTML = number_format((ingWtPerBatchForFish*100),2,'.','');
		}
	}

	//Kg (Raw) per Batch
		if (!isNaN(fishKgPerBatchForFish)) {
			document.getElementById("fishKgPerBatchForFish").innerHTML = number_format((fishKgPerBatchForFish),2,'.','');
		}
		if (!isNaN(gravyKgPerBatchForFish)) {
			document.getElementById("gravyKgPerBatchForFish").innerHTML = number_format((gravyKgPerBatchForFish),2,'.','');
		}
	
		calcProductKgPerBatchForFish = parseFloat(document.getElementById("fishKgPerBatchForFish").innerHTML)+parseFloat(document.getElementById("gravyKgPerBatchForFish").innerHTML);
	
		if (!isNaN(calcProductKgPerBatchForFish)) {
			document.getElementById("productKgPerBatchForFish").innerHTML = number_format((calcProductKgPerBatchForFish),2,'.','');
		}

		//For Pouches % (Raw) per Batch
		calcFishRawPercentagePerBatchForFish = (parseFloat(document.getElementById("fishKgPerBatchForFish").innerHTML)/parseFloat(document.getElementById("productKgPerBatchForFish").innerHTML))*100;

		if (!isNaN(calcFishRawPercentagePerBatchForFish)) {
			document.getElementById("fishRawPercentagePerBatchForFish").innerHTML = number_format(Math.abs(calcFishRawPercentagePerBatchForFish),0,'','');
		}

		calcGravyRawPercentagePerBatchForFish = (parseFloat(document.getElementById("gravyKgPerBatchForFish").innerHTML)/parseFloat(document.getElementById("productKgPerBatchForFish").innerHTML))*100;

		if (!isNaN(calcGravyRawPercentagePerBatchForFish)) {
			document.getElementById("gravyRawPercentagePerBatchForFish").innerHTML = number_format(Math.abs(calcGravyRawPercentagePerBatchForFish),0,'','');
		}

		calcProductRawPercentagePerBatchForFish = (calcFishRawPercentagePerBatchForFish+calcGravyRawPercentagePerBatchForFish);

		if (!isNaN(calcProductRawPercentagePerBatchForFish)) {
			document.getElementById("productRawPercentagePerBatchForFish").innerHTML = number_format(Math.abs(calcProductRawPercentagePerBatchForFish),0,'','');
		}

		// Rs. Per Batch
		calcFishRatePerBatchForFish = (fishRatePerBatchForFish*pouchPerBatchForFish);
		if (!isNaN(calcFishRatePerBatchForFish)) {
			document.getElementById("fishRatePerBatchForFish").innerHTML = number_format((calcFishRatePerBatchForFish),2,'.','');
		}
		calcGravyRatePerBatchForFish = (gravyRatePerBatchForFish*pouchPerBatchForFish);
		if (!isNaN(calcGravyRatePerBatchForFish)) {
			document.getElementById("gravyRatePerBatchForFish").innerHTML = number_format((calcGravyRatePerBatchForFish),2,'.','');
		}

		calcProductRatePerBatchForFish = parseFloat(document.getElementById("fishRatePerBatchForFish").innerHTML) + parseFloat(document.getElementById("gravyRatePerBatchForFish").innerHTML);
		if (!isNaN(calcProductRatePerBatchForFish)) {
			document.getElementById("productRatePerBatchForFish").innerHTML = number_format((calcProductRatePerBatchForFish),2,'.','');
		}

	//Rs. Per Kg per Batch
	calcFishRatePerKgPerBatchForFish = (parseFloat(document.getElementById("fishRatePerBatchForFish").innerHTML)/fishKgInPouchPerBatchForFish);
	if (!isNaN(calcFishRatePerKgPerBatchForFish)) {
		document.getElementById("fishRatePerKgPerBatchForFish").innerHTML = number_format(Math.abs(calcFishRatePerKgPerBatchForFish),2,'.','');
	}

	calcGravyRatePerKgPerBatchForFish = parseFloat(document.getElementById("gravyRatePerBatchForFish").innerHTML)/parseFloat(document.getElementById("gravyKgInPouchPerBatchForFish").innerHTML);
	if (!isNaN(calcGravyRatePerKgPerBatchForFish)) {
		document.getElementById("gravyRatePerKgPerBatchForFish").innerHTML = number_format(Math.abs(calcGravyRatePerKgPerBatchForFish),2,'.','');
	}

	calcProductRatePerKgPerBatchForFish = parseFloat(document.getElementById("fishRatePerKgPerBatchForFish").innerHTML) + parseFloat(document.getElementById("gravyRatePerKgPerBatchForFish").innerHTML);
	if (!isNaN(calcProductRatePerKgPerBatchForFish)) {
		document.getElementById("productRatePerKgPerBatchForFish").innerHTML = number_format(Math.abs(calcProductRatePerKgPerBatchForFish),2,'.','');
	}
	

	//% per Pouch
	calcFishPercentagePerPouchForFish = ((fishGmsPerPouchForFish/productGmsPerPouchForFish)*100);
	if (!isNaN(calcFishPercentagePerPouchForFish)) {
		document.getElementById("fishPercentagePerPouchForFish").innerHTML = number_format(Math.abs(calcFishPercentagePerPouchForFish),0,'','');
	}

	calcGravyPercentagePerPouchForFish = ((gravyGmsPerPouchForFish/productGmsPerPouchForFish)*100);
	if (!isNaN(calcGravyPercentagePerPouchForFish)) {
		document.getElementById("gravyPercentagePerPouchForFish").innerHTML = number_format(Math.abs(calcGravyPercentagePerPouchForFish),0,'','');
	}

	calcProductPercentagePerPouchForFish = parseFloat(document.getElementById("fishPercentagePerPouchForFish").innerHTML)+parseFloat(document.getElementById("gravyPercentagePerPouchForFish").innerHTML);
	if (!isNaN(calcProductPercentagePerPouchForFish)) {
		document.getElementById("productPercentagePerPouchForFish").innerHTML  = number_format(Math.abs(calcProductPercentagePerPouchForFish),0,'','');
	}


	// Rs. Per Pouch
	multiPlyFishRatePerPouchForFish = parseFloat(document.getElementById("fishRatePerKgPerBatchForFish").innerHTML) * fishGmsPerPouchForFish;
	if (!isNaN(multiPlyFishRatePerPouchForFish)) {
		document.getElementById("fishRatePerPouchForFish").innerHTML  = number_format(Math.abs(multiPlyFishRatePerPouchForFish),2,'.','');
	}
	multiPlyGravyRatePerPouchForFish = parseFloat(document.getElementById("gravyRatePerKgPerBatchForFish").innerHTML) * gravyGmsPerPouchForFish;

	if (!isNaN(multiPlyGravyRatePerPouchForFish)) {
		document.getElementById("gravyRatePerPouchForFish").innerHTML = number_format(Math.abs(multiPlyGravyRatePerPouchForFish),2,'.','');
	}
	calcProductRatePerPouchForFish = parseFloat(document.getElementById("productRatePerBatchForFish").innerHTML)/pouchPerBatchForFish;

	if (!isNaN(calcProductRatePerPouchForFish)) {
		document.getElementById("productRatePerPouchForFish").innerHTML = number_format(Math.abs(calcProductRatePerPouchForFish),2,'.','');
	}

	//% Yield 
	calcFishPercentageYieldForFish = (fishKgInPouchPerBatchForFish/parseFloat(document.getElementById("fishKgPerBatchForFish").innerHTML));
	if (!isNaN(calcFishPercentageYieldForFish)) {
		document.getElementById("fishPercentageYieldForFish").innerHTML  = number_format((calcFishPercentageYieldForFish*100),0,'','');
	}

	calcGravyPercentageYieldForFish = ( parseFloat(document.getElementById("gravyKgInPouchPerBatchForFish").innerHTML)/parseFloat(document.getElementById("gravyKgPerBatchForFish").innerHTML));

	if (!isNaN(calcGravyPercentageYieldForFish)) {
		document.getElementById("gravyPercentageYieldForFish").innerHTML  = number_format((calcGravyPercentageYieldForFish*100),0,'','');
	}
}function calculateProductForPouch()
{
	var pouchesProductGmsPerPouch 	= parseFloat(document.getElementById("pouchesProductGmsPerPouch").value);	
	var pouchesFishGmsPerPouch 	= parseFloat(document.getElementById("pouchesFishGmsPerPouch").value);
	//Total Pouch
	var pouchesPerBatch		= document.getElementById("pouchesPerBatch").value;
	var pouchesFishKgInPouchPerBatch = parseFloat(document.getElementById("pouchesFishKgInPouchPerBatch").innerHTML);

	document.getElementById("pouchesFishKgInPouchPerBatch").innerHTML = formatNumber(Math.abs(pouchesPerBatch * pouchesFishGmsPerPouch),2,'','.','','','','','');;
	var pouchesFishKgInPouchPerBatch = parseFloat(document.getElementById("pouchesFishKgInPouchPerBatch").innerHTML);

	document.getElementById("pouchesGravyGmsPerPouch").innerHTML = formatNumber(Math.abs(pouchesProductGmsPerPouch-pouchesFishGmsPerPouch),3,'','.','','','','','');

	var pouchesGravyGmsPerPouch = parseFloat(document.getElementById("pouchesGravyGmsPerPouch").innerHTML);
	
	document.getElementById("pouchesGravyKgInPouchPerBatch").innerHTML = number_format(Math.abs(pouchesPerBatch*pouchesGravyGmsPerPouch),2,'.','');

	var pouchesGravyKgInPouchPerBatch = parseFloat(document.getElementById("pouchesGravyKgInPouchPerBatch").innerHTML);

	calcPouchesProductKgInPouchPerBatch = parseFloat(pouchesFishKgInPouchPerBatch)+parseFloat(pouchesGravyKgInPouchPerBatch);
	if (!isNaN(calcPouchesProductKgInPouchPerBatch)) {
		document.getElementById("pouchesProductKgInPouchPerBatch").innerHTML= number_format(Math.floor(calcPouchesProductKgInPouchPerBatch),0,'.','');
	}



	var itemCount = document.getElementById("hidItemCount").value;
	var fishKgInPouchPerBatch = document.getElementById("fishKgInPouchPerBatch").value;
	var gravyKgInPouchPerBatch = document.getElementById("gravyKgInPouchPerBatch").value;

	var ingPouchesRatePerkg = 0;
	var ingPouchesWtPerBatch = 0;

	var pouchesFishKgPerBatch = 0;
	var pouchesGravyKgPerBatch = 0;
	var pouchesFishRatePerBatch = 0;
	var pouchesGravyRatePerBatch = 0;
	for (i=1; i<=itemCount; i++) {
		//var ingType 		= document.getElementById("ingType_"+i).value;
		var fixedQty 		= document.getElementById("fixedQty_"+i).value;
		var quantity 		= document.getElementById("quantity_"+i).value;
		var ratePerBatch	= parseFloat(document.getElementById("ratePerBatch_"+i).value);
		
		if (fixedQty=='Y') {
			document.getElementById("pouchesKgPerBatch_"+i).innerHTML = number_format(Math.abs(((quantity/fishKgInPouchPerBatch)*pouchesFishKgInPouchPerBatch)),2,'.','');
			pouchesFishKgPerBatch += document.getElementById("pouchesKgPerBatch_"+i).innerHTML;
			
		} else if (fixedQty=='N') {
			document.getElementById("pouchesKgPerBatch_"+i).innerHTML = number_format(Math.abs(((quantity/gravyKgInPouchPerBatch)*pouchesGravyKgInPouchPerBatch)),2,'.','');
			pouchesGravyKgPerBatch += document.getElementById("pouchesKgPerBatch_"+i).innerHTML;
		}


		var pouchesKgPerBatch = parseFloat(document.getElementById("pouchesKgPerBatch_"+i).innerHTML);

		ingPouchesRatePerkg = ((ratePerBatch/quantity)*(pouchesKgPerBatch/pouchesPerBatch));
		//alert(ingPouchesRatePerkg);
		if (!isNaN(ingPouchesRatePerkg)) {
			document.getElementById("pouchesRatePerBatch_"+i).innerHTML = number_format(Math.abs(ingPouchesRatePerkg),3,'.','');
		}

		//alert(document.getElementById("pouchesRatePerBatch_"+i).innerHTML);
		//Rs. Per Batch
		if (fixedQty=='Y') {
			pouchesFishRatePerBatch += parseFloat(document.getElementById("pouchesRatePerBatch_"+i).innerHTML);
		} else if (fixedQty=='N') {
			pouchesGravyRatePerBatch += parseFloat(document.getElementById("pouchesRatePerBatch_"+i).innerHTML);
		}


		ingPouchesWtPerBatch = parseFloat(pouchesKgPerBatch/(pouchesPerBatch*pouchesProductGmsPerPouch));
		if (!isNaN(ingPouchesWtPerBatch)) {
			document.getElementById("pouchesWtPerBatch_"+i).innerHTML = number_format(Math.abs(ingPouchesWtPerBatch),2,'.','');
		}
		
	}

	//For Pouches Kg (Raw) per Batch
		document.getElementById("pouchesFishKgPerBatch").innerHTML = number_format(Math.abs(pouchesFishKgPerBatch),2,'.','');
		document.getElementById("pouchesGravyKgPerBatch").innerHTML = number_format(Math.abs(pouchesGravyKgPerBatch),2,'.','');
		calcPouchesProductKgPerbatch = eval(parseFloat(document.getElementById("pouchesFishKgPerBatch").innerHTML))+eval(parseFloat(document.getElementById("pouchesGravyKgPerBatch").innerHTML));
		if (!isNaN(calcPouchesProductKgPerbatch)) {
			document.getElementById("pouchesProductKgPerbatch").innerHTML = number_format(Math.abs(parseFloat(calcPouchesProductKgPerbatch)),2,'.','');
		}

		//For Pouches % (Raw) per Batch
		calcPouchesFishRawPercentagePerPouch = (eval(parseFloat(document.getElementById("pouchesFishKgPerBatch").innerHTML))/eval(parseFloat(document.getElementById("pouchesProductKgPerbatch").innerHTML)))*100;
		document.getElementById("pouchesFishRawPercentagePerPouch").innerHTML = number_format(Math.abs(calcPouchesFishRawPercentagePerPouch),0,'','');
		calcPouchesGravyRawPercentagePerPouch = (parseFloat(document.getElementById("pouchesGravyKgPerBatch").innerHTML)/parseFloat(document.getElementById("pouchesProductKgPerbatch").innerHTML))*100;
		document.getElementById("pouchesGravyRawPercentagePerPouch").innerHTML = number_format(Math.abs(calcPouchesGravyRawPercentagePerPouch),0,'','');

		totalPouchesProductRawPercentagePerPouch = eval( parseFloat(calcPouchesFishRawPercentagePerPouch))+eval(parseFloat(calcPouchesGravyRawPercentagePerPouch));

		if (!isNaN(totalPouchesProductRawPercentagePerPouch)) {
			document.getElementById("pouchesProductRawPercentagePerPouch").innerHTML = number_format(Math.abs(totalPouchesProductRawPercentagePerPouch),0,'','');
		}

		//Rs. Per Batch
		document.getElementById("pouchesFishRatePerBatch").innerHTML = number_format(Math.abs(parseFloat(pouchesFishRatePerBatch*pouchesPerBatch)),0,'','');

		document.getElementById("pouchesGravyRatePerBatch").innerHTML = number_format(Math.abs(parseFloat(pouchesGravyRatePerBatch*pouchesPerBatch)),0,'','');
		//alert(pouchesFishRatePerBatch+"*"+pouchesPerBatch);
		calcPouchesProductRatePerBatch = parseFloat(document.getElementById("pouchesFishRatePerBatch").innerHTML) + parseFloat(document.getElementById("pouchesGravyRatePerBatch").innerHTML);
		if (!isNaN(calcPouchesProductRatePerBatch)) {
			document.getElementById("pouchesProductRatePerBatch").innerHTML = number_format(Math.abs(calcPouchesProductRatePerBatch),0,'','');
		}
		//-----------------------------
	//Rs. Per Kg per Batch
	calcPouchesFishRatePerKgPerbatch = parseFloat(document.getElementById("pouchesFishRatePerBatch").innerHTML)/parseFloat(document.getElementById("pouchesFishKgInPouchPerBatch").innerHTML);
	if (!isNaN(calcPouchesFishRatePerKgPerbatch)) {
		document.getElementById("pouchesFishRatePerKgPerbatch").innerHTML = number_format(Math.abs(calcPouchesFishRatePerKgPerbatch),2,'.','');
	}

	calcPouchesGravyRatePerKgPerbatch = parseFloat(document.getElementById("pouchesGravyRatePerBatch").innerHTML)/parseFloat(document.getElementById("pouchesGravyKgInPouchPerBatch").innerHTML);
	if (!isNaN(calcPouchesGravyRatePerKgPerbatch)) {
		document.getElementById("pouchesGravyRatePerKgPerbatch").innerHTML = number_format(Math.abs(calcPouchesGravyRatePerKgPerbatch),2,'.','');
	}

	calcPouchesProductRatePerKgPerbatch = parseFloat(document.getElementById("pouchesFishRatePerKgPerbatch").innerHTML) + parseFloat(document.getElementById("pouchesGravyRatePerKgPerbatch").innerHTML);
	if (!isNaN(calcPouchesProductRatePerKgPerbatch)) {
		document.getElementById("pouchesProductRatePerKgPerbatch").innerHTML = number_format(Math.abs(calcPouchesProductRatePerKgPerbatch),2,'.','');
	}
	
	//% per Pouch
	document.getElementById("pouchesFishPercentagePerPouch").innerHTML = number_format(Math.abs(((pouchesFishGmsPerPouch/pouchesProductGmsPerPouch)*100)),0,'','');

	document.getElementById("pouchesGravyPercentagePerPouch").innerHTML  =
	number_format(Math.abs(((pouchesGravyGmsPerPouch/pouchesProductGmsPerPouch)*100)),0,'','');

	calcPouchesProductPercentagePerPouch = parseFloat(document.getElementById("pouchesFishPercentagePerPouch").innerHTML)+parseFloat(document.getElementById("pouchesGravyPercentagePerPouch").innerHTML);
	if (!isNaN(calcPouchesProductPercentagePerPouch)) {
		document.getElementById("pouchesProductPercentagePerPouch").innerHTML  = number_format(Math.abs(calcPouchesProductPercentagePerPouch),0,'','');
	}

	//Rs. Per Pouch
	multiPlyPouchesFishRatePerPouch = parseFloat(document.getElementById("pouchesFishRatePerKgPerbatch").innerHTML) * pouchesFishGmsPerPouch;
	if (!isNaN(multiPlyPouchesFishRatePerPouch)) {
		document.getElementById("pouchesFishRatePerPouch").innerHTML  = number_format(Math.abs(multiPlyPouchesFishRatePerPouch),2,'.','');
	}
	multiPlyPouchesGravyRatePerPouch = parseFloat(document.getElementById("pouchesGravyRatePerKgPerbatch").innerHTML) * pouchesGravyGmsPerPouch;
	if (!isNaN(multiPlyPouchesGravyRatePerPouch)) {
		document.getElementById("pouchesGravyRatePerPouch").innerHTML = number_format(Math.abs(multiPlyPouchesGravyRatePerPouch),2,'.','');
	}
	
	calcPouchesProductRatePerPouch = parseFloat(document.getElementById("pouchesProductRatePerBatch").innerHTML)/pouchesPerBatch;

	if (!isNaN(calcPouchesProductRatePerPouch)) {
		document.getElementById("pouchesProductRatePerPouch").innerHTML = number_format(Math.abs(calcPouchesProductRatePerPouch),2,'.','');
	}

	//% Yield
	calcPouchesFishPercentageYield = parseFloat(document.getElementById("pouchesFishKgInPouchPerBatch").innerHTML)/parseFloat(document.getElementById("pouchesFishKgPerBatch").innerHTML);
	if (!isNaN(calcPouchesFishPercentageYield)) {
		document.getElementById("pouchesFishPercentageYield").innerHTML  = number_format(Math.abs(calcPouchesFishPercentageYield),0,'.','');
	}

	calcPouchesGravyPercentageYield = parseFloat(document.getElementById("pouchesGravyKgInPouchPerBatch").innerHTML)/parseFloat(document.getElementById("pouchesGravyKgPerBatch").innerHTML);

	if (!isNaN(calcPouchesGravyPercentageYield)) {
		document.getElementById("pouchesGravyPercentageYield").innerHTML  = number_format(Math.abs(calcPouchesGravyPercentageYield),0,'.','');
	}
}




//For Fish Calculation
function calculateProductForFish()
{
	// Gms per Pouch
	var productGmsPerPouchForFish = parseFloat(document.getElementById("productGmsPerPouchForFish").value);
	var fishGmsPerPouchForFish  = parseFloat(document.getElementById("fishGmsPerPouchForFish").value);
	calcGravyGmsPerPouchOfFish = productGmsPerPouchForFish-fishGmsPerPouchForFish;
	if (!isNaN(calcGravyGmsPerPouchOfFish)) {
		document.getElementById("gravyGmsPerPouchForFish").innerHTML = number_format(Math.abs(calcGravyGmsPerPouchOfFish),3,'.','');
		var gravyGmsPerPouchForFish = parseFloat(document.getElementById("gravyGmsPerPouchForFish").innerHTML);
	}
	//Kg (in Pouch) per Batch
	var fishKgInPouchPerBatchForFish = parseFloat(document.getElementById("fishKgInPouchPerBatchForFish").value);

	//Pouches per Batch
	var calcPouchPerBatchForFish = fishKgInPouchPerBatchForFish/fishGmsPerPouchForFish;
	if (!isNaN(calcPouchPerBatchForFish)) {
		document.getElementById("pouchPerBatchForFish").innerHTML = number_format(Math.abs(calcPouchPerBatchForFish),0,'','');
		var pouchPerBatchForFish = eval(document.getElementById("pouchPerBatchForFish").innerHTML);
	}
	//Kg (in Pouch) per Batch
	var calcGravyKgInPouchPerBatchForFish = parseFloat(document.getElementById("pouchPerBatchForFish").innerHTML)*parseFloat(document.getElementById("gravyGmsPerPouchForFish").innerHTML);
	if (!isNaN(calcGravyKgInPouchPerBatchForFish)) {
		document.getElementById("gravyKgInPouchPerBatchForFish").innerHTML = number_format(Math.abs(calcGravyKgInPouchPerBatchForFish),2,'.','');

		var gravyKgInPouchPerBatchForFish = parseFloat(document.getElementById("gravyKgInPouchPerBatchForFish").innerHTML);
	}
	

	var calcProductKgInPouchPerBatchForFish = fishKgInPouchPerBatchForFish + parseFloat(document.getElementById("gravyKgInPouchPerBatchForFish").innerHTML);
	if (!isNaN(calcProductKgInPouchPerBatchForFish)) {
		document.getElementById("productKgInPouchPerBatchForFish").innerHTML = number_format(Math.abs(calcProductKgInPouchPerBatchForFish),2,'.','');
	}


	var itemCount = document.getElementById("hidItemCount").value;
	var fishKgInPouchPerBatch = document.getElementById("fishKgInPouchPerBatch").value;
	var gravyKgInPouchPerBatch = document.getElementById("gravyKgInPouchPerBatch").value;

	var ingRatePerkgForFish = 0;
	var ingWtPerBatchForFish = 0;

	var fishKgPerBatchForFish = 0;
	var gravyKgPerBatchForFish = 0;
	var fishRatePerBatchForFish = 0;
	var gravyRatePerBatchForFish = 0;
	for (i=1; i<=itemCount; i++) {
		var fixedQty 		= document.getElementById("fixedQty_"+i).value;
		//var ingType 		= document.getElementById("ingType_"+i).value;
		var quantity 		= document.getElementById("quantity_"+i).value;
		var ratePerBatch	= parseFloat(document.getElementById("ratePerBatch_"+i).value);
		
		if (fixedQty=='Y') {
			document.getElementById("kgPerBatchForFish_"+i).innerHTML = number_format(Math.abs(((quantity/fishKgInPouchPerBatch)*fishKgInPouchPerBatchForFish)),2,'.','');
			fishKgPerBatchForFish += document.getElementById("kgPerBatchForFish_"+i).innerHTML;
			
		} else if (fixedQty=='N') {
			document.getElementById("kgPerBatchForFish_"+i).innerHTML = number_format(Math.abs(((quantity/gravyKgInPouchPerBatch)*gravyKgInPouchPerBatchForFish)),2,'.','');
			gravyKgPerBatchForFish += document.getElementById("kgPerBatchForFish_"+i).innerHTML;
		}

		var kgPerBatchForFish = parseFloat(document.getElementById("kgPerBatchForFish_"+i).innerHTML);

		ingRatePerkgForFish = ((ratePerBatch/quantity)*kgPerBatchForFish/pouchPerBatchForFish);
		if (!isNaN(ingRatePerkgForFish)) {
			document.getElementById("ratePerBatchForFish_"+i).innerHTML = number_format(Math.abs(ingRatePerkgForFish),3,'.','');
		}

		//Rs. Per Batch
		if (fixedQty=='Y') {
			fishRatePerBatchForFish += parseFloat(document.getElementById("ratePerBatchForFish_"+i).innerHTML);
		} else if (fixedQty=='N') {
			gravyRatePerBatchForFish += parseFloat(document.getElementById("ratePerBatchForFish_"+i).innerHTML);
		}


		ingWtPerBatchForFish = (kgPerBatchForFish/(pouchPerBatchForFish*productGmsPerPouchForFish));
		if (!isNaN(ingWtPerBatchForFish)) {
			document.getElementById("wtPerBatchForFish_"+i).innerHTML = number_format(Math.abs(ingWtPerBatchForFish),2,'.','');
		}
	}

	//Kg (Raw) per Batch
		if (!isNaN(fishKgPerBatchForFish)) {
			document.getElementById("fishKgPerBatchForFish").innerHTML = number_format(Math.abs(fishKgPerBatchForFish),2,'.','');
		}
		if (!isNaN(gravyKgPerBatchForFish)) {
			document.getElementById("gravyKgPerBatchForFish").innerHTML = number_format(Math.abs(gravyKgPerBatchForFish),2,'.','');
		}
	
		calcProductKgPerBatchForFish = parseFloat(document.getElementById("fishKgPerBatchForFish").innerHTML)+parseFloat(document.getElementById("gravyKgPerBatchForFish").innerHTML);
	
		if (!isNaN(calcProductKgPerBatchForFish)) {
			document.getElementById("productKgPerBatchForFish").innerHTML = number_format(Math.abs(calcProductKgPerBatchForFish),2,'.','');
		}

		//For Pouches % (Raw) per Batch
		calcFishRawPercentagePerBatchForFish = (parseFloat(document.getElementById("fishKgPerBatchForFish").innerHTML)/parseFloat(document.getElementById("productKgPerBatchForFish").innerHTML))*100;

		if (!isNaN(calcFishRawPercentagePerBatchForFish)) {
			document.getElementById("fishRawPercentagePerBatchForFish").innerHTML = number_format(Math.abs(calcFishRawPercentagePerBatchForFish),0,'','');
		}

		calcGravyRawPercentagePerBatchForFish = (parseFloat(document.getElementById("gravyKgPerBatchForFish").innerHTML)/parseFloat(document.getElementById("productKgPerBatchForFish").innerHTML))*100;

		if (!isNaN(calcGravyRawPercentagePerBatchForFish)) {
			document.getElementById("gravyRawPercentagePerBatchForFish").innerHTML = number_format(Math.abs(calcGravyRawPercentagePerBatchForFish),0,'','');
		}

		calcProductRawPercentagePerBatchForFish = (calcFishRawPercentagePerBatchForFish+calcGravyRawPercentagePerBatchForFish);

		if (!isNaN(calcProductRawPercentagePerBatchForFish)) {
			document.getElementById("productRawPercentagePerBatchForFish").innerHTML = number_format(Math.abs(calcProductRawPercentagePerBatchForFish),0,'','');
		}

		// Rs. Per Batch
		calcFishRatePerBatchForFish = (fishRatePerBatchForFish*pouchPerBatchForFish);
		if (!isNaN(calcFishRatePerBatchForFish)) {
			document.getElementById("fishRatePerBatchForFish").innerHTML = number_format(Math.abs(calcFishRatePerBatchForFish),0,'','');
		}
		calcGravyRatePerBatchForFish = (gravyRatePerBatchForFish*pouchPerBatchForFish);
		if (!isNaN(calcGravyRatePerBatchForFish)) {
			document.getElementById("gravyRatePerBatchForFish").innerHTML = number_format(Math.abs(calcGravyRatePerBatchForFish),0,'','');
		}

		calcProductRatePerBatchForFish = parseFloat(document.getElementById("fishRatePerBatchForFish").innerHTML) + parseFloat(document.getElementById("gravyRatePerBatchForFish").innerHTML);
		if (!isNaN(calcProductRatePerBatchForFish)) {
			document.getElementById("productRatePerBatchForFish").innerHTML = number_format(Math.abs(calcProductRatePerBatchForFish),0,'','');
		}

	//Rs. Per Kg per Batch
	calcFishRatePerKgPerBatchForFish = (parseFloat(document.getElementById("fishRatePerBatchForFish").innerHTML)/fishKgInPouchPerBatchForFish);
	if (!isNaN(calcFishRatePerKgPerBatchForFish)) {
		document.getElementById("fishRatePerKgPerBatchForFish").innerHTML = number_format(Math.abs(calcFishRatePerKgPerBatchForFish),2,'.','');
	}

	calcGravyRatePerKgPerBatchForFish = parseFloat(document.getElementById("gravyRatePerBatchForFish").innerHTML)/parseFloat(document.getElementById("gravyKgInPouchPerBatchForFish").innerHTML);
	if (!isNaN(calcGravyRatePerKgPerBatchForFish)) {
		document.getElementById("gravyRatePerKgPerBatchForFish").innerHTML = number_format(Math.abs(calcGravyRatePerKgPerBatchForFish),2,'.','');
	}

	calcProductRatePerKgPerBatchForFish = parseFloat(document.getElementById("fishRatePerKgPerBatchForFish").innerHTML) + parseFloat(document.getElementById("gravyRatePerKgPerBatchForFish").innerHTML);
	if (!isNaN(calcProductRatePerKgPerBatchForFish)) {
		document.getElementById("productRatePerKgPerBatchForFish").innerHTML = number_format(Math.abs(calcProductRatePerKgPerBatchForFish),2,'.','');
	}
	

	//% per Pouch
	calcFishPercentagePerPouchForFish = ((fishGmsPerPouchForFish/productGmsPerPouchForFish)*100);
	if (!isNaN(calcFishPercentagePerPouchForFish)) {
		document.getElementById("fishPercentagePerPouchForFish").innerHTML = number_format(Math.abs(calcFishPercentagePerPouchForFish),0,'','');
	}

	calcGravyPercentagePerPouchForFish = ((gravyGmsPerPouchForFish/productGmsPerPouchForFish)*100);
	if (!isNaN(calcGravyPercentagePerPouchForFish)) {
		document.getElementById("gravyPercentagePerPouchForFish").innerHTML = number_format(Math.abs(calcGravyPercentagePerPouchForFish),0,'','');
	}

	calcProductPercentagePerPouchForFish = parseFloat(document.getElementById("fishPercentagePerPouchForFish").innerHTML)+parseFloat(document.getElementById("gravyPercentagePerPouchForFish").innerHTML);
	if (!isNaN(calcProductPercentagePerPouchForFish)) {
		document.getElementById("productPercentagePerPouchForFish").innerHTML  = number_format(Math.abs(calcProductPercentagePerPouchForFish),0,'','');
	}


	// Rs. Per Pouch
	multiPlyFishRatePerPouchForFish = parseFloat(document.getElementById("fishRatePerKgPerBatchForFish").innerHTML) * fishGmsPerPouchForFish;
	if (!isNaN(multiPlyFishRatePerPouchForFish)) {
		document.getElementById("fishRatePerPouchForFish").innerHTML  = number_format(Math.abs(multiPlyFishRatePerPouchForFish),2,'.','');
	}
	multiPlyGravyRatePerPouchForFish = parseFloat(document.getElementById("gravyRatePerKgPerBatchForFish").innerHTML) * gravyGmsPerPouchForFish;

	if (!isNaN(multiPlyGravyRatePerPouchForFish)) {
		document.getElementById("gravyRatePerPouchForFish").innerHTML = number_format(Math.abs(multiPlyGravyRatePerPouchForFish),2,'.','');
	}
	calcProductRatePerPouchForFish = parseFloat(document.getElementById("productRatePerBatchForFish").innerHTML)/pouchPerBatchForFish;

	if (!isNaN(calcProductRatePerPouchForFish)) {
		document.getElementById("productRatePerPouchForFish").innerHTML = number_format(Math.abs(calcProductRatePerPouchForFish),2,'.','');
	}

	//% Yield
	calcFishPercentageYieldForFish = (fishKgInPouchPerBatchForFish/parseFloat(document.getElementById("fishKgPerBatchForFish").innerHTML));
	if (!isNaN(calcFishPercentageYieldForFish)) {
		document.getElementById("fishPercentageYieldForFish").innerHTML  = number_format(Math.abs(calcFishPercentageYieldForFish),0,'','');
	}

	calcGravyPercentageYieldForFish = ( parseFloat(document.getElementById("gravyKgInPouchPerBatchForFish").innerHTML)/parseFloat(document.getElementById("gravyKgPerBatchForFish").innerHTML));

	if (!isNaN(calcGravyPercentageYieldForFish)) {
		document.getElementById("gravyPercentageYieldForFish").innerHTML  = number_format(Math.abs(calcGravyPercentageYieldForFish),0,'','');
	}
}

//Rate Per batch
function calcRatePerBatch()
{
	var itemCount 	      = document.getElementById("hidItemCount").value;
	var productKgPerbatch = document.getElementById("productKgPerbatch").value;
	var pouchPerBatch     = document.getElementById("pouchPerBatch").value;
	var productGmsPerPouch = document.getElementById("productGmsPerPouch").value;
	var pouchPerBatch = document.getElementById("pouchPerBatch").value;
	var productRatePerPouch = document.getElementById("productRatePerPouch").value;
	var fishGmsPerPouch = document.getElementById("fishGmsPerPouch").value;
	var gravyGmsPerPouch = document.getElementById("gravyGmsPerPouch").value;

	var getIngPrice = 0;
	var getPercentagePerbatch = 0;
	fishKgPerbatch = 0;
	gravyKgPerbatch = 0;
	fishRatePerBatch=0;
	gravyRatePerBatch = 0;
	for (i=1; i<=itemCount; i++) {
		var fixedQty = document.getElementById("fixedQty_"+i).value;
		//var ingType   = document.getElementById("ingType_"+i).value;
		var quantity  = document.getElementById("quantity_"+i).value;
		var lastPrice = document.getElementById("lastPrice_"+i).value;
		//Find Rate for each Ingredient
		getIngPrice =  quantity*lastPrice;
		if (!isNaN(getIngPrice)) {
			document.getElementById("ratePerBatch_"+i).value = number_format(Math.abs(getIngPrice),2,'.','');
		}
		// Find Percentage for Each Item
		getPercentagePerbatch = (quantity/productKgPerbatch);
		if (!isNaN(getPercentagePerbatch)) {
			document.getElementById("percentagePerBatch_"+i).value = number_format(Math.abs(getPercentagePerbatch*100),0,'','');
		}
		//Find Gms Per pouch
		getGmsPerPouch = (quantity/pouchPerBatch);
		if (!isNaN(getGmsPerPouch)) {
			document.getElementById("gmsPerPouch_"+i).value = number_format(getGmsPerPouch,3,'.','');
		}
		//Find Percentage Wt
		getPercentageWtPerpouch = ((document.getElementById("gmsPerPouch_"+i).value/productGmsPerPouch)*100);
		if (!isNaN(getPercentageWtPerpouch)) {
			document.getElementById("percentageWtPerPouch_"+i).value = number_format(Math.abs(getPercentageWtPerpouch),2,'.','');
		}
		//Find Rate Per Pouch
		getRatePerPouch = (document.getElementById("ratePerBatch_"+i).value/pouchPerBatch);
		if (!isNaN(getRatePerPouch)) {
			document.getElementById("ratePerPouch_"+i).value = number_format(Math.abs(getRatePerPouch),2,'.','');
		}
		//Find Percentage Cost Per Pouch
		getPercentageCostPerPouch = ((document.getElementById("ratePerPouch_"+i).value/productRatePerPouch)*100);
		if (!isNaN(getPercentageCostPerPouch)) {
			document.getElementById("percentageCostPerPouch_"+i).value = number_format(Math.abs(getPercentageCostPerPouch),0,'','');
		}
		//////////////////////////

		if (fixedQty=='Y') {
			fishKgPerbatch += document.getElementById("quantity_"+i).value;
			fishRatePerBatch += document.getElementById("ratePerBatch_"+i).value;
		} else if (fixedQty=='N') {
			gravyKgPerbatch += document.getElementById("quantity_"+i).value;
			gravyRatePerBatch += document.getElementById("ratePerBatch_"+i).value;
		}
		
	} //Loop End
	//Kg (Raw) per Batch
	document.getElementById("fishKgPerbatch").value = number_format(fishKgPerbatch,2,'.','');
	document.getElementById("gravyKgPerbatch").value = number_format(gravyKgPerbatch,2,'.','');
	document.getElementById("productKgPerbatch").value = parseFloat(fishKgPerbatch)+parseFloat(gravyKgPerbatch);

	//Rs. Per Batch
	document.getElementById("fishRatePerBatch").value = number_format(fishRatePerBatch,2,'.','');
	document.getElementById("gravyRatePerBatch").value = number_format(gravyRatePerBatch,2,'.','');
	document.getElementById("productRatePerBatch").value = parseFloat(fishRatePerBatch)+parseFloat(gravyRatePerBatch);

	//Rs. Per Kg per Batch
	document.getElementById("fishRatePerKgPerBatch").value = number_format(( document.getElementById("fishRatePerBatch").value/document.getElementById("fishKgInPouchPerBatch").value),2,'.','');
	document.getElementById("gravyRatePerKgPerBatch").value = number_format((document.getElementById("gravyRatePerBatch").value/document.getElementById("gravyKgInPouchPerBatch").value),2,'.','');
	document.getElementById("productRatePerKgPerBatch").value = number_format(( parseFloat(document.getElementById("fishRatePerKgPerBatch").value)+parseFloat(document.getElementById("gravyRatePerKgPerBatch").value)),2,'.','');
	
	//Rs. Per Pouch
	document.getElementById("fishRatePerPouch").value  =number_format(( document.getElementById("fishRatePerKgPerBatch").value * fishGmsPerPouch),2,'.','');

	document.getElementById("gravyRatePerPouch").value  = number_format(( document.getElementById("gravyRatePerKgPerBatch").value*gravyGmsPerPouch),2,'.','');

	document.getElementById("productRatePerPouch").value  = number_format((document.getElementById("productRatePerBatch").value/pouchPerBatch),2,'.','');

	//% (Raw) per Batch
	document.getElementById("fishRawPercentagePerPouch").value = number_format((document.getElementById("fishKgPerbatch").value/document.getElementById("productKgPerbatch").value)*100,0,'.','');
	document.getElementById("gravyRawPercentagePerPouch").value = number_format(( document.getElementById("gravyKgPerbatch").value/document.getElementById("productKgPerbatch").value)*100,0,'.','');
	document.getElementById("productRawPercentagePerPouch").value = parseFloat(document.getElementById("fishRawPercentagePerPouch").value) + parseFloat(document.getElementById("gravyRawPercentagePerPouch").value)
	
	// Kg (in Pouch) per Batch
	document.getElementById("fishKgInPouchPerBatch").value = number_format((pouchPerBatch*fishGmsPerPouch),2,'.','');
	document.getElementById("gravyKgInPouchPerBatch").value = number_format((pouchPerBatch*gravyGmsPerPouch),2,'.','');
	document.getElementById("productKgInPouchPerBatch").value = parseFloat(document.getElementById("fishKgInPouchPerBatch").value) + parseFloat(document.getElementById("gravyKgInPouchPerBatch").value);

	//% per Pouch
	document.getElementById("fishPercentagePerPouch").value  = number_format((fishGmsPerPouch/productGmsPerPouch)*100,0,'.','');
	document.getElementById("gravyPercentagePerPouch").value = number_format((gravyGmsPerPouch/productGmsPerPouch)*100,0,'.','');
	productPercentagePerPouch = parseFloat(document.getElementById("fishPercentagePerPouch").value) + parseFloat(document.getElementById("gravyPercentagePerPouch").value);

	//% Yield
	document.getElementById("fishPercentageYield").value  = number_format((document.getElementById("fishKgInPouchPerBatch").value/document.getElementById("fishKgPerbatch").value),0,'.','');
	document.getElementById("gravyPercentageYield").value  = number_format(( document.getElementById("gravyKgInPouchPerBatch").value/document.getElementById("gravyKgPerbatch").value),0,'.','');
	
}	function validateProductCategory(form)
{
	
	var category	=	form.categoryName.value;
	
	if (category=="") {
		alert("Please enter a Category Name.");
		form.categoryName.focus();
		return false;
	}
	
	if (!confirmSave()) {
		return false;
	}
	return true;
}





function validateProductState(form)
{
	
	var category	=	form.categoryName.value;
	
	if (category=="") {
		alert("Please enter a Product State.");
		form.categoryName.focus();
		return false;
	}
	
	if (!confirmSave()) {
		return false;
	}
	return true;
}





function validateProductGroup(form)
{
	
	var category	=	form.categoryName.value;
	
	if (category=="") {
		alert("Please enter a Product Group.");
		form.categoryName.focus();
		return false;
	}
	
	if (!confirmSave()) {
		return false;
	}
	return true;
}





function validateProductionMatrixMaster(form)
{
	if (!confirmSave()) {
		return false;
	} else {
		return true;
	}
}

//Calculate Electric consumption per day
function calcElectricConsumptionPerDayUnit()
{
	var calcElectricConsumption = 0;

	var noOfShiftsUnit		= document.getElementById("noOfShiftsUnit").value;	
	var electricConsumptionPerShift = document.getElementById("electricConsumptionPerShift").value;
	calcElectricConsumption	= parseFloat(electricConsumptionPerShift) * parseFloat(noOfShiftsUnit);

	if (!isNaN(calcElectricConsumption)) {
		document.getElementById("electricConsumptionPerDayUnit").value =  calcElectricConsumption;
	}	
}

// Claculate gas Per Cylinder Per Day
function calcGasPerCylinderPerDay()
{
	var calcGasPerCylinderPerDay = 0;
	var noOfShiftsUnit			= document.getElementById("noOfShiftsUnit").value;	
	var noOfRetortsUnit			= document.getElementById("noOfRetortsUnit").value;		
	var noOfCylindersPerShiftPerRetort 	= document.getElementById("noOfCylindersPerShiftPerRetort").value;
	calcGasPerCylinderPerDay = parseFloat(noOfCylindersPerShiftPerRetort)*parseFloat(noOfShiftsUnit)*parseFloat(noOfRetortsUnit);

	if (!isNaN(calcGasPerCylinderPerDay)) {
		document.getElementById("gasPerCylinderPerDay").value =  number_format(calcGasPerCylinderPerDay,2,'.','');
	}	
}

//Calculate maintance Cost
function calcMaintenanceCost()
{
	var calcMaintenanceCost = 0;
	var noOfShiftsUnit			= document.getElementById("noOfShiftsUnit").value;	
	var noOfRetortsUnit			= document.getElementById("noOfRetortsUnit").value;
	var noOfWorkingDaysInMonthUnit		= document.getElementById("noOfWorkingDaysInMonthUnit").value;
	var maintenanceCostPerRetortPerShift	= document.getElementById("maintenanceCostPerRetortPerShift").value;	
	 //Maintance cost per retort per shift * No.of Shifts * No.of Retorts* No.of Working days in month
	calcMaintenanceCost = parseFloat(maintenanceCostPerRetortPerShift) * parseFloat(noOfShiftsUnit)* parseFloat(noOfRetortsUnit) * parseFloat(noOfWorkingDaysInMonthUnit);
	if (!isNaN(calcMaintenanceCost)) {
		document.getElementById("maintenanceCost").value =  number_format(calcMaintenanceCost,0,'','');
	}				
}

// Calculate consumablesCost
function calcConsumablesCost()
{
	var calcConsumablesCost = 0;
	var consumableCostPerShiftPerMonth = document.getElementById("consumableCostPerShiftPerMonth").value;
	var noOfShiftsUnit			= document.getElementById("noOfShiftsUnit").value;
	var noOfWorkingDaysInMonthUnit	   = document.getElementById("noOfWorkingDaysInMonthUnit").value;
	//Consumable cost per shift per month * No.of Shift * No.of Working days in month
	calcConsumablesCost = parseFloat(consumableCostPerShiftPerMonth) * parseFloat(noOfShiftsUnit) * parseFloat(noOfWorkingDaysInMonthUnit);
	if (!isNaN(calcConsumablesCost)) {
		document.getElementById("consumablesCost").value =  number_format(calcConsumablesCost,0,'','');
	}	
}

// Calculate Lab Cost
function calcLabCost()
{
	var calcLabCost = 0;
	var noOfShiftsUnit		= document.getElementById("noOfShiftsUnit").value;	
	var noOfRetortsUnit		= document.getElementById("noOfRetortsUnit").value;
	var noOfWorkingDaysInMonthUnit	= document.getElementById("noOfWorkingDaysInMonthUnit").value;
	var labCostPerRetort		= document.getElementById("labCostPerRetort").value;	
	// lab cost per retort * No.of Shifts * No.of Retorts* No.of Working days in month
	calcLabCost = parseFloat(labCostPerRetort) * parseFloat(noOfShiftsUnit)* parseFloat(noOfRetortsUnit) * parseFloat(noOfWorkingDaysInMonthUnit);
	if (!isNaN(calcLabCost)) {
		document.getElementById("labCost").value =  number_format(calcLabCost,0,'','');
	}		
}
/*
// Find man Power total Cost
function manPowerTotalCost(unit, puCost, tCost)
{
	var totalCost 	 = 	0;
	var purchaseCost = 	0;
	var totalNumber	 =	0;

	if(document.getElementById(unit).value)
		totalNumber	=	parseFloat(document.getElementById(unit).value);
	if(document.getElementById(puCost).value)
		purchaseCost	=	parseFloat(document.getElementById(puCost).value);

	totalCost = totalNumber * purchaseCost;

	if(!isNaN(totalCost))
		document.getElementById(tCost).value = totalCost;
}

//variableManPowerCostPerDay
function calcVariManPowerCost()
{
	//alert("Here");
	var totalManPowerCost = 0;
	var totalVariableManPowerCost = 0;
	var vegProcessPerShiftTCost 	= document.getElementById("vegProcessPerShiftTCost").value;
	var pouchFillingPerShiftTCost 	= document.getElementById("pouchFillingPerShiftTCost").value;
	var sealingPerShiftTCost	= document.getElementById("sealingPerShiftTCost").value;
	var helperPerShiftTCost		= document.getElementById("helperPerShiftTCost").value;	

	totalManPowerCost = parseFloat(vegProcessPerShiftTCost) + parseFloat(pouchFillingPerShiftTCost) + parseFloat(sealingPerShiftTCost) + parseFloat(helperPerShiftTCost);
	
	var noOfShiftsUnit		= document.getElementById("noOfShiftsUnit").value;
	var noOfWorkingDaysInMonthUnit	= document.getElementById("noOfWorkingDaysInMonthUnit").value;
	//=(SUM(F81:F84)/D47)*D41
	totalVariableManPowerCost	= (totalManPowerCost/noOfWorkingDaysInMonthUnit) * noOfShiftsUnit;
	if (!isNaN(totalVariableManPowerCost)) {
		document.getElementById("variableManPowerCostPerDay").value =  number_format(totalVariableManPowerCost,2,'.','');
	}
}

//Calculate Fixed manPower Cost
function calcFixedManPowerCost()
{
	var totalFixedManPowerCost = 0;
	var totalManPowerCost = 0;
	var foodTechnoTCost 	= document.getElementById("foodTechnoTCost").value;
	var chiefChefTCost 	= document.getElementById("chiefChefTCost").value;	
	var supervisorPerShiftTCost = document.getElementById("supervisorPerShiftTCost").value;
	var technicianPerShiftTCost = document.getElementById("technicianPerShiftTCost").value;
	var cookPerShiftTCost	= document.getElementById("cookPerShiftTCost").value;	
	
	totalManPowerCost = parseFloat(foodTechnoTCost) + parseFloat(chiefChefTCost) + parseFloat(supervisorPerShiftTCost) + parseFloat(technicianPerShiftTCost) + parseFloat(cookPerShiftTCost);
	
	var noOfWorkingDaysInMonthUnit	= document.getElementById("noOfWorkingDaysInMonthUnit").value;
	//=(SUM($F$76:$F$80)/$D$47)
	totalFixedManPowerCost	= (totalManPowerCost/noOfWorkingDaysInMonthUnit);
	if (!isNaN(totalFixedManPowerCost)) {
		document.getElementById("fixedManPowerCostPerDay").value =  number_format(totalFixedManPowerCost,2,'.','');
	}
}
*/

// Find man Power Costs
function calcManPowerCost()
{
	var totalCost 	 = 	0;
	var purchaseCost = 	0;
	var totalNumber	 =	0;
	var manPowerType = "";
	var fixedManPowerCost = 0;
	var variableManPowerCost = 0;

	var noOfShiftsUnit		= document.getElementById("noOfShiftsUnit").value;
	var noOfWorkingDaysInMonthUnit	= document.getElementById("noOfWorkingDaysInMonthUnit").value;

	var hidManPowerCount = document.getElementById("hidManPowerCount").value;
	//alert(hidManPowerCount);
	for (i=1; i<=hidManPowerCount; i++) {
		totalNumber 	= 	parseFloat(document.getElementById("manPowerUnit_"+i).value);
		purchaseCost	=	parseFloat(document.getElementById("manPowerPuCost_"+i).value);
		manPowerType	=	document.getElementById("manPowerType_"+i).value;
		totalCost = totalNumber * purchaseCost;
		if (!isNaN(totalCost)) {
			document.getElementById("manPowerTCost_"+i).value = number_format(totalCost,2,'.','');
		}
		//alert(manPowerType+totalCost);
		if (manPowerType=='F') {
			fixedManPowerCost += totalCost;
		} else if (manPowerType=='V') {
			variableManPowerCost += totalCost;
		}		
	}
	//alert(fixedManPowerCost);
	//=(SUM($F$76:$F$80)/$D$47)
	if (!isNaN(fixedManPowerCost)) {
		document.getElementById("fixedManPowerCostPerDay").value = number_format((fixedManPowerCost/noOfWorkingDaysInMonthUnit),2,'.','');
	}

	//=(SUM(F81:F84)/D47)*D41
	if (!isNaN(variableManPowerCost)) {
		document.getElementById("variableManPowerCostPerDay").value =  number_format(((variableManPowerCost/noOfWorkingDaysInMonthUnit)*noOfShiftsUnit),2,'.','');
	}	
}

	// Function to calculate Marketing Cost
	function calcMktgCost()
	{
		var mktgActual 	= 0;
		var mktgIdeal	= 0;
		var mktgPuCost	= 0;
		var mktgTotalCost= 0;
		var mktgAvgCost = 0;
		var totalActual = 0;
		var totalIdeal= 0;
		var grandTotalMktgTCost = 0;
		var grandTotalMktgACost = 0;

		var hidMktgCostCount = document.getElementById("hidMktgCostCount").value;
		for (i=1; i<=hidMktgCostCount; i++) {
			mktgActual = parseInt(document.getElementById("mktgActual_"+i).value);
			mktgIdeal  = parseInt(document.getElementById("mktgIdeal_"+i).value);
			mktgPuCost = parseInt(document.getElementById("mktgPuCost_"+i).value);
			mktgTotalCost = mktgIdeal * mktgPuCost;
			mktgAvgCost = mktgActual * mktgPuCost;
			if (!isNaN(mktgTotalCost)) {
				document.getElementById("mktgTotCost_"+i).value = number_format(mktgTotalCost,0,'','');
			}
			if (!isNaN(mktgAvgCost)) {
				document.getElementById("mktgAvgCost_"+i).value = number_format(mktgAvgCost,0,'','');
			}
			// Find total Actual Value
			totalActual += 	mktgActual;	
			// Find total Ideal Value
			totalIdeal += 	mktgIdeal;

			// Find the Grand total Mktg Cost
			grandTotalMktgTCost += mktgTotalCost;
			// Find the Grand total Avg Cost
			grandTotalMktgACost += mktgAvgCost;
		}

		if (!isNaN(totalActual)) {
			document.getElementById("totalMktgCostActual").value = number_format(totalActual,0,'','');
		}
		if (!isNaN(totalIdeal)) {
			document.getElementById("totalMktgCostIdeal").value = number_format(totalIdeal,0,'','');
		}
		if (!isNaN(grandTotalMktgTCost)) {
			document.getElementById("totalMktgCostTCost").value = number_format(grandTotalMktgTCost,0,'','');
		}
		if (!isNaN(grandTotalMktgACost)) {
			document.getElementById("totalMktgCostACost").value = number_format(grandTotalMktgACost,0,'','');
		}
	}

	// Function to calculate Travel Cost
	function calcTravelCost()
	{
		var travelActual 	= 0;
		var travelIdeal	= 0;
		var travelPuCost	= 0;
		var travelTotalCost= 0;
		var travelAvgCost = 0;
		var totalActual = 0;
		var totalIdeal= 0;
		var grandTotalTravelTCost = 0;
		var grandTotalTravelACost = 0;

		var hidTravelCostCount = document.getElementById("hidTravelCostCount").value;
		for (i=1; i<=hidTravelCostCount; i++) {
			travelActual = parseInt(document.getElementById("travelActual_"+i).value);
			travelIdeal  = parseInt(document.getElementById("travelIdeal_"+i).value);
			travelPuCost = parseInt(document.getElementById("travelPuCost_"+i).value);
			travelTotalCost = travelIdeal * travelPuCost;
			travelAvgCost = travelActual * travelPuCost;
			if (!isNaN(travelTotalCost)) {
				document.getElementById("travelTotCost_"+i).value = number_format(travelTotalCost,0,'','');
			}
			if (!isNaN(travelAvgCost)) {
				document.getElementById("travelAvgCost_"+i).value = number_format(travelAvgCost,0,'','');
			}
			// Find total Actual Value
			totalActual += 	travelActual;	
			// Find total Ideal Value
			totalIdeal += 	travelIdeal;

			// Find the Grand total Travel Cost
			grandTotalTravelTCost += travelTotalCost;
			// Find the Grand total Avg Cost
			grandTotalTravelACost += travelAvgCost;
		}

		/*if (!isNaN(totalActual)) {
			document.getElementById("totalTravelCostActual").value = number_format(totalActual,0,'','');
		}
		if (!isNaN(totalIdeal)) {
			document.getElementById("totalTravelCostIdeal").value = number_format(totalIdeal,0,'','');
		}*/
		if (!isNaN(grandTotalTravelTCost)) {
			document.getElementById("totalTravelCost").value = number_format(grandTotalTravelTCost,0,'','');
		}
		if (!isNaN(grandTotalTravelACost)) {
			document.getElementById("totalTravelACost").value = number_format(grandTotalTravelACost,0,'','');
		}
	}function validateProductionMatrix(form)
{
	var prodCode = form.prodCode.value;
	var prodName = form.prodName.value;
	var fillingWtPerPouch = form.fillingWtPerPouch.value;
	var prodQtyPerBtch = form.prodQtyPerBtch.value;
	var noOfPouch	= form.noOfPouch.value;
	var noOfHrsPrep = form.noOfHrsPrep.value;
	var noOfHrsCook = form.noOfHrsCook.value;
	var noOfHrsRetort = form.noOfHrsRetort.value;
	var boilerRequired = form.boilerRequired.value;

	if (prodCode=="") {
		alert("Please enter a Product Code.");
		form.prodCode.focus();
		return false;
	}	
	if (prodName=="") {
		alert("Please enter a Product Name.");
		form.prodName.focus();
		return false;
	}	
	if (fillingWtPerPouch=="") {
		alert("Please enter Filling Wt Per pouch.");
		form.fillingWtPerPouch.focus();
		return false;
	}	
	if (prodQtyPerBtch=="") {
		alert("Please enter Production Qty Per batch.");
		form.prodQtyPerBtch.focus();
		return false;
	}
	if (noOfPouch=="") {
		alert("Please enter No.of Pouches Per batch.");
		form.noOfPouch.focus();
		return false;
	}
	if (noOfHrsPrep=="") {
		alert("Please enter No.of Hours for Prep.");
		form.noOfHrsPrep.focus();
		return false;
	}
	if (noOfHrsCook=="") {
		alert("Please enter No.of Hours for Cooking.");
		form.noOfHrsCook.focus();
		return false;
	}
	if (noOfHrsRetort=="") {
		alert("Please enter No.of Hours for Retorting.");
		form.noOfHrsRetort.focus();
		return false;
	}
	if (boilerRequired=="") {
		alert("Please select Boiler Required Option.");
		form.boilerRequired.focus();
		return false;
	}

		
	if (!confirmSave()) {
		return false;
	}
	return true;
}

// Find Processed Wt per Batch in Kg
function calcProcessedWtPerBatch()
{	
	var fillingWtPerPouch	 = 0;
	var noOfPouch 		 = 0;	
	var processedWtPerBtch 	 = 0;

	if(document.getElementById("fillingWtPerPouch").value)
		fillingWtPerPouch = parseFloat(document.getElementById("fillingWtPerPouch").value);
	if(document.getElementById("noOfPouch").value)
		noOfPouch	=	parseFloat(document.getElementById("noOfPouch").value);

	processedWtPerBtch = fillingWtPerPouch * noOfPouch;

	if(!isNaN(processedWtPerBtch))
		document.getElementById("processedWtPerBtch").value = number_format(processedWtPerBtch,0,'','');

	// Mktg Team Cost
	calcMktgTeamCostPerBtch();
	// Mktg Travel Cost
	calcMktgTravelCost();
	// Ad Cost
	calcAdvCostPerPouch();
}


// No of Hours for Filling & Sealing
function calcNumHrsForFillNSeal()
{
	var calcNumOfHrs = 0;
	

	var noOfMinutesForSealing = parseFloat(document.getElementById("noOfMinutesForSealing").value);
	var noOfMinutesPerHour	  = parseFloat(document.getElementById("noOfMinutesPerHour").value);
	var noOfPouchesSealed	  = parseFloat(document.getElementById("noOfPouchesSealed").value);	
	var noOfSealingMachines	  = parseFloat(document.getElementById("noOfSealingMachines").value);
	
	var noOfPouch		  = parseInt(document.getElementById("noOfPouch").value); 	

	//Fmula ($noOfMinutesForSealing/$noOfMinutesPerHour)+(((($noOfPouchesSealed/$noOfMinutesPerHour)/$noOfMinutesPerHour)*No.of pouch)/$noOfSealingMachines);
	
	calcNumOfHrs = (noOfMinutesForSealing/noOfMinutesPerHour)+((((noOfPouchesSealed/noOfMinutesPerHour)/noOfMinutesPerHour)*noOfPouch)/noOfSealingMachines);

	
	if(!isNaN(calcNumOfHrs))
		document.getElementById("noOfHrsFill").value = number_format(calcNumOfHrs,2,'.','');

}

// No of Hours for First Batch
function calcNumHrsForFirstBtch()
{
	var totalHrsFirstBtch = 0;

	var noOfHrsPrep = parseFloat(document.getElementById("noOfHrsPrep").value);
	var noOfHrsCook = parseFloat(document.getElementById("noOfHrsCook").value);
	var noOfHrsFill = parseFloat(document.getElementById("noOfHrsFill").value);
	var noOfHrsRetort = parseFloat(document.getElementById("noOfHrsRetort").value);
	
	totalHrsFirstBtch = noOfHrsPrep + noOfHrsCook + noOfHrsFill + noOfHrsRetort;

	if(!isNaN(totalHrsFirstBtch))
		document.getElementById("noOfHrsFirstBtch").value = number_format(totalHrsFirstBtch,2,'.','');
}

// No of Hours for other Batches
function calcNumHrsForOtherBtch()
{
	var totalHrsOtherBtch = 0;

	var noOfHrsFirstBtch = parseFloat(document.getElementById("noOfHrsFirstBtch").value);
	var noOfHrsFill = parseFloat(document.getElementById("noOfHrsFill").value);
	var noOfHrsRetort = parseFloat(document.getElementById("noOfHrsRetort").value);
	
	// =noOfHrsFirstBtch-(noOfHrsFill+noOfHrsRetort)
	totalHrsOtherBtch = (noOfHrsFirstBtch-(noOfHrsFill+noOfHrsRetort));
	//alert(noOfHrsFirstBtch+"-"+"("+noOfHrsFill+"+"+noOfHrsRetort+")");
	if(!isNaN(totalHrsOtherBtch))
		document.getElementById("noOfHrsOtherBtch").value = number_format(totalHrsOtherBtch,2,'.','');
}

//No of Batches per Day
function calcNumBtchPerDay()
{
	var totalNumOfBtchPerDay = 0;

	var noOfHoursPerShift = parseFloat(document.getElementById("noOfHoursPerShift").value);
	var noOfRetorts		= parseFloat(document.getElementById("noOfRetorts").value);
	var noOfShifts		= parseInt(document.getElementById("noOfShifts").value);
	var noOfHrsFirstBtch	= parseFloat(document.getElementById("noOfHrsFirstBtch").value);
	var noOfHrsOtherBtch 	= parseFloat(document.getElementById("noOfHrsOtherBtch").value);
	//((($noOfHoursPerShift-noOfHrsFirstBtch)/noOfHrsOtherBtch)+1)*$noOfRetorts*$noOfShifts;
	totalNumOfBtchPerDay = (((noOfHoursPerShift-noOfHrsFirstBtch)/noOfHrsOtherBtch)+1)*noOfRetorts*noOfShifts;
	if(!isNaN(totalNumOfBtchPerDay))
		document.getElementById("noOfBtchsPerDay").value = number_format((Math.abs(totalNumOfBtchPerDay)),2,'.','');
	//Electricity cost per Batch
	calcElectricCostPerBatch();
	// Water Cost
	calcWaterCostPerBtch();
	//Gas Cost
	calcGasCostPerBtch();
	//Total Fuel Cost
	calcTotalFuelCostPerBatch();
	// maintence Cost 
	calcMaintCostPerBtch();
	// Variable man Power Cost
	calcVariableManPwerCostPerBtch();
	// Mktg Team Cost
	calcMktgTeamCostPerBtch();
	// mktg Travel Cost
	calcMktgTravelCost();
	//Ad Cost
	calcAdvCostPerPouch();
}

// Diesel Cost per Batch
function  calcDieselCostPerBtch()
{
	var dieselCostPerBtch = 0;
	var boilerRequired	= document.getElementById("boilerRequired").value;
	var dieselConsumptionOfBoiler = parseFloat(document.getElementById("dieselConsumptionOfBoiler").value);
	var dieselCostPerLitre	      = parseFloat(document.getElementById("dieselCostPerLitre").value);
	var noOfHrsFirstBtch	= parseFloat(document.getElementById("noOfHrsFirstBtch").value);
	var noOfHrsOtherBtch 	= parseFloat(document.getElementById("noOfHrsOtherBtch").value);
	var noOfBtchsPerDay	= parseFloat(document.getElementById("noOfBtchsPerDay").value);
	//Boiler=Y : $dieselConsumptionOfBoiler* $dieselCostPerLitre* (noOfHrsFirstBtch+ (noOfHrsOtherBtch* (noOfBtchsPerDay-1))))/ noOfBtchsPerDay;
	if (boilerRequired=='Y') {
		dieselCostPerBtch = (dieselConsumptionOfBoiler*dieselCostPerLitre*(noOfHrsFirstBtch+(noOfHrsOtherBtch*(noOfBtchsPerDay-1))))/noOfBtchsPerDay;
	} else {
		dieselCostPerBtch = 0;
	}
	if(!isNaN(dieselCostPerBtch))
		document.getElementById("dieselCostPerBtch").value = number_format(dieselCostPerBtch,2,'.','');

	// Water Cost
	calcWaterCostPerBtch();
	//Total Fuel Cost
	calcTotalFuelCostPerBatch();
}

//Electricity Cost per Batch
function calcElectricCostPerBatch()
{
	var electricCostPerBtch = 0;
	var electricConsumptionPerDayUnit = parseFloat(document.getElementById("electricConsumptionPerDayUnit").value);
	var electricCostPerUnit = parseFloat(document.getElementById("electricCostPerUnit").value);
	var noOfBtchsPerDay 	= parseFloat(document.getElementById("noOfBtchsPerDay").value);
	//($electricConsumptionPerDayUnit*$electricCostPerUnit)/noOfBtchsPerDay;
	electricCostPerBtch = (electricConsumptionPerDayUnit*electricCostPerUnit)/noOfBtchsPerDay;
	if(!isNaN(electricCostPerBtch))
		document.getElementById("electricityCostPerBtch").value = number_format(electricCostPerBtch,2,'.','');	
}


//Water Cost per Batch
function calcWaterCostPerBtch()
{
	var waterConsumptionPerRetort = 0;
	var waterCostPerBtch = 0;

	var boilerRequired	= document.getElementById("boilerRequired").value;
	var waterConsumptionPerRetortBatchUnit = parseFloat(document.getElementById("waterConsumptionPerRetortBatchUnit").value);
	var generalWaterConsumptionPerDayUnit = parseFloat(document.getElementById("generalWaterConsumptionPerDayUnit").value);
	var noOfShifts = parseInt(document.getElementById("noOfShifts").value);
	var noOfWorkingDaysInMonth = parseInt(document.getElementById("noOfWorkingDaysInMonth").value);
	var costPerLitreOfWater = parseFloat(document.getElementById("costPerLitreOfWater").value);
	var noOfBtchsPerDay 	= parseFloat(document.getElementById("noOfBtchsPerDay").value);
	
	if (boilerRequired=='Y') {
		waterConsumptionPerRetort = waterConsumptionPerRetortBatchUnit;
	} else {
		waterConsumptionPerRetort = 0;
	}

	//((IF(Boiler=Y;($waterConsumptionPerRetortBatchUnit);0))+(($generalWaterConsumptionPerDayUnit*$noOfShifts)/ $noOfWorkingDaysInMonth/noOfBtchsPerDay))*$costPerLitreOfWater
	waterCostPerBtch = ((waterConsumptionPerRetort)+((generalWaterConsumptionPerDayUnit * noOfShifts)/noOfWorkingDaysInMonth/noOfBtchsPerDay)) * costPerLitreOfWater;
	if(!isNaN(waterCostPerBtch))
		document.getElementById("waterCostPerBtch").value = number_format(waterCostPerBtch,2,'.','');
}

//Gas cost per Batch
function calcGasCostPerBtch()
{
	var gasCostPerBtch = 0;
	var gasPerCylinderPerDay = parseFloat(document.getElementById("gasPerCylinderPerDay").value);
	var costOfCylinder = parseFloat(document.getElementById("costOfCylinder").value);
	var noOfBtchsPerDay 	= parseFloat(document.getElementById("noOfBtchsPerDay").value);
	//($costOfCylinder*$gasPerCylinderPerDay)/noOfBtchsPerDay
	gasCostPerBtch = (costOfCylinder*gasPerCylinderPerDay)/noOfBtchsPerDay;
	if(!isNaN(gasCostPerBtch))
		document.getElementById("gasCostPerBtch").value = number_format(gasCostPerBtch,2,'.','');
}

//Total Fuel cost per Batch
function calcTotalFuelCostPerBatch()
{
	var totalFuelCost = 0;
	var dieselCostPerBtch = parseFloat(document.getElementById("dieselCostPerBtch").value);
	var electricityCostPerBtch = parseFloat(document.getElementById("electricityCostPerBtch").value);
	var waterCostPerBtch 	= parseFloat(document.getElementById("waterCostPerBtch").value);
	var gasCostPerBtch = parseFloat(document.getElementById("gasCostPerBtch").value);
	
	totalFuelCost = dieselCostPerBtch+electricityCostPerBtch+waterCostPerBtch+gasCostPerBtch;
	if(!isNaN(totalFuelCost))
		document.getElementById("totFuelCostPerBtch").value = number_format(totalFuelCost,2,'.','');	
}

//Maint/Cons. Cost per Batch
function calcMaintCostPerBtch()
{
	var maintenanceCost = parseFloat(document.getElementById("maintenanceCost").value);
	var consumablesCost = parseFloat(document.getElementById("consumablesCost").value);
	var labCost = parseFloat(document.getElementById("labCost").value);		
	var noOfWorkingDaysInMonth = parseInt(document.getElementById("noOfWorkingDaysInMonth").value);
	var noOfBtchsPerDay 	= parseFloat(document.getElementById("noOfBtchsPerDay").value);
	
	//($maintenanceCost+$consumablesCost+$labCost)/$noOfWorkingDaysInMonth/noOfBtchsPerDay;
	maintCostPerBtch = (maintenanceCost+consumablesCost+labCost)/noOfWorkingDaysInMonth/noOfBtchsPerDay;
	
	if(!isNaN(maintCostPerBtch))
		document.getElementById("maintCostPerBtch").value = number_format(maintCostPerBtch,2,'.','');
}

//Variable Manpower Cost per Batch
function calcVariableManPwerCostPerBtch()
{
	var variManPowerCost = 0;

	var variableManPowerCostPerDay = parseFloat(document.getElementById("variableManPowerCostPerDay").value);
	var noOfBtchsPerDay 	= parseFloat(document.getElementById("noOfBtchsPerDay").value);
	//($variableManPowerCostPerDay/noOfBtchsPerDay);
	variManPowerCost = (variableManPowerCostPerDay/noOfBtchsPerDay);
	if(!isNaN(variManPowerCost))
		document.getElementById("variManPwerCostPerBtch").value = number_format(variManPowerCost,2,'.','');
}

//Mktg Team cost per pouch
function calcMktgTeamCostPerBtch()
{
	var mktgTeamCostPerBtch = 0;
	var totalMktgCostTCost = parseFloat(document.getElementById("totalMktgCostTCost").value);
	var noOfWorkingDaysInMonth = parseInt(document.getElementById("noOfWorkingDaysInMonth").value);
	var noOfBtchsPerDay 	= parseFloat(document.getElementById("noOfBtchsPerDay").value);
	var noOfPouch		= parseInt(document.getElementById("noOfPouch").value);

	//$totalMktgCostTCost/($noOfWorkingDaysInMonth*NoOfPouch*noOfBtchsPerDay)
	mktgTeamCostPerBtch = totalMktgCostTCost/(noOfWorkingDaysInMonth*noOfPouch*noOfBtchsPerDay);

	if(!isNaN(mktgTeamCostPerBtch))
		document.getElementById("mktgTeamCostPerPouch").value = number_format(mktgTeamCostPerBtch,2,'.','');
}

//Mktg Travel Cost
function calcMktgTravelCost()
{
	var mktgTravelCost = 0;
	var totalTravelCost = parseFloat(document.getElementById("totalTravelCost").value);
	var noOfWorkingDaysInMonth = parseInt(document.getElementById("noOfWorkingDaysInMonth").value);
	var noOfBtchsPerDay 	= parseFloat(document.getElementById("noOfBtchsPerDay").value);
	var noOfPouch		= parseInt(document.getElementById("noOfPouch").value);

	//$totalTravelCost/($noOfWorkingDaysInMonth*NoOfPouch*noOfBtchsPerDay)
	mktgTravelCost = totalTravelCost/(noOfWorkingDaysInMonth*noOfPouch*noOfBtchsPerDay);

	if(!isNaN(mktgTravelCost))
		document.getElementById("mktgTravelCost").value = number_format(mktgTravelCost,2,'.','');
}

//Advt Cost per pouch
function calcAdvCostPerPouch()
{
	var advCostPerPouch 	= 0;
	var advtCostPerMonth 	= parseFloat(document.getElementById("advtCostPerMonth").value);
	var noOfWorkingDaysInMonth = parseInt(document.getElementById("noOfWorkingDaysInMonth").value);
	var noOfBtchsPerDay 	= parseFloat(document.getElementById("noOfBtchsPerDay").value);
	var noOfPouch		= parseInt(document.getElementById("noOfPouch").value);

	//$advtCostPerMonth/($noOfWorkingDaysInMonth*NoOfPouch*noOfBtchsPerDay)
	advCostPerPouch = advtCostPerMonth/(noOfWorkingDaysInMonth*noOfPouch*noOfBtchsPerDay);

	if(!isNaN(advCostPerPouch))
		document.getElementById("adCostPerPouch").value = number_format(advCostPerPouch,2,'.','');
}

/*
function calcProcessedWtPerBatch(firstField, secondField, ansField)
{
	var finalValue 	 = 	0;
	var secondValue = 	0;
	var firstValue	 =	0;	

	if(document.getElementById(firstField).value)
		firstValue	=	parseFloat(document.getElementById(firstField).value);
	if(document.getElementById(secondField).value)
		secondValue	=	parseFloat(document.getElementById(secondField).value);

	finalValue = firstValue * secondValue;

	if(!isNaN(finalValue))
		document.getElementById(ansField).value = number_format(finalValue,0,'','');
}
*/
/*function validatePackingCostMaster(form)
{
	var itemName = form.itemName.value;
	var itemCode = form.itemCode.value;
	var costPerItem = form.costPerItem.value;
	

	if (itemName=="") {
		alert("Please enter a Sealing Item name.");
		form.itemName.focus();
		return false;
	}
	
	if (itemCode=="") {
		alert("Please enter a Code.");
		form.itemCode.focus();
		return false;
	}
	
	if (costPerItem=="") {
		alert("Please enter a cost.");
		form.costPerItem.focus();
		return false;
	}	
	
	if (!confirmSave()) {
		return false;
	}
	return true;
}*/

// Find the total Packing Material Cost
function calcPackingMaterialTotCost()
{
	var innerCartonWstage = parseFloat(document.getElementById("innerCartonWstage").value);
	var hidMaterialCostRowCount = document.getElementById("hidMaterialCostRowCount").value;
	var calcTotMaterialCost = 0;
	for (k=1; k<=hidMaterialCostRowCount; k++) {
		var materialCostPerItem = parseFloat(document.getElementById("materialCostPerItem_"+k).value);
		//$calcTotMaterialCost = $materialCost/(1-($innerCartonWstage/100)); 
		calcTotMaterialCost = (materialCostPerItem/(1-(innerCartonWstage/100)));
		
		if (!isNaN(calcTotMaterialCost)) {
			document.getElementById("totMaterialCost_"+k).value = number_format(calcTotMaterialCost,2,'.','');
		}
			
	}
}

function validatePackingMatrix(form)
{
	var packingCode 	= form.packingCode.value;
	var packingName 	= form.packingName.value;
	var innerContainerType 	= form.innerContainerType.value;
	var pkgLabourRateType 	= form.pkgLabourRateType.value;
	var noOfPacksInMC	= form.noOfPacksInMC.value;
	var masterPackingType	= form.masterPackingType.value;
	var productType		= form.productType.value;

	if (packingCode=="") {
		alert("Please enter a Packing Code.");
		form.packingCode.focus();
		return false;
	}	
	if (packingName=="") {
		alert("Please enter a Packing Name.");
		form.packingName.focus();
		return false;
	}
	if (productType=="") {
		alert("Please select a Product Type.");
		form.productType.focus();
		return false;
	}
	if (innerContainerType==0) {
		alert("Please select a inner Container.");
		form.innerContainerType.focus();
		return false;
	}	
	if (pkgLabourRateType==0) {
		alert("Please select a Packing labour Rate.");
		form.pkgLabourRateType.focus();
		return false;
	}
	if (noOfPacksInMC=="") {
		alert("Please enter No of Packs in MC.");
		form.noOfPacksInMC.focus();
		return false;
	}	
	if (masterPackingType==0) {
		alert("Please select a Master Packing.");
		form.masterPackingType.focus();
		return false;
	}		
	if (!confirmSave()) {
		return false;
	}
	return true;
}


/*
 	//Display inner Container Rate
	function displayInnerContainerRate()
	{
		var innerContainerType = document.getElementById("innerContainerType").value;
		if (innerContainerType!=0) {
			var innerContainerSplit	=	innerContainerType.split("_");
			var innerContainerRate	=	innerContainerSplit[1];
			document.getElementById("innerContainerRate").value = innerContainerRate;		
		} else {
			document.getElementById("innerContainerRate").value =0;
		}
			
	}
*/

	// Common for Display Rate
	function displaySelPackingRate(field, displayField, qtyF)
	{
		var productType = document.getElementById("productType").value;
		var packingQty = 1;
		if (productType=='CP') { 
			packingQty = document.getElementById(qtyF).value;
		} else {
			packingQty = 1;
		}
		var getField = document.getElementById(field).value;
		if (getField!=0) {
			var getFieldSplit	=	getField.split("_");
			var packingRate		=	getFieldSplit[1];
			document.getElementById(displayField).value = number_format( (parseFloat(packingRate*packingQty)),2,'.','');		
		} else {
			document.getElementById(displayField).value =0;
		}
		// Calculate inner and outer packing cost
		calcInnerPackingCost();
		calcOuterPackingCost();
	}

	// Display Master Packing Rate
	function displayMasterPackingRate()
	{
		var calcMasterPkgRate = 0;
		var noOfPacksInMC = document.getElementById("noOfPacksInMC").value;
		
		var masterPackingType = document.getElementById("masterPackingType").value;
		if (masterPackingType!=0) {
			var masterPackingSplit	=	masterPackingType.split("_");
			var masterPackingRate	=	masterPackingSplit[1];
			calcMasterPkgRate = parseFloat(masterPackingRate/noOfPacksInMC);
			
			if (!isNaN(calcMasterPkgRate)) {				
				document.getElementById("masterPackingRate").value = number_format(calcMasterPkgRate,2,'.','');		
			} else {
				document.getElementById("masterPackingRate").value =0;
			}
		} else {
			document.getElementById("masterPackingRate").value =0;
		}		
	}

	// inner Packing Cost
	function calcInnerPackingCost()
	{
		var totalInnerpackingCost = 0;
		
		var innerContainerRate	= 0;
		var innerPackingRate	= 0;
		var innerSampleRate	= 0;
		var innerLabelingRate	= 0;
		var innerLeafletRate	= 0;
		var innerSealingRate	= 0;
		var pkgLabourRate	= 0;
		
		if (document.getElementById("innerContainerRate").value!=0) {
			innerContainerRate	= parseFloat(document.getElementById("innerContainerRate").value);
		}		
		if (document.getElementById("innerPackingRate").value!=0) {
			innerPackingRate	= parseFloat(document.getElementById("innerPackingRate").value);
		}
		if (document.getElementById("innerSampleRate").value!=0) {
			innerSampleRate		= parseFloat(document.getElementById("innerSampleRate").value);
		}
		if (document.getElementById("innerLabelingRate").value!=0) {
			innerLabelingRate	= parseFloat(document.getElementById("innerLabelingRate").value);
		}
		if (document.getElementById("innerLeafletRate").value!=0) {
			innerLeafletRate	= parseFloat(document.getElementById("innerLeafletRate").value);
		}
		if (document.getElementById("innerSealingRate").value!=0) {
			innerSealingRate	= parseFloat(document.getElementById("innerSealingRate").value);
		}
		if (document.getElementById("pkgLabourRate").value!=0) {
			pkgLabourRate	= parseFloat(document.getElementById("pkgLabourRate").value);
		}
		
		totalInnerpackingCost = innerContainerRate+innerPackingRate+innerSampleRate+innerLabelingRate+innerLeafletRate+innerSealingRate+pkgLabourRate;
		if (!isNaN(totalInnerpackingCost)) {
			document.getElementById("innerPkgCost").value = number_format(totalInnerpackingCost,2,'.','');
		}
	}


	// Outer Packing Cost
	function calcOuterPackingCost()
	{
		var totalOuterpackingCost = 0;
		
		var masterPackingRate	= 0;
		var masterSealingRate	= 0;		
		
		if (document.getElementById("masterPackingRate").value!=0) {
			masterPackingRate	= parseFloat(document.getElementById("masterPackingRate").value);
		}		
		if (document.getElementById("masterSealingRate").value!=0) {
			masterSealingRate	= parseFloat(document.getElementById("masterSealingRate").value);
		}		
		
		totalOuterpackingCost = masterPackingRate+masterSealingRate;
		if (!isNaN(totalOuterpackingCost)) {
			document.getElementById("outerPackingCost").value = number_format(totalOuterpackingCost,2,'.','');
		}
	}

// Text box Display Section
	function hidPackingQtyBox()
	{
		document.getElementById("innerContainerQtyDiv").style.display = "none";
		document.getElementById("innerPackingQtyDiv").style.display = "none";
		document.getElementById("innerSampleQtyDiv").style.display = "none";
		document.getElementById("innerLabelingQtyDiv").style.display = "none";
		document.getElementById("innerLeafletQtyDiv").style.display = "none";
		document.getElementById("innerSealingQtyDiv").style.display = "none";
		document.getElementById("pkgLabourRateDiv").style.display = "none";		
	}

	function showPackingQtyBox()
	{
		// CP = combo Product
		var productType = document.getElementById("productType").value;
		if (productType=='CP') {
			document.getElementById("innerContainerQtyDiv").style.display = "block";
			document.getElementById("innerPackingQtyDiv").style.display = "block";	
			document.getElementById("innerSampleQtyDiv").style.display = "block";
			document.getElementById("innerLabelingQtyDiv").style.display = "block";
			document.getElementById("innerLeafletQtyDiv").style.display = "block";
			document.getElementById("innerSealingQtyDiv").style.display = "block";
			document.getElementById("pkgLabourRateDiv").style.display = "block";	
		} else {
			document.getElementById("innerContainerQtyDiv").style.display = "none";
			document.getElementById("innerPackingQtyDiv").style.display = "none";
			document.getElementById("innerSampleQtyDiv").style.display = "none";
			document.getElementById("innerLabelingQtyDiv").style.display = "none";
			document.getElementById("innerLeafletQtyDiv").style.display = "none";
			document.getElementById("innerSealingQtyDiv").style.display = "none";
			document.getElementById("pkgLabourRateDiv").style.display = "none";
		}
	}
function validateProductMatrix(form)
{
	var productCode = form.productCode.value;
	var productName = form.productName.value;
	var netWt 	= form.netWt.value;
	var fishWt 	= form.fishWt.value;
	var forExport	= form.forExport.value;
	var rMCodeId	= form.rMCodeId.value;
	var noOfBatches = form.noOfBatches.value;
	var batchSize	= form.batchSize.value;
	var selFish	= form.selFish.value;
	var productionCode = form.productionCode.value;
	var packingCode = form.packingCode.value;
	var freightChargePerPack = form.freightChargePerPack.value;
	var productExciseRate = form.productExciseRate.value;
	var idealFactoryCost = form.idealFactoryCost.value;

	if (productCode=="") {
		alert("Please enter a Product Code.");
		form.productCode.focus();
		return false;
	}	
	if (productName=="") {
		alert("Please enter a Product Name.");
		form.productName.focus();
		return false;
	}
	if (netWt=="") {
		alert("Please enter Net Wt.");
		form.netWt.focus();
		return false;
	}
	
	if (fishWt=="") {
		alert("Please enter Fish Wt.");
		form.fishWt.focus();
		return false;
	}

	if (forExport=="") {
		alert("Please select Export Option.");
		form.forExport.focus();
		return false;
	}
	if (rMCodeId=="") {
		alert("Please select RM Code.");
		form.rMCodeId.focus();
		return false;
	}
	if (noOfBatches=="") {
		alert("Please enter No. of Batches.");
		form.noOfBatches.focus();
		return false;
	}
	if (batchSize=="") {
		alert("Please enter a Batch Size.");
		form.batchSize.focus();
		return false;
	}
	if (selFish=="") {
		alert("Please select a Fish.");
		form.selFish.focus();
		return false;
	}
	if (productionCode=="") {
		alert("Please select a Production Code.");
		form.productionCode.focus();
		return false;
	}
	if (packingCode=="") {
		alert("Please select a Packing Code.");
		form.packingCode.focus();
		return false;
	}
	if (freightChargePerPack=="") {
		alert("Please enter Freight Charge per pack.");
		form.freightChargePerPack.focus();
		return false;
	}
	if (productExciseRate=="") {
		alert("Please enter Excise Rate.");
		form.productExciseRate.focus();
		return false;
	}
	if (idealFactoryCost=="") {
		alert("Please enter Ideal Factory Cost.");
		form.idealFactoryCost.focus();
		return false;
	}	

	if (!confirmSave()) {
		return false;
	}
	return true;
}

	// Find Gravy Wt
	function findGravyWt()
	{
		var netWt = parseFloat(document.getElementById("netWt").value);
		var fishWt = parseFloat(document.getElementById("fishWt").value);
		calcGravyWt = netWt - fishWt;
		if (!isNaN(calcGravyWt)) {
			document.getElementById("gravyWt").value = number_format(calcGravyWt,3,'.','');
		}
		
		//Percentage of Seafood
		seaFoodPercent();
	}

	//Find % Of Seafood
	function seaFoodPercent()
	{
		var netWt = parseFloat(document.getElementById("netWt").value);
		var fishWt = parseFloat(document.getElementById("fishWt").value);
		calcSeaFoodPercent = (fishWt/netWt)*100;
		if (!isNaN(calcSeaFoodPercent)) {
			document.getElementById("percentSeafood").value = number_format(calcSeaFoodPercent,0,'','');
		}
	}

	function findPerPouchCost()
	{
		var calcProcessingCost = 0;

		var batchSize	     = parseFloat(document.getElementById("batchSize").value);	

		// 1. Calculate Water Cost Per Pouch
		var calcWaterCostPerPouch = 0;
		var waterCostPerBtch = parseFloat(document.getElementById("waterCostPerBtch").value);
		calcWaterCostPerPouch = waterCostPerBtch/batchSize;		
		if (!isNaN(calcWaterCostPerPouch)) {
			document.getElementById("waterCostPerPouch").value = number_format(calcWaterCostPerPouch,2,'.','')
		}
		
		// 2. Calc Diesel Cost Per Pouch
		var calcDieselCostPerPouch = 0;
		var dieselCostPerBtch = parseFloat(document.getElementById("dieselCostPerBtch").value);
		calcDieselCostPerPouch = dieselCostPerBtch/batchSize;
		if (!isNaN(calcDieselCostPerPouch)) {
			document.getElementById("dieselCostPerPouch").value = number_format(calcDieselCostPerPouch,2,'.','');
		}

		//3. Calc Electric Cost Per Pouch
		var calcElectricCostPerPouch = 0;
		var electricityCostPerBtch= parseFloat(document.getElementById("electricityCostPerBtch").value);
		calcElectricCostPerPouch = electricityCostPerBtch/batchSize;
		if (!isNaN(calcElectricCostPerPouch)) {
			document.getElementById("electricCostPerPouch").value = number_format(calcElectricCostPerPouch,2,'.','');
		}

		// 4. Calc Gas Cost Per Pouch
		var calcGasCostPerPouch = 0;
		var gasCostPerBtch = parseFloat(document.getElementById("gasCostPerBtch").value);
		calcGasCostPerPouch = gasCostPerBtch/batchSize;
		if (!isNaN(calcGasCostPerPouch)) {
			document.getElementById("gasCostPerPouch").value = number_format(calcGasCostPerPouch,2,'.','');
		}
	
		//5. Consumables per pouch
		var calcConsumCostPerPouch = 0;
		var maintCostPerBtch = parseFloat(document.getElementById("maintCostPerBtch").value);
		calcConsumCostPerPouch = maintCostPerBtch/batchSize;
		if (!isNaN(calcConsumCostPerPouch)) {
			document.getElementById("consumableCostPerPouch").value = number_format(calcConsumCostPerPouch,2,'.','');
		}

		// 6. Manpower Cost/Pouch
		var calcVariManPowerCostPerPouch = 0;
		var calcFixedManPowerCostPerPouch = 0;
		var calcManPowerCostPerPouch = 0;
		var variManPwerCostPerBtch = parseFloat(document.getElementById("variManPwerCostPerBtch").value);
		calcVariManPowerCostPerPouch = variManPwerCostPerBtch/batchSize;
		var fixedManPowerCostPerDay = parseFloat(document.getElementById("fixedManPowerCostPerDay").value);
		var noOfBatches		    = parseInt(document.getElementById("noOfBatches").value);
		calcFixedManPowerCostPerPouch = fixedManPowerCostPerDay/(noOfBatches*batchSize);
		
		calcManPowerCostPerPouch = calcVariManPowerCostPerPouch+calcFixedManPowerCostPerPouch;
		if (!isNaN(calcManPowerCostPerPouch)) {
			document.getElementById("manPowerCostPerPouch").value = number_format(calcManPowerCostPerPouch,2,'.','');
		}		

		// 7. Fish prep cost/Pouch
		var calcFishPrepCostPerPouch = 0;
		var fishWt	= parseFloat(document.getElementById("fishWt").value);
		var selFishCost = parseFloat(document.getElementById("selFishCost").value);
		calcFishPrepCostPerPouch = fishWt * selFishCost;
		if (!isNaN(calcFishPrepCostPerPouch)) {
			document.getElementById("fishPrepCostPerPouch").value = number_format(calcFishPrepCostPerPouch,2,'.','');
		}

		//Processing cost	
		calcProcessingCost = calcWaterCostPerPouch + calcDieselCostPerPouch + calcElectricCostPerPouch + calcGasCostPerPouch + calcConsumCostPerPouch + calcManPowerCostPerPouch + calcFishPrepCostPerPouch;
		if (!isNaN(calcProcessingCost)) {
			document.getElementById("processingCost").value = number_format(calcProcessingCost,2,'.','');
		}
	
		// Find testing Cost
		findTestingCost();
		//Basic Manufacturing Cost
		findBasicManufacturingCost();			
	}

	// Find the Product Marketing Cost
	function findProductMktgCost()
	{
		var calcMktgCostPerPouch = 0;
		var forExport		= document.getElementById("forExport").value;
		var mktgTeamCostPerPouch = parseFloat(document.getElementById("mktgTeamCostPerPouch").value);
		var mktgTravelCost	 = parseFloat(document.getElementById("mktgTravelCost").value);
		calcMktgCostPerPouch  = mktgTeamCostPerPouch + mktgTravelCost;
		if (!isNaN(calcMktgCostPerPouch) && forExport=='N') {
			document.getElementById("mktgCost").value = number_format(calcMktgCostPerPouch,2,'.','');
		} else {
			document.getElementById("mktgCost").value = 0;
		}
		//Find Admin Overhead Charge
		findAdminOverheadCharge();
	}

	//Find the Advert Cost Calculation
	function findAdvertCost()
	{
		var forExport		= document.getElementById("forExport").value;
		var adCostPerPouch = parseFloat(document.getElementById("adCostPerPouch").value);
		if (forExport=='N') document.getElementById("proAdvertCost").value = number_format(adCostPerPouch,2,'.','');
		else document.getElementById("proAdvertCost").value = 0;

		//Find Admin Overhead Charge
		findAdminOverheadCharge();
	}	

	//Calculate the RM Cost (Product RM Cost) of Sea Food and gravy
	function calcProductRMCost()
	{
		var calcSeaFoodCost = 0;
		var calcGravyCost = 0;
		var calcRMCost = 0;
		var fishWt  = parseFloat(document.getElementById("fishWt").value);
		var gravyWt = parseFloat(document.getElementById("gravyWt").value);
		var fishRatePerKgPerBatch = parseFloat(document.getElementById("fishRatePerKgPerBatch").value);
		var gravyRatePerKgPerBatch = parseFloat(document.getElementById("gravyRatePerKgPerBatch").value);	

		calcSeaFoodCost = fishWt*fishRatePerKgPerBatch;
		if (!isNaN(calcSeaFoodCost)) {
			document.getElementById("seaFoodCost").value = number_format(calcSeaFoodCost,2,'.','');
		}
		
		calcGravyCost = gravyWt*gravyRatePerKgPerBatch;
		if (!isNaN(calcGravyCost)) {
			document.getElementById("gravyCost").value = number_format(calcGravyCost,2,'.','');
		}	

		// Find RM Cost
		calcRMCost = parseFloat(document.getElementById("seaFoodCost").value) + parseFloat(document.getElementById("gravyCost").value);
		if (!isNaN(calcRMCost)) {
			document.getElementById("rMCost").value = number_format(calcRMCost,2,'.','');
		}
		
		// Find testing Cost
		findTestingCost();
		//Basic Manufacturing Cost
		findBasicManufacturingCost();		
	}

	// Find Testing Cost
	function findTestingCost()
	{
		var calcTestingCost = 0;
		var pouchesTestPerBatchUnit = parseFloat(document.getElementById("pouchesTestPerBatchUnit").value);
		var processingCost 	= parseFloat(document.getElementById("processingCost").value);
		var rMCost		= parseFloat(document.getElementById("rMCost").value);

		calcTestingCost = (processingCost+rMCost) * pouchesTestPerBatchUnit;
		if (!isNaN(calcTestingCost)) {
			document.getElementById("testingCost").value = number_format((calcTestingCost/100),2,'.','');
		}
		
		//Basic Manufacturing Cost
		findBasicManufacturingCost();
	}

	//Basic Manufacturing Cost
	function findBasicManufacturingCost()
	{
		var productOuterPkgCost = 0;
		var productInnerPkgCost = 0;
		var testingCost 	= 0;
		var processingCost 	= 0;
		var rMCost		= 0;

		if (document.getElementById("productOuterPkgCost").value!="") 
			productOuterPkgCost = parseFloat(document.getElementById("productOuterPkgCost").value);
		if (document.getElementById("productInnerPkgCost").value!="") 
			productInnerPkgCost = parseFloat(document.getElementById("productInnerPkgCost").value);
		if (document.getElementById("testingCost").value!="") 
			testingCost = parseFloat(document.getElementById("testingCost").value);
		if (document.getElementById("processingCost").value!="") 
			processingCost = parseFloat(document.getElementById("processingCost").value);
		if (document.getElementById("rMCost").value!="") 
			rMCost = parseFloat(document.getElementById("rMCost").value);
		
		calcMftingCost =  productOuterPkgCost+productInnerPkgCost+testingCost+processingCost+rMCost;
		if (!isNaN(calcMftingCost)) {
			document.getElementById("basicManufactCost").value = number_format(calcMftingCost,2,'.','');
		}

		// Find Holding Cost
		findHoldingCost();
		//Find Admin Overhead Charge
		findAdminOverheadCharge();
	}


	// Find Holding Cost
	//=(basicManufactCost*(holdingCost/No of Days in Year)*Holding Duration
	function findHoldingCost()
	{
		var calcHoldingCost = 0;
		var basicManufactCost	= parseFloat(document.getElementById("basicManufactCost").value);
		var holdingCost		= parseFloat(document.getElementById("holdingCost").value);
		var holdingDuration 	= parseFloat(document.getElementById("holdingDuration").value);
		var noOfDaysInYear 	= parseFloat(document.getElementById("noOfDaysInYear").value);
		
		calcHoldingCost = (basicManufactCost*((holdingCost/100)/noOfDaysInYear)*holdingDuration);
		if (!isNaN(calcHoldingCost)) {
			document.getElementById("proHoldingCost").value = number_format(calcHoldingCost,2,'.','');
		}
		//Find Admin Overhead Charge
		findAdminOverheadCharge();		
	}

	//Find Admin Overhead Charge
	
	//=SUM(proHoldingCost+proAdvertCost+mktgCost+basicManufactCost)*adminOverheadChargesCost
	function findAdminOverheadCharge()
	{
		var calcAdminOverheadCharge = 0;
		var proHoldingCost 	= parseFloat(document.getElementById("proHoldingCost").value);
		var proAdvertCost 	= parseFloat(document.getElementById("proAdvertCost").value);
		var mktgCost 		= parseFloat(document.getElementById("mktgCost").value);
		var basicManufactCost	= parseFloat(document.getElementById("basicManufactCost").value);

		var adminOverheadChargesCost = parseFloat(document.getElementById("adminOverheadChargesCost").value);
		
		calcAdminOverheadCharge = (proHoldingCost+proAdvertCost+mktgCost+basicManufactCost)*adminOverheadChargesCost;
		if (!isNaN(calcAdminOverheadCharge)) {
			document.getElementById("adminOverhead").value = number_format((calcAdminOverheadCharge/100),2,'.','');
		}	
		
		// Total Host
		findTotalFactoryCost();	
	}

	// Total Host
	function findTotalFactoryCost()
	{
		var calcTotalCost = 0;
		var proHoldingCost 	= parseFloat(document.getElementById("proHoldingCost").value);
		var proAdvertCost 	= parseFloat(document.getElementById("proAdvertCost").value);
		var mktgCost 		= parseFloat(document.getElementById("mktgCost").value);
		var basicManufactCost	= parseFloat(document.getElementById("basicManufactCost").value);
		var adminOverhead	= parseFloat(document.getElementById("adminOverhead").value);

		calcTotalCost	= proHoldingCost+proAdvertCost+mktgCost+basicManufactCost+adminOverhead;
		if (!isNaN(calcTotalCost)) {
			document.getElementById("totalCost").value = number_format(calcTotalCost,2,'.','');
		}		
		
		//Profit Margin
		findProfitMargin();
		//Actual Fact Cost
		findActualFactCost();
	}

	//Profit Margin
	function findProfitMargin()
	{
		var calcProfitMargin = 0;
		var totalCost	 = parseFloat(document.getElementById("totalCost").value);
		var profitMargin = parseFloat(document.getElementById("profitMargin").value);
		calcProfitMargin = totalCost*profitMargin; 
		if (!isNaN(calcProfitMargin)) {
			document.getElementById("productProfitMargin").value = number_format((calcProfitMargin/100),2,'.','');
		}		

		//Actual Fact Cost
		findActualFactCost();
	}
	
	//Actual Fact Cost
	function findActualFactCost()
	{
		var calcActualCost = 0;
		var totalCost = parseFloat(document.getElementById("totalCost").value);
		var productProfitMargin = parseFloat(document.getElementById("productProfitMargin").value);
		calcActualCost = totalCost+productProfitMargin;
		if (!isNaN(calcActualCost)) {
			document.getElementById("actualFactCost").value = number_format(calcActualCost,2,'.','');
		}

		//Contingency
		findContingency();
	}

	//Contingency
	// Ideal Fact cost - actual Fact cost
	function findContingency()
	{
		var idealFactoryCost = 0;
		var actualFactCost = 0;
		
		if (document.getElementById("idealFactoryCost").value!="")
			idealFactoryCost = parseFloat(document.getElementById("idealFactoryCost").value);
		if (document.getElementById("actualFactCost").value!="")
			actualFactCost = parseFloat(document.getElementById("actualFactCost").value);

		calcContingency = idealFactoryCost-actualFactCost;
		if (!isNaN(calcContingency)) {
			document.getElementById("contingency").value = number_format(calcContingency,2,'.','');
		}	

		//PM in % of FC
		findPMInPercentOfFc();	
	}

	//PM in % of FC
	//(PrfitMargin+Contigency)/Ideal Fact Cost
	function findPMInPercentOfFc()
	{
		var productProfitMargin = parseFloat(document.getElementById("productProfitMargin").value);
		var contingency 	= parseFloat(document.getElementById("contingency").value);
		var idealFactoryCost 	= parseFloat(document.getElementById("idealFactoryCost").value);

		calcPMInPercentOfFC = (productProfitMargin+contingency)/idealFactoryCost;

		if (!isNaN(calcPMInPercentOfFC) && document.getElementById("productProfitMargin").value!="") {
			document.getElementById("pmInPercentOfFc").value = number_format(Math.abs((calcPMInPercentOfFC*100)),2,'.','');
		} else {
			document.getElementById("pmInPercentOfFc").value = 0;
		}
	}function validateStateMaster(form)
{
	//var stateCode		= form.stateCode.value;
	var stateName	= form.stateName.value;	
	//var VAT		= form.VAT.value;
	
	if (stateName=="") {
		alert("Please enter a State Name.");
		form.stateName.focus();
		return false;
	}
	
	/*
	if (VAT=="") {
		alert("Please enter VAT.");
		form.VAT.focus();
		return false;
	}
	
	if (!checkNumber(VAT)) {
		form.VAT.value = "";
		return false;
	}
	*/
	
	if (!confirmSave()) {
		return false;
	}
	return true;
}

	

function validateCityMaster(form)
{
	
	//var cityCode	= form.cityCode.value;
	var cityName	= form.cityName.value;
	var state	= form.state.value;

	
	/*
	if (cityCode=="") {
		alert("Please enter a City Code.");
		form.cityCode.focus();
		return false;
	}
	*/
	
	if (cityName=="") {
		alert("Please enter a City Name.");
		form.cityName.focus();
		return false;
	}

	if (state=="") {
		alert("Please select a State.");
		form.state.focus();
		return false;
	}
	
	if (!confirmSave()) {
		return false;
	}
	return true;
}

	

function validateDistMarginRateListMaster(form)
{
	
	var rateListName	=	form.rateListName.value;	
	var startDate		=	form.startDate.value;
	var addMode		= document.getElementById("hidAddMode").value;
	
	if (rateListName=="" ) {
		alert("Please enter a Rate list Name.");
		form.rateListName.focus();
		return false;
	}

	if (startDate=="") {
		alert("Please select a date.");
		form.startDate.focus();
		return false;
	}
	
	if (addMode!="") {
		var selDistributor = form.selDistributor.value;
		if (selDistributor=="" ) {
			alert("Please select a Distributor.");
			form.selDistributor.focus();
			return false;
		}
	}	

	if (!confirmSave()) {
		return false;
	} else {
		return true;
	}
}

function validateDistMarginStructureMaster(form)
{
	var selDistributor	= form.selDistributor.value;
	var selProduct		= form.selProduct.value;	
	var distMarginRateList	= form.distMarginRateList.value;

	var stateSelected	= false;
	
	if (selDistributor=="") {
		alert("Please select a Distributor.");
		form.selDistributor.focus();
		return false;
	}

	if (selProduct=="") {
		alert("Please select a Product.");
		form.selProduct.focus();
		return false;
	}	

	var hidDistStateRowCount = document.getElementById("hidDistStateRowCount").value;
	for (j=1; j<=hidDistStateRowCount; j++) {
		var avgMargin 		= document.getElementById("avgMargin_"+j);
		var octroi		= document.getElementById("octroi_"+j);
		var vat			= document.getElementById("vat_"+j);
		var freight		= document.getElementById("freight_"+j);	
		var transportCost 	= document.getElementById("transportCost_"+j);

		if (avgMargin.value=="") {
			alert("Please define Distributor Margin Structure.");
			return false;
		}

		if (octroi.value=="") {
			alert("Please enter Octroi Percentage.");
			octroi.focus();
			return false;
		}
		if (vat.value=="") {
			alert("Please enter VAT Percentage.");
			vat.focus();
			return false;
		}
		if (freight.value=="") {
			alert("Please enter Freight Percentage.");
			freight.focus();
			return false;
		}
		if (transportCost.value=="") {
			alert("Please enter Transport Cost.");
			transportCost.focus();
			return false;
		}
		stateSelected	= true;
	}

	if (!stateSelected) {
		alert("Please assign a state for the selected distributor");
		return false;
	}
	if (distMarginRateList=="") {
		alert("Please select a Rate list.");
		form.distMarginRateList.focus();
		return false;
	}

	if (!confirmSave()) {
		return false;
	}
	return true;
}

	// display CST % When select Form F= Y
	/*
	function calcDisplayCSTDisc()
	{
		var hidCstRate = document.getElementById("hidCstRate").value;
		//var cstDisc	= document.getElementById("cstDisc").value;
		var billingForm = document.getElementById("billingForm").value;
		if (billingForm=='Y') document.getElementById("cstDisc").value = hidCstRate;
		else document.getElementById("cstDisc").value = 0;
	}
	*/


	/****************************************
	Execution Order is 1) expression in brackets 2) division 3) multiplication 4) addition and 5) subtraction 
	aVG MAGN=>1-((((1-Retailer Margin)*(1-Sub-Dist Margin))/(1+VAT Comp)/(1+Entry Tax))*((1-Dist Margin)*(1-Dist CD))*((1-SS Margin)*(1-SS CD))/(1+CST Disc));	
	=>1-((((1-(20/100))*(1-(0/100)))/(1+(4/100))/(1+(0/100)))*((1-(8/100))*(1-(2/100)))*((1-(0/100))*(1-(0/100)))/(1+(0/100)))
	***************************************/	
	

// Calculate Average distributor margin Structure
/************************************************
	markup  /(1+%) -- markdown *(1-%)
************************************************/
function calcDistAvgMarginStruct()
{
	var hidDistStateRowCount = document.getElementById("hidDistStateRowCount").value;
	
	var hidCstRate = document.getElementById("hidCstRate").value;		

	for (j=1; j<=hidDistStateRowCount; j++) {			
		var sBillingForm = document.getElementById("billingForm_"+j).value; // Distributor State Base
		var billingForm	= "";
		//Billing Form VN: VAT NO, CFF: Form F, FC:Form C, FN:Form None
		if (sBillingForm=='FF' || sBillingForm=='FC' || sBillingForm=='FN') {
			billingForm = 'Y';
		} else if (sBillingForm=='VN') {
			billingForm = 'N';
		}
		var hidFieldRowCount = document.getElementById("hidFieldRowCount_"+j).value;
		var actualValue = 0;
		var calcDistMargin = 0;	
		
		var calcMarkUpValue=0;
		var totalMarkUpValue=1;
		var totalMarkDownValue = 1;
		//alert(billingForm+"<->"+hidFieldRowCount+"->"+hidCstRate);
		for (i=1; i<=hidFieldRowCount; i++) {
			var distMarginPercent = parseFloat(document.getElementById("distMarginPercent_"+i+"_"+j).value);
			var priceCalcType = document.getElementById("priceCalcType_"+i+"_"+j).value;	
			var useAvgDistMagn = document.getElementById("useAvgDistMagn_"+i+"_"+j).value;
			var mgnStructBillingOnFormF = document.getElementById("mgnStructBillingOnFormF_"+i+"_"+j).value;
			
			if (mgnStructBillingOnFormF=='Y' && billingForm=='Y') {
				document.getElementById("distMarginPercent_"+i+"_"+j).value = hidCstRate;
			} else if(mgnStructBillingOnFormF=='Y' && billingForm=='N') {
				document.getElementById("distMarginPercent_"+i+"_"+j).value = 0;
			}

			actualValue =  parseFloat(distMarginPercent/100);
			if (useAvgDistMagn=='Y') {				
				if (priceCalcType=='MU') {
					calcMarkUpValue = parseFloat(1+actualValue);
					totalMarkUpValue /= calcMarkUpValue;			
				}

				if (priceCalcType=='MD') {
					calcMarkDownValue = parseFloat(1-actualValue);				
					totalMarkDownValue *= calcMarkDownValue;
				}
			}
		} // Field Row count ends here		
		calcDistMargin = (1-(totalMarkUpValue*totalMarkDownValue))*100;		
		if (!isNaN(calcDistMargin)) {
			document.getElementById("avgMargin_"+j).value = number_format(calcDistMargin,2,'.','');	
		}
	} // State Count loop Ends Here
}


	function validateOrderDispatched(form)
{	
	var selSOId		= form.selSOId.value;
	var paymentStatus	= form.paymentStatus.value;		
	var dispatchDate	= form.dispatchDate.value;

	var selStatus		= form.selStatus.value;
		
	var isComplete		= form.isComplete.checked;
	var salesOrderItem	= form.salesOrderItem.value;
	
	if (selSOId=="") {
		alert("Please select a Sales Order ID.");
		form.selSOId.focus();
		return false;
	}

	if (salesOrderItem<=0) {
		alert(" No Products Found! ");
		form.selSOId.focus();
		return false;	
	}
	if (paymentStatus=="") {
		alert("Please enter Payment Status.");
		form.paymentStatus.focus();
		return false;
	}
		
	if (dispatchDate=="") {
		alert("Please select a Dispatch Date.");
		form.dispatchDate.focus();
		return false;
	}
	if (selStatus=="") {
		alert("Please select a status.");
		form.selStatus.focus();
		return false;
	}
	
	// Checking the Qty
	if (isComplete!="") {
		var isStockAvailable 	= false;
		var hidProductRowCount	=	form.hidProductRowCount.value;
		for (var i=1; i<=hidProductRowCount; i++) {
			var existingQty = number_format(document.getElementById("existingQty_"+i).value,2,'.','');
			var orderedQty = number_format(document.getElementById("orderedQty_"+i).value,2,'.','');
			if (existingQty>orderedQty)  {
				isStockAvailable = true;
			}				
		}
	
		if (!isStockAvailable) {
			alert("Required quantity is not available");
			return false;
		}
	}
	

	if (!confirmSave()) {
		return false;
	} else {
		return true;
	}
}function validateRetailCounterMaster(form)
{
	//var code	= form.code.value;
	var retailCounterName	= form.retailCounterName.value;
	var contactPerson = form.contactPerson.value;
	var state	= form.state.value;
	var city	= form.city.value;
	var distributor = form.distributor.value;
	var area	= document.getElementById("area").value;
	var salesStaff	= form.salesStaff.value;
	var selRtCtCateogry	= form.selRtCtCateogry.value;
	
	//var disCharge	= form.disCharge.value;
	/*
	if (code=="") {
		alert("Please enter a Code.");
		form.code.focus();
		return false;
	}
	*/
	if (retailCounterName=="") {
		alert("Please enter a Retail Counter Name.");
		form.retailCounterName.focus();
		return false;
	}

	if (distributor=="") {
		alert("Please select a distributor.");
		form.distributor.focus();
		return false;
	}

	if (salesStaff=="") {
		alert("Please select a sales staff.");
		form.salesStaff.focus();
		return false;
	}
	
	if (contactPerson=="") {
		alert("Please enter a Contact Person Name.");
		form.contactPerson.focus();
		return false;
	}

	if (state=="") {
		alert("Please select a State.");
		form.state.focus();
		return false;
	}
	
	if (city=="") {
		alert("Please select a City.");
		form.city.focus();
		return false;
	}
	
	if (area=="") {
		alert("Please select atleast one operational area.");
		document.getElementById("area").focus();
		return false;
	}
	if (selRtCtCateogry=="") {
		alert("Please select a Retail Counter Category.");
		form.selRtCtCateogry.focus();
		return false;
	}
	/*
	if (disCharge!="" && !isDigit(disCharge)) {
		alert("please enter a number");
		//document.getElementById("disCharge").value="";
		return false;
	}
	if (disCharge!="") {
		var disTypeM = document.getElementById("disTypeM").checked;
		var disTypeD = document.getElementById("disTypeD").checked;
		//alert(disTypeM+","+disTypeD);
		if (!disTypeM && !disTypeD) {	
			alert("please select Month/Date");
			return false;
		}
		if (disTypeD) {
			var selectFrom = document.getElementById("selectFrom").value;
			var selectTill = document.getElementById("selectTill").value;
			if (selectFrom=="") {
				alert("Please select from date");
				document.getElementById("selectFrom").focus();
				return false;				
			}
			if (selectTill=="") {
				alert("Please select To date");
				document.getElementById("selectTill").focus();
				return false;				
			}
		}
	}	
	*/
	if (!confirmSave()) {
		return false;
	}
	return true;
}





function validateProductConversionMaster(form)
{
	var productCode		=	form.productCode.value;
	var productName		=	form.productName.value;
	var selProduct		=	form.selProduct.value;

	var hidSelProductId	= 	form.hidSelProductId.value;
	
	
	if (productCode=="") {
		alert("Please enter a Product Code.");
		form.productCode.focus();
		return false;
	}

	if (productName=="") {
		alert("Please enter a Product Name.");
		form.productName.focus();
		return false;
	}

	if (selProduct=="") {
		alert("Please select a Reference product.");
		form.selProduct.focus();
		return false;
	}	
	
	if (selProduct!="") {
		var productGmsPerPouch	=	form.productGmsPerPouch.value;
		if (productGmsPerPouch=="") {
			alert("Please enter Gms Per Pouch.");
			form.productGmsPerPouch.focus();
			return false;
		}
	}

	if(!confirmSave()){
			return false;
	}
	return true;
}

//Conversion Rate Per batch
function calcProductConversionRatePerBatch()
{
	var gravyGmsPerPouch = 0;
	var calcRatePerBatch = 0;

	var itemCount 	      = document.getElementById("hidItemCount").value;
	var productKgPerBatch = parseFloat(document.getElementById("productKgPerBatch").value);
	var pouchPerBatch     = parseFloat(document.getElementById("pouchPerBatch").value);
	var productGmsPerPouch = parseFloat(document.getElementById("productGmsPerPouch").value);	
	var productRatePerPouch = parseFloat(document.getElementById("productRatePerPouch").value);
	//var fishGmsPerPouch = document.getElementById("fishGmsPerPouch").value;
	var fishGmsPerPouch = parseFloat(document.getElementById("totalFixedFishQty").value);
	
	calcGravyGmsPerPouch = parseFloat(productGmsPerPouch)-parseFloat(fishGmsPerPouch);
	if (!isNaN(calcGravyGmsPerPouch)) {
		document.getElementById("gravyGmsPerPouch").value = number_format(calcGravyGmsPerPouch,3,'.','');
		gravyGmsPerPouch = parseFloat(document.getElementById("gravyGmsPerPouch").value);
	}


	var getIngPrice = 0;
	var getPercentagePerbatch = 0;
	fishKgPerBatch = 0;
	gravyKgPerBatch = 0;
	fishRatePerBatch=0;
	gravyRatePerBatch = 0;	
	var calcProductKgInPouchPerBatch = 0;

	for (i=1; i<=itemCount; i++) {
		//alert("Here"+i);

		var selIngredient = document.getElementById("selIngredient_"+i).value;
		var fixedQtyChk = document.getElementById("fixedQtyChk_"+i).value;		
		//var fixedQtyChk = document.getElementById("fixedQtyChk_"+i).checked;		
		var quantity  = parseFloat(document.getElementById("quantity_"+i).value);
		var lastPrice = parseFloat(document.getElementById("lastPrice_"+i).value);		
		//Find Rate for each Ingredient
		getIngPrice =  quantity*lastPrice;
		if (!isNaN(getIngPrice)) {
			document.getElementById("ratePerBatch_"+i).value = number_format(Math.abs(getIngPrice),2,'.','');
		}
		// Find Percentage for Each Item
		getPercentagePerbatch = (quantity/productKgPerBatch);
		if (!isNaN(getPercentagePerbatch)) {
			document.getElementById("percentagePerBatch_"+i).value = number_format(Math.abs(getPercentagePerbatch*100),0,'','');
		}
		//Find Gms Per pouch
		getGmsPerPouch = (quantity/pouchPerBatch);
		if (!isNaN(getGmsPerPouch)) {
			document.getElementById("ingGmsPerPouch_"+i).value  = number_format(getGmsPerPouch,3,'.','');
		}
		//Find Percentage Wt
		getPercentageWtPerpouch = ((parseFloat(document.getElementById("ingGmsPerPouch_"+i).value) /productGmsPerPouch)*100);
		if (!isNaN(getPercentageWtPerpouch)) {
			document.getElementById("percentageWtPerPouch_"+i).value = number_format(Math.abs(getPercentageWtPerpouch),2,'.','');
		}
		//Find Rate Per Pouch
		getRatePerPouch = (parseFloat(document.getElementById("ratePerBatch_"+i).value)/pouchPerBatch);
		if (!isNaN(getRatePerPouch)) {
			document.getElementById("ratePerPouch_"+i).value = number_format(Math.abs(getRatePerPouch),2,'.','');
		}
		//Find Percentage Cost Per Pouch
		getPercentageCostPerPouch = ((parseFloat(document.getElementById("ratePerPouch_"+i).value)/productRatePerPouch)*100);
		if (!isNaN(getPercentageCostPerPouch)) {
			document.getElementById("percentageCostPerPouch_"+i).value = number_format(Math.abs(getPercentageCostPerPouch),0,'','');
		}
		//////////////////////////

		if (fixedQtyChk=='Y' && selIngredient!="") {
			//fishKgPerBatch += document.getElementById("quantity_"+i).value;
			fishKgPerBatch += parseFloat(document.getElementById("fixedQty_"+i).value); //Sum of FixedQty	
			fishRatePerBatch += parseFloat(document.getElementById("ratePerBatch_"+i).value);
		} else if (selIngredient!="") {			
			gravyKgPerBatch += parseFloat(document.getElementById("quantity_"+i).value);
			gravyRatePerBatch += parseFloat(document.getElementById("ratePerBatch_"+i).value);
		}		
	} //Loop End
	
	// Assign the values
	document.getElementById("fishGmsPerPouch").value = number_format(fishKgPerBatch,3,'.','');
	document.getElementById("totalFixedFishQty").value = number_format(fishKgPerBatch,3,'.','');

	//Kg (Raw) per Batch
	document.getElementById("fishKgPerBatch").value = number_format(fishKgPerBatch,2,'.','');
	document.getElementById("gravyKgPerBatch").value = number_format(gravyKgPerBatch,2,'.','');
	document.getElementById("productKgPerBatch").value = number_format(( parseFloat(fishKgPerBatch)+parseFloat(gravyKgPerBatch)),2,'.','');

	//Rs. Per Batch
	document.getElementById("fishRatePerBatch").value = number_format(fishRatePerBatch,2,'.','');
	document.getElementById("gravyRatePerBatch").value = number_format(gravyRatePerBatch,2,'.','');
	calcRatePerBatch = parseFloat(fishRatePerBatch)+parseFloat(gravyRatePerBatch);
	if (!isNaN(calcRatePerBatch)) {
		document.getElementById("productRatePerBatch").value =number_format(calcRatePerBatch,2,'.','') ;
	}

	//Rs. Per Kg per Batch
	document.getElementById("fishRatePerKgPerBatch").value = number_format(( parseFloat(document.getElementById("fishRatePerBatch").value)/parseFloat(document.getElementById("fishKgInPouchPerBatch").value)),2,'.','');
	document.getElementById("gravyRatePerKgPerBatch").value = number_format((parseFloat(document.getElementById("gravyRatePerBatch").value)/parseFloat(document.getElementById("gravyKgInPouchPerBatch").value)),2,'.','');
	document.getElementById("productRatePerKgPerBatch").value = number_format(( parseFloat(document.getElementById("fishRatePerKgPerBatch").value)+parseFloat(document.getElementById("gravyRatePerKgPerBatch").value)),2,'.','');
	
	//Rs. Per Pouch
	document.getElementById("fishRatePerPouch").value  =number_format(( parseFloat(document.getElementById("fishRatePerKgPerBatch").value) * fishGmsPerPouch),2,'.','');

	document.getElementById("gravyRatePerPouch").value  = number_format((parseFloat( document.getElementById("gravyRatePerKgPerBatch").value)*gravyGmsPerPouch),2,'.','');

	document.getElementById("productRatePerPouch").value  = number_format((parseFloat(document.getElementById("productRatePerBatch").value)/pouchPerBatch),2,'.','');

	//% (Raw) per Batch
	document.getElementById("fishRawPercentagePerPouch").value = number_format((parseFloat(document.getElementById("fishKgPerBatch").value)/parseFloat(document.getElementById("productKgPerBatch").value))*100,0,'.','');
	document.getElementById("gravyRawPercentagePerPouch").value = number_format(( parseFloat(document.getElementById("gravyKgPerBatch").value)/parseFloat(document.getElementById("productKgPerBatch").value))*100,0,'.','');
	document.getElementById("productRawPercentagePerPouch").value = parseFloat(document.getElementById("fishRawPercentagePerPouch").value) + parseFloat(document.getElementById("gravyRawPercentagePerPouch").value)
	
	// Kg (in Pouch) per Batch
	document.getElementById("fishKgInPouchPerBatch").value = number_format((parseFloat(pouchPerBatch)*parseFloat(fishGmsPerPouch)),2,'.','');
	document.getElementById("gravyKgInPouchPerBatch").value = number_format((parseFloat(pouchPerBatch)*parseFloat(gravyGmsPerPouch)),2,'.','');

	calcProductKgInPouchPerBatch = parseFloat(document.getElementById("fishKgInPouchPerBatch").value) + parseFloat(document.getElementById("gravyKgInPouchPerBatch").value);

	if (!isNaN(calcProductKgInPouchPerBatch)) {
		document.getElementById("productKgInPouchPerBatch").value = number_format(calcProductKgInPouchPerBatch,2,'.','');
	}

	//% per Pouch
	document.getElementById("fishPercentagePerPouch").value  = number_format((fishGmsPerPouch/productGmsPerPouch)*100,0,'.','');
	document.getElementById("gravyPercentagePerPouch").value = number_format((gravyGmsPerPouch/productGmsPerPouch)*100,0,'.','');
	document.getElementById("productPercentagePerPouch").value  = parseFloat(document.getElementById("fishPercentagePerPouch").value) + parseFloat(document.getElementById("gravyPercentagePerPouch").value);

	//% Yield
	document.getElementById("fishPercentageYield").value  = number_format((parseFloat(document.getElementById("fishKgInPouchPerBatch").value)/parseFloat(document.getElementById("fishKgPerBatch").value)),0,'.','');
	document.getElementById("gravyPercentageYield").value  = number_format(( parseFloat(document.getElementById("gravyKgInPouchPerBatch").value)/parseFloat(document.getElementById("gravyKgPerBatch").value)),0,'.','');	
}

/*
product define: net wt 285gm 80gm prawns 10gm fish
batch : filled net wt 300gm net wt proportion for each ingredient Qty

	Net Wt:300
	Prawns: (285-80 = 205-300 = 95)
	Fish: (285-10= 275-300 =25)
*/
// Calculate the Proportion of all ingredient when converting
function productConversionIngProportion()
{
	var productGmsPerPouch    = document.getElementById("productGmsPerPouch").value;
	var hidProductGmsPerPouch = document.getElementById("hidProductGmsPerPouch").value;
	//alert(hidProductGmsPerPouch);
	var itemCount = document.getElementById("hidItemCount").value;

		for (i=1; i<=itemCount; i++) {
			var qty = document.getElementById("quantity_"+i).value;
			var hidQuantity = document.getElementById("hidQuantity_"+i).value;
			var calcProportionValue = parseFloat(hidProductGmsPerPouch) - parseFloat(hidQuantity) - parseFloat(productGmsPerPouch);
			//alert(Math.abs(calcProportionValue));
			if (!isNaN(calcProportionValue)) 
				document.getElementById("quantity_"+i).value = number_format(Math.abs(calcProportionValue),2,'.','');
		}
}function validateClaimProcessing(form)
{
	var isStockAvailable 	= false;
	var selClaim		= form.selClaim.value;
	var dispatchDate	= form.dispatchDate.value;
	var selStatus		= form.selStatus.value;
	var hidReturnMaterialCount	= form.hidReturnMaterialCount.value;
	var isComplete		= form.isComplete.checked;
	
	if (selClaim=="") {
		alert("Please select a claim ID.");
		form.selClaim.focus();
		return false;
	}

	if (hidReturnMaterialCount<=0) {
		alert("No Material Return Records found.");
		form.selClaim.focus();
		return false;
	}
			
	if (dispatchDate=="") {
		alert("Please select a Settled Date.");
		form.dispatchDate.focus();
		return false;
	}

	if (!claimProcessingDateCheck(form)) {
		return false;	
	}

	if (selStatus=="") {
		alert("Please select a status.");
		form.selStatus.focus();
		return false;
	}		

	if (!confirmSave()) return false;
	else return true;
}

// claim Processing dispatch date check
function claimProcessingDateCheck(form)
{	
	var d = new Date();
	var t_date = d.getDate();      // Returns the day of the month
	if (t_date<10) {
		t_date = "0"+t_date;
	}
	var t_mon = d.getMonth() + 1;      // Returns the month as a digit
	if (t_mon<10) {
		t_mon = "0"+t_mon;
	}
	var t_year = d.getFullYear();  // Returns 4 digit year
	
	var curr_date	=	t_date + "/" + t_mon + "/" + t_year;
		
	CDT		=	curr_date.split("/");
	var CD_time	=	new Date(CDT[2], CDT[1], CDT[0]);
	
	var dispatchDate	=	document.getElementById("dispatchDate").value;	
	LDT		=	dispatchDate.split("/");
	var LD_time	=	new Date(LDT[2], LDT[1], LDT[0]);
	
	var one_day=1000*60*60*24

	//Calculate difference btw the two dates, and convert to days
	var extendedDays = Math.ceil((LD_time.getTime()-CD_time.getTime())/(one_day));
		
	if (extendedDays<0) {
		alert("Dispatch Date should be greater than or equal to current date");
		document.getElementById("dispatchDate").focus();
		return false;
	}
	return true;	
}function validateMarginStructure (form)
{
	var marginStructureCode = form.marginStructureCode.value;
	var marginStructureName = form.marginStructureName.value;
	var markUp		= form.priceCalcType[0].checked;	
	var markDown		= form.priceCalcType[1].checked;
	var schemeChk		= form.schemeChk.checked;	

	if (marginStructureCode=="") {
		alert("Please enter a Margin Structure Code.");
		form.marginStructureCode.focus();
		return false;
	}

	if (marginStructureName=="") {
		alert("Please enter a Margin Structure Name.");
		form.marginStructureName.focus();
		return false;
	}

	if (schemeChk!="") {
		var selSchemeHeadId = form.selSchemeHeadId.value;
		if (selSchemeHeadId=="") {
			alert("Please select a Margin structure Scheme Code.");
			form.selSchemeHeadId.focus();
			return false;
		}
	}	

	if (!markUp && !markDown) {
		alert("Please select any one Price calculation type");
		return false;
	}			

	if (!confirmSave()) return false;
	else return true;	
}
// Show Scheme head
function showSchemeHead()
{
	if (document.getElementById("schemeChk").checked) {
		document.getElementById( "selScheme" ).style.display = "block";	
	} else {
		document.getElementById( "selScheme" ).style.display = "none";	
	}
}

// Hide Scheme head when loading
function hidSchemeHead()
{
	document.getElementById( "selScheme" ).style.display = "none";	
}function validateProductPricing(form)
{
	var selProduct		= form.selProduct.value;
	var selBuffer		= form.selBuffer.value;
	var mrp			= form.mrp.value;
	var productPriceRateList = form.productPriceRateList.value;
	var hidNumOfDistRecords = document.getElementById("hidNumOfDistRecords").value;

	if (selProduct=="") {
		alert("Please select a Product.");
		form.selProduct.focus();
		return false;
	}	
	
	if (selBuffer=="") {
		alert("Please select Buffer.");
		form.selBuffer.focus();
		return false;
	}

	if (mrp=="") {
		alert("Please enter an MRP.");
		form.mrp.focus();
		return false;
	}

	if (productPriceRateList=="") {
		alert("Please select a Rate list.");
		form.productPriceRateList.focus();
		return false;
	}
		
	if (hidNumOfDistRecords==0) {
		alert("No Distributor Records Found.");
		//form.productPriceRateList.focus();
		return false;
	}

	if (!confirmSave()) {
		return false;
	}
	return true;
}

	// calculate average dist margin for Each product
	function calcAvgProductMargin()
	{
		var calcProductMagn=0 ;
		var factoryCost = parseFloat(document.getElementById("factoryCost").value);
		var avgTotalDistMargin = parseFloat(document.getElementById("avgTotalDistMargin").value);
		//=factoryCost/(1-(avgDistMargin/100))
		calcProductMagn = factoryCost/(1-parseFloat(avgTotalDistMargin/100));		
		if (!isNaN(calcProductMagn)) {
			document.getElementById("avgDistMgn").value = number_format(calcProductMagn,2,'.','');
		}
	}

	// Find Margin Sscheme (MRP- Avg distMargin)
	function findMarginforScheme()
	{
		var mrp = parseFloat(document.getElementById("mrp").value);
		var avgDistMgn = parseFloat(document.getElementById("avgDistMgn").value);
		calcMarginForScheme = mrp-avgDistMgn;
		if (!isNaN(calcMarginForScheme)) {
			document.getElementById("mgnForScheme").value = number_format(calcMarginForScheme,2,'.',''); 
		}

		// No of Packs free
		noOfPacksForOneFree();
	}

	// No of Packs for One Free (=Basic Manuf Cost/Mgn For Scheme)
	function noOfPacksForOneFree()
	{
		var calcNoOfPacksFree = 0;
		var basicManufCost = parseFloat(document.getElementById("basicManufCost").value);
		var mgnForScheme   = parseFloat(document.getElementById("mgnForScheme").value);
		calcNoOfPacksFree = Math.floor(basicManufCost/mgnForScheme);
		if (!isNaN(calcNoOfPacksFree)) {
			document.getElementById("noOfPacksFree").value = number_format(calcNoOfPacksFree,0,'','');
		}
	}

	// Include Buffer
	function includeBuffer()
	{
		var calcProfitMargin = 0;	
		var selBuffer	= document.getElementById("selBuffer").value;
		//alert(selBuffer);
		var hidContigency = parseFloat(document.getElementById("hidContigency").value);

		if (selBuffer=='Y') {
			document.getElementById("inclBuffer").value = hidContigency;
		} else {
			document.getElementById("inclBuffer").value = 0;
		}

		var hidProfitMargin = parseFloat(document.getElementById("hidProfitMargin").value);
		var inclBuffer	    = parseFloat(document.getElementById("inclBuffer").value);
		calcProfitMargin = hidProfitMargin + inclBuffer;
		//alert("ProfitMgn="+hidProfitMargin+"--"+inclBuffer);
		if (!isNaN(calcProfitMargin)) {
			document.getElementById("profitMargin").value = number_format(calcProfitMargin,2,'.','');
		}

		// Caalculate Distributor wise Profit Margin
		calcDistributorProfitMargin();
	}

	// Calculate Distributor wise Profit Margin
	function calcDistributorProfitMargin()
	{
		var distributorCost = 0;
		var margin = 0;
		var totalDistMargin = 0;
		var grandTotalDistMargin = 0;
		var calcActualProfitMargin = 0;
		var calcOnMRP	= 0;
		var calcOnFactoryCost = 0;

		var mrp = parseFloat(document.getElementById("mrp").value);
		var factoryCost = parseFloat(document.getElementById("factoryCost").value); 
		var profitMargin = parseFloat(document.getElementById("profitMargin").value); 
		var selProduct	= document.getElementById("selProduct").value;
		var hidNumOfDistRecords = document.getElementById("hidNumOfDistRecords").value;
	if (selProduct!="" && hidNumOfDistRecords>0) {
		var hidDistributorRowCount = document.getElementById("hidDistributorRowCount").value;
	
	for (m=1; m<=hidDistributorRowCount; m++) {

		/*********** Dist Struct Margin  **********************************/
		var calcFirstRow = 0;
		var calcMarkUpMgn = 0;
		var calcMarkDownMgn = 0;
		var calcActualDistnCost = 0;
		
		var mrp 	= parseFloat(document.getElementById("mrp").value);
		var factoryCost = parseFloat(document.getElementById("factoryCost").value);

		var structArray = new Array();		
		var hidFieldRowCount = document.getElementById("hidFieldRowCount_"+m).value;
		//alert(hidFieldRowCount);
		var prevUseAvgDistMagn = 'Y';
		for (k=1; k<=hidFieldRowCount; k++) {
			var marginStructureId = document.getElementById("marginStructureId_"+m+"_"+k).value;
			var distMarginPercent = parseFloat(document.getElementById("distMarginPercent_"+m+"_"+k).value);
			var priceCalcType = document.getElementById("priceCalcType_"+m+"_"+k).value;	
			var useAvgDistMagn = document.getElementById("useAvgDistMagn_"+m+"_"+k).value;
	
			var schemeChk	= document.getElementById("schemeChk_"+m+"_"+k).value;

			if (prevUseAvgDistMagn!=useAvgDistMagn) {
				// Setting Cost to Distributor Or Stockist
				document.getElementById("costToDistOrStkist_"+m).value = document.getElementById("distProfitMargin_"+m+"_"+(k-1)).value;
			}			

			if (k==1 && priceCalcType=='MD') {
				calcFirstRow = mrp*(1-(distMarginPercent/100));
				if (!isNaN(calcFirstRow)) {
					document.getElementById("distProfitMargin_"+m+"_"+k).value = number_format(calcFirstRow,2,'.',''); 
				}
			}
		
			if (k>1 && useAvgDistMagn=='Y') {
				if (priceCalcType=='MU') {
					calcMarkUpMgn = ( parseFloat(document.getElementById("distProfitMargin_"+m+"_"+(k-1)).value)/(1+(distMarginPercent/100)));
					if (!isNaN(calcMarkUpMgn)) {
						document.getElementById("distProfitMargin_"+m+"_"+k).value = number_format(calcMarkUpMgn,2,'.',''); 
					}
				}
				if (priceCalcType=='MD') {
					calcMarkDownMgn = ( parseFloat(document.getElementById("distProfitMargin_"+m+"_"+(k-1)).value)*(1-(distMarginPercent/100)));
					if (!isNaN(calcMarkDownMgn)) {
						document.getElementById("distProfitMargin_"+m+"_"+k).value = number_format(calcMarkDownMgn,2,'.',''); 
					}
				}
			}		
				
			if (useAvgDistMagn=='Y') {
				structArray[marginStructureId] = document.getElementById("distProfitMargin_"+m+"_"+k).value;
			}

			prevUseAvgDistMagn=useAvgDistMagn;	// setting Previous Value
		}
		// find the Scheme Value
		var totalScheme = 0;
		for (key in structArray) {
			for (k=1; k<=hidFieldRowCount; k++) {
				var useAvgDistMagn = document.getElementById("useAvgDistMagn_"+m+"_"+k).value;
				var schemeChk	= document.getElementById("schemeChk_"+m+"_"+k).value;
				var selSchemeHeadId = document.getElementById("selSchemeHeadId_"+m+"_"+k).value;
				var distMarginPercent = parseFloat(document.getElementById("distMarginPercent_"+m+"_"+k).value);
				if (useAvgDistMagn=='N' && schemeChk=='Y') {
					//alert(key+"=>"+structArray[key]+"="+selSchemeHeadId);
					calcValue = parseFloat(structArray[key]*(distMarginPercent/100) ) 
					if (key==selSchemeHeadId) {				
						document.getElementById("distProfitMargin_"+m+"_"+k).value=number_format(calcValue,2,'.','');
						totalScheme += calcValue;
					}					
				}
			}			
		}
		// Struct Magn Cost Defining End ////////////
		var costToDistOrStkist = parseFloat(document.getElementById("costToDistOrStkist_"+m).value);

		//Act Distn Cost
		var calcActualDistnCost = costToDistOrStkist-totalScheme;
		if (!isNaN(calcActualDistnCost)) {
			document.getElementById("actualDistnCost_"+m).value = number_format(calcActualDistnCost,2,'.','');
		}

		// Octroi
		var calcOctroi = 0;
		var octroiPercent = parseFloat(document.getElementById("octroiPercent_"+m).value);
		calcOctroi = costToDistOrStkist * (octroiPercent/100);
		if (!isNaN(calcOctroi)) {
			document.getElementById("octroi_"+m).value = number_format(calcOctroi,2,'.','');
		}

		//Insurance
		var calcInsurance = 0;
		var insuranceCost = parseFloat(document.getElementById("insuranceCost_"+m).value);
		calcInsurance = costToDistOrStkist * (insuranceCost/100);
		if (!isNaN(calcInsurance)) {
			document.getElementById("insurance_"+m).value = number_format(calcInsurance,2,'.','');
		}
		
		//VAT / CST
		var calcVatOrCST = 0;
		var taxType = document.getElementById("taxType_"+m).value;
		var vatPercent = parseFloat(document.getElementById("vatPercent_"+m).value);
		var billingFormF = document.getElementById("billingFormF_"+m).value;
		var hidCstRate = parseFloat(document.getElementById("hidCstRate_"+m).value);
		/*
			FF: 0%, FC:2%, FN:4% (vat rate) not complete info
		*/
		if (taxType=='VAT') {
			calcVatOrCST = costToDistOrStkist-costToDistOrStkist/(1+(vatPercent/100));
		} else if (billingFormF=='FF') {
			calcVatOrCST = costToDistOrStkist-costToDistOrStkist/(1+(hidCstRate/100));
		} else {
			calcVatOrCST = 0;	
		}
		if (!isNaN(calcVatOrCST)) {
			document.getElementById("vatOrCst_"+m).value = number_format(calcVatOrCST,2,'.','');
		}

		// Excise 
		var calcExcise = 0;
		var productExciseRatePercent = parseFloat(document.getElementById("productExciseRatePercent_"+m).value);
		
		var vatOrCst = parseFloat(document.getElementById("vatOrCst_"+m).value);
		if (productExciseRatePercent>0) {
			calcExcise = costToDistOrStkist-vatOrCst-(costToDistOrStkist-vatOrCst)/(1+(productExciseRatePercent/100));
		} 

		if (!isNaN(calcExcise)) {
			document.getElementById("excise_"+m).value = number_format(calcExcise,2,'.','');
		}

		// EducationCess
		var calcEduactionCess = 0;
		var educationCess = parseFloat(document.getElementById("educationCess_"+m).value);
		var excise = parseFloat(document.getElementById("excise_"+m).value);
		calcEduactionCess = excise * educationCess;
		if (!isNaN(calcEduactionCess)) {
			document.getElementById("eduCess_"+m).value = number_format(calcEduactionCess,2,'.','');
		}

		// Basic Cost
		var calcBasicCost = 0;
		var actualDistnCost 	= parseFloat(document.getElementById("actualDistnCost_"+m).value);
		var octroi 		= parseFloat(document.getElementById("octroi_"+m).value);
		var freight		= parseFloat(document.getElementById("freight_"+m).value);
		var insurance 		= parseFloat(document.getElementById("insurance_"+m).value);
		var vatOrCst 		= parseFloat(document.getElementById("vatOrCst_"+m).value);
		var excise 		= parseFloat(document.getElementById("excise_"+m).value);
		var eduCess 		= parseFloat(document.getElementById("eduCess_"+m).value);
		calcBasicCost = actualDistnCost-(octroi+freight+insurance+vatOrCst+excise+eduCess);
//alert("calcBasicCost="+actualDistnCost+"-"+"("+octroi+"+"+freight+"+"+insurance+"+"+vatOrCst+"+"+excise+"+"+eduCess+")");
		if (!isNaN(calcBasicCost)) {
			document.getElementById("basicCost_"+m).value = number_format(calcBasicCost,2,'.','');
		}

		//Cost Margin
		var calcCostMargin = 0;
		var basicCost = parseFloat(document.getElementById("basicCost_"+m).value);
		calcCostMargin = basicCost-factoryCost;
		if (!isNaN(calcCostMargin)) {
			document.getElementById("costMargin_"+m).value = number_format(calcCostMargin,2,'.','');
		}

		//Actual Profit Margin
		var calcActualProfitMgn = 0;
		// factoryProfitMargin
		var factoryProfitMargin = parseFloat(document.getElementById("profitMargin").value);
		var costMargin = parseFloat(document.getElementById("costMargin_"+m).value);
		calcActualProfitMgn = costMargin+factoryProfitMargin;
		//alert(basicCost+"-"+factoryCost+">"+costMargin+"="+factoryProfitMargin);
		if (!isNaN(calcActualProfitMgn)) {
			document.getElementById("actualProfitMgn_"+m).value = number_format(calcActualProfitMgn,2,'.','');
			
			// display the actual Profit Margin
			document.getElementById("distriActualProfitMargin_"+m).value = number_format(calcActualProfitMgn,2,'.','');
			grandTotalDistMargin += calcActualProfitMgn;
		}
		
		// On MRP
		var calcOnMrpPercent = 0;
		var actualProfitMgn = parseFloat(document.getElementById("actualProfitMgn_"+m).value);
		calcOnMrpPercent = actualProfitMgn/mrp;
		if (!isNaN(calcOnMrpPercent)) {
			document.getElementById("onMrp_"+m).value = number_format(calcOnMrpPercent,2,'.','');
		}

		// On Factory Cost
		var calcOnFactoryCost = 0;
		var calcOnFactoryCost = actualProfitMgn/factoryCost;
		if (!isNaN(calcOnFactoryCost)) {
			document.getElementById("onFactoryCost_"+m).value = number_format(calcOnFactoryCost,2,'.','');
		}
		
		/********************************************/
			/*
			var avgDistributorMargin = parseFloat(document.getElementById("avgDistributorMargin_"+m).value); 
			var distriTransportCost = parseFloat(document.getElementById("distriTransportCost_"+m).value);
			
			//eg: mrp: 100 ->dist. avg: 40%
			//mrp-(mrp*40%)= 60rs-transportation Cost= dist cost-ex factory cost=margin+ factory profit margin = actual Profit Margin
			distributorCost = mrp-((mrp*avgDistributorMargin)/100)-distriTransportCost;
			if (!isNaN(distributorCost)) {
				document.getElementById("costToDistOrStkist_"+m).value = number_format(distributorCost,2,'.','');
			}
			margin = distributorCost-factoryCost;
			totalDistMargin = margin + profitMargin;
			//alert(totalDistMargin);
			grandTotalDistMargin += totalDistMargin;  // Find Product Actual Profit Margin
			if (!isNaN(totalDistMargin)) {
				document.getElementById("distriActualProfitMargin_"+m).value = number_format(totalDistMargin,2,'.','');
			}
			*/			
		}
	}	
		
	// Product Actual Profit Margin
		calcActualProfitMargin = grandTotalDistMargin/hidDistributorRowCount;
		if (!isNaN(calcActualProfitMargin)) {
			document.getElementById("actualProfitMargin").value = number_format(calcActualProfitMargin,2,'.','');
		}
		// On MRP (actualProfitMargin/mrp)
		var actualProfitMargin = parseFloat(document.getElementById("actualProfitMargin").value);
		calcOnMRP = actualProfitMargin/mrp;
		if (!isNaN(calcOnMRP)) {
			document.getElementById("onMRP").value = number_format(calcOnMRP,2,'.','');
		}

		//On Factory Cost (actualProfitMargin/factoryCost)
		calcOnFactoryCost = actualProfitMargin/factoryCost;
		if (!isNaN(calcOnFactoryCost)) {
			document.getElementById("onFactoryCost").value = number_format(calcOnFactoryCost,2,'.','');
		}		
	}function validateProductPriceRateListMaster(form)
{
	
	var rateListName	=	form.rateListName.value;
	
	var startDate		=	form.startDate.value;
	
	if (rateListName=="" ) {
		alert("Please enter a Rate list Name.");
		form.rateListName.focus();
		return false;
	}

	if (startDate=="") {
		alert("Please select a date.");
		form.startDate.focus();
		return false;
	}
	
	if (!confirmSave()) return false;
	else return true;
}

function validateDistributorProductPrice(form)
{
	var selDistributor	= form.selDistributor.value;
	var selProduct		= form.selProduct.value;
	

	if (selDistributor=="") {
		alert("Please select a Distributor.");
		form.selDistributor.focus();
		return false;
	}

	if (selProduct=="") {
		alert("Please select a Product.");
		form.selProduct.focus();
		return false;
	}	
		
	if (!confirmSave()) {
		return false;
	}
	return true;
}

	// Find Margin Structure Profit Margin
	function calcDistStructProfitMgn()
	{
		var selDistributor = document.getElementById("selDistributor").value;
		var selProduct = document.getElementById("selProduct").value;
		if (selDistributor!="" && selProduct!="") {

		var calcFirstRow = 0;
		var calcMarkUpMgn = 0;
		var calcMarkDownMgn = 0;
		var calcActualDistnCost = 0;
		
		var mrp 	= parseFloat(document.getElementById("mrp").value);
		var factoryCost = parseFloat(document.getElementById("factoryCost").value);

		var structArray = new Array();
		//var percentArray = new Array();
		//var val
		var hidFieldRowCount = document.getElementById("hidFieldRowCount").value;
		var prevUseAvgDistMagn = 'Y';
		for (i=1; i<=hidFieldRowCount; i++) {
			var marginStructureId = document.getElementById("marginStructureId_"+i).value;
			var distMarginPercent = parseFloat(document.getElementById("distMarginPercent_"+i).value);
			var priceCalcType = document.getElementById("priceCalcType_"+i).value;	
			var useAvgDistMagn = document.getElementById("useAvgDistMagn_"+i).value;
	
			var schemeChk	= document.getElementById("schemeChk_"+i).value;

			if (prevUseAvgDistMagn!=useAvgDistMagn) {
				// Setting Cost to Distributor Or Stockist
				document.getElementById("costToDistOrStkist").value = document.getElementById("distProfitMargin_"+(i-1)).value;
			}
	
			

			if (i==1 && priceCalcType=='MD') {
				calcFirstRow = mrp*(1-(distMarginPercent/100));
				if (!isNaN(calcFirstRow)) {
					document.getElementById("distProfitMargin_1").value = number_format(calcFirstRow,2,'.',''); 
				}
			}
		
			if (i>1 && useAvgDistMagn=='Y') {				
				if (priceCalcType=='MU') {				
					calcMarkUpMgn = ( parseFloat(document.getElementById("distProfitMargin_"+(i-1)).value)/(1+(distMarginPercent/100)));
					if (!isNaN(calcMarkUpMgn)) {
						document.getElementById("distProfitMargin_"+i).value = number_format(calcMarkUpMgn,2,'.',''); 
					}
				}
				if (priceCalcType=='MD') {
					calcMarkDownMgn = ( parseFloat(document.getElementById("distProfitMargin_"+(i-1)).value)*(1-(distMarginPercent/100)));
					if (!isNaN(calcMarkDownMgn)) {
						document.getElementById("distProfitMargin_"+i).value = number_format(calcMarkDownMgn,2,'.',''); 
					}
				}
			}

			/*} else {
				document.getElementById("distProfitMargin_"+i).value = document.getElementById("distProfitMargin_"+(i-1)).value;
				// Setting Cost to Distributor Or Stockist
				document.getElementById("costToDistOrStkist").value = document.getElementById("distProfitMargin_"+i).value;
			}*/
				
			if (useAvgDistMagn=='Y') {
				structArray[marginStructureId] = document.getElementById("distProfitMargin_"+i).value;
			}

			prevUseAvgDistMagn=useAvgDistMagn;	// setting Previous Value
		}
		// find the Scheme Value
		var totalScheme = 0;
		for (key in structArray) {
			for (i=1; i<=hidFieldRowCount; i++) {
				var useAvgDistMagn = document.getElementById("useAvgDistMagn_"+i).value;
				var schemeChk	= document.getElementById("schemeChk_"+i).value;
				var selSchemeHeadId = document.getElementById("selSchemeHeadId_"+i).value;
				var distMarginPercent = parseFloat(document.getElementById("distMarginPercent_"+i).value);
				if (useAvgDistMagn=='N' && schemeChk=='Y') {
					//alert(key+"=>"+structArray[key]+"="+selSchemeHeadId);
					calcValue = parseFloat(structArray[key]*(distMarginPercent/100) ) 
					if (key==selSchemeHeadId) {				
						document.getElementById("distProfitMargin_"+i).value=number_format(calcValue,2,'.','');
						totalScheme += calcValue;
					}
					
				}
			}			
		}
		// Struct Magn Cost Defining End ////////////
		var costToDistOrStkist = parseFloat(document.getElementById("costToDistOrStkist").value);

		//Act Distn Cost
		var calcActualDistnCost = parseFloat(document.getElementById("costToDistOrStkist").value)-totalScheme;
		if (!isNaN(calcActualDistnCost)) {
			document.getElementById("actualDistnCost").value = number_format(calcActualDistnCost,2,'.','');
		}

		// Octroi
		var calcOctroi = 0;
		var octroiPercent = parseFloat(document.getElementById("octroiPercent").value);
		calcOctroi = costToDistOrStkist * (octroiPercent/100);
		if (!isNaN(calcOctroi)) {
			document.getElementById("octroi").value = number_format(calcOctroi,2,'.','');
		}

		//Insurance
		var calcInsurance = 0;
		var insuranceCost = parseFloat(document.getElementById("insuranceCost").value);
		calcInsurance = costToDistOrStkist * (insuranceCost/100);
		if (!isNaN(calcInsurance)) {
			document.getElementById("insurance").value = number_format(calcInsurance,2,'.','');
		}
		
		//VAT / CST
		var calcVatOrCST = 0;
		var taxType = document.getElementById("taxType").value;
		var vatPercent = parseFloat(document.getElementById("vatPercent").value);
		var billingFormF = document.getElementById("billingFormF").value;
		var hidCstRate = parseFloat(document.getElementById("hidCstRate").value);
		if (taxType=='VAT') {
			calcVatOrCST = costToDistOrStkist-costToDistOrStkist/(1+(vatPercent/100));
		} else if (billingFormF=='N') {
			calcVatOrCST = costToDistOrStkist-costToDistOrStkist/(1+(hidCstRate/100));
		} else {
			calcVatOrCST = 0;	
		}
		if (!isNaN(calcVatOrCST)) {
			document.getElementById("vatOrCst").value = number_format(calcVatOrCST,2,'.','');
		}

		// Excise 
		var calcExcise = 0;
		var productExciseRatePercent = parseFloat(document.getElementById("productExciseRatePercent").value);
		
		var vatOrCst = parseFloat(document.getElementById("vatOrCst").value);
		if (productExciseRatePercent>0) {
			calcExcise = costToDistOrStkist-vatOrCst-(costToDistOrStkist-vatOrCst)/(1+(productExciseRatePercent/100));
		} 

		if (!isNaN(calcExcise)) {
			document.getElementById("excise").value = number_format(calcExcise,2,'.','');
		}

		// EducationCess
		var calcEduactionCess = 0;
		var educationCess = parseFloat(document.getElementById("educationCess").value);
		var excise = parseFloat(document.getElementById("excise").value);
		calcEduactionCess = excise * educationCess;
		if (!isNaN(calcEduactionCess)) {
			document.getElementById("eduCess").value = number_format(calcEduactionCess,2,'.','');
		}

		// Basic Cost
		var calcBasicCost = 0;
		var actualDistnCost 	= parseFloat(document.getElementById("actualDistnCost").value);
		var octroi 		= parseFloat(document.getElementById("octroi").value);
		var freight		= parseFloat(document.getElementById("freight").value);
		var insurance 		= parseFloat(document.getElementById("insurance").value);
		var vatOrCst 		= parseFloat(document.getElementById("vatOrCst").value);
		var excise 		= parseFloat(document.getElementById("excise").value);
		var eduCess 		= parseFloat(document.getElementById("eduCess").value);
		calcBasicCost = actualDistnCost-(octroi+freight+insurance+vatOrCst+excise+eduCess);
		if (!isNaN(calcBasicCost)) {
			document.getElementById("basicCost").value = number_format(calcBasicCost,2,'.','');
		}

		//Cost Margin
		var calcCostMargin = 0;
		var basicCost = parseFloat(document.getElementById("basicCost").value);
		calcCostMargin = basicCost-factoryCost;
		if (!isNaN(calcCostMargin)) {
			document.getElementById("costMargin").value = number_format(calcCostMargin,2,'.','');
		}

		//Actual Profit Margin
		var calcActualProfitMgn = 0;
		var factoryProfitMargin = parseFloat(document.getElementById("factoryProfitMargin").value);
		var costMargin = parseFloat(document.getElementById("costMargin").value);
		calcActualProfitMgn = costMargin+factoryProfitMargin;
		if (!isNaN(calcActualProfitMgn)) {
			document.getElementById("actualProfitMgn").value = number_format(calcActualProfitMgn,2,'.','');
		}
		
		// On MRP
		var calcOnMrpPercent = 0;
		var actualProfitMgn = parseFloat(document.getElementById("actualProfitMgn").value);
		calcOnMrpPercent = actualProfitMgn/mrp;
		if (!isNaN(calcOnMrpPercent)) {
			document.getElementById("onMrp").value = number_format(calcOnMrpPercent,2,'.','');
		}

		// On Factory Cost
		var calcOnFactoryCost = 0;
		var calcOnFactoryCost = actualProfitMgn/factoryCost;
		if (!isNaN(calcOnFactoryCost)) {
			document.getElementById("onFactoryCost").value = number_format(calcOnFactoryCost,2,'.','');
		}
	}
}function validateRetailCounterStock(form)
{
	var productSelected	= false;
	var selDate		= form.selDate.value;	
	var selDistributor	= form.selDistributor.value;	
	var selRetailCounter	= form.selRetailCounter.value;
	var editMode		= form.editMode.value;
	
	if (selDate=="") {
		alert("Please select a date.");
		form.selDate.focus();
		return false;
	}

	if (selDistributor=="") {
		alert("Please select a Distributor.");
		form.selDistributor.focus();
		return false;
	}

	if (selRetailCounter=="") {
		alert("Please select a Retail Counter.");
		form.selRetailCounter.focus();
		return false;
	}

	var itemCount	=	document.getElementById("hidItemCount").value;

	for (i=0; i<itemCount; i++) {

		var selProduct	  =	document.getElementById("selProduct_"+i);
		var availableQty  =	document.getElementById("availableQty_"+i);
		var usedQty	  =	document.getElementById("usedQty_"+i);
					
		if (selProduct.value!="") {	
			if (selProduct.value == "") {
				alert("Please select a Product.");
				selProduct.focus();
				return false;
			}

			if (availableQty.value == "") {
				alert("Please enter available Quantity.");
				availableQty.focus();
				return false;
			}
			if (usedQty.value == "") {
				alert("Please enter used Quantity.");
				usedQty.focus();
				return false;
			}
			productSelected = true;
		}					
	}
	if (!productSelected) {
		alert("Please select atleast one Product");
		return false;
	}	

	if (!validateRetailCounterProductRepeat()) {
		return false;
	}

	if (!confirmSave()) {
		return false;
	}
	return true;
}

//Validate repeated
function validateRetailCounterProductRepeat()
{
	
	if (Array.indexOf != 'function') {  
		Array.prototype.indexOf = function(f, s) {
		if (typeof s == 'undefined') s = 0;
			for (var i = s; i < this.length; i++) {   
			if (f === this[i]) return i; 
			} 
		return -1;  
		}
	}
	
    var rc = document.getElementById("hidItemCount").value;
    var prevOrder = 0;
    var arr = new Array();
    var arri=0;

    for( j=0; j<rc; j++ )    {
        var rv = document.getElementById("selProduct_"+j).value;
        if ( arr.indexOf(rv) != -1 )    {
            alert("Please make sure the selected product is not duplicate.");
            document.getElementById("selProduct_"+j).focus();
            return false;
        }
        arr[arri++]=rv;
    }
    return true;
}

//Add a New Line 
function retailCounterStockRecNewLine()
{
	document.frmRetailCounterStock.newline.value = '1';
	document.frmRetailCounterStock.submit();
}

// Find the total Amount
function balanceRetailCounterStock()
{
	var rowCount = document.getElementById("hidItemCount").value;	
	var totalAmount = 0;
	
	var calcBalanceQty = 0;
	for (i=0; i<rowCount; i++) {
		var availableQty = 0;
		var usedQty = 0;
		var selProduct = document.getElementById("selProduct_"+i).value;
		if (document.getElementById("availableQty_"+i).value!="") {
			availableQty = parseFloat(document.getElementById("availableQty_"+i).value);
		}
		if (document.getElementById("usedQty_"+i).value!="") {
			usedQty = parseFloat(document.getElementById("usedQty_"+i).value);
		}
		
		if (selProduct!="") {
			calcBalanceQty = availableQty-usedQty;	// Find Each Row Amount		
		} else {
			calcBalanceQty = 0;
		}
		if (!isNaN(calcBalanceQty)) {
			document.getElementById("balanceQty_"+i).value = number_format(calcBalanceQty,2,'.','');
		} 
	}	
}function ValidateUpdate(form)
{
	
	var startNumberPrefix = "StartNumber_";
	var endNumberPrefix = "EndNumber_";
	var rowCount = document.getElementById("RowCount").value;

	for( i=1; i<=rowCount; i++ )
	{
		if( document.getElementById("StartNumber_"+i).value=="" )
		{
			alert("Please enter a Start Number.");
			document.getElementById("StartNumber_"+i).focus();
			return false;
		}
		else if( isNaN(document.getElementById("StartNumber_"+i).value)  || !isDigit(document.getElementById("StartNumber_"+i).value))
		{
			alert("Please enter a valid Start Number.");
			document.getElementById("StartNumber_"+i).value = "";
			document.getElementById("StartNumber_"+i).focus();
			return false;
		} 

		if( document.getElementById("EndNumber_"+i).value=="" )
		{
			alert("Please enter a End Number.");
			document.getElementById("EndNumber_"+i).focus();
			return false;
		}
		else if( isNaN(document.getElementById("EndNumber_"+i).value) || !isDigit(document.getElementById("EndNumber_"+i).value))
		{
			alert("Please enter a valid End Number.");
			document.getElementById("EndNumber_"+i).value = "";
			document.getElementById("EndNumber_"+i).focus();
			return false;
		}
		var startn = document.getElementById("StartNumber_"+i).value;
		var endn = document.getElementById("EndNumber_"+i).value;

		if( parseInt(startn) > parseInt(endn) )
		{
			alert("The starting numer should be less than ending number.");
			document.getElementById("StartNumber_"+i).focus();
			return false;
		}
	}

	if( confirm("Do you wish to save the changes?") ) return true;
	return false;		
}	// Bulk Update
	function validateStockHoldingCostReport()
	{				
		var excessStockTolerance = document.getElementById("excessStockTolerance").value;
		
		if (!isDigit(excessStockTolerance) || excessStockTolerance>100) {
			alert("Please enter stock tolerance percentage between 1 to 100");
			document.getElementById("excessStockTolerance").focus();
			return false;
		}
		return true;
	}

